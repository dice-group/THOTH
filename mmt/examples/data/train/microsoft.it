Visualizzare una finestra Informazioni su per un controllo ActiveX
Per visualizzare la finestra Informazioni su contenente le informazioni sulla versione e sul copyright per un controllo ActiveX , fare clic nella casella della proprietà Informazioni su nella finestra delle proprietà di Microsoft Access, quindi fare clic sul pulsante dei generatori a destra della casella della proprietà.
La casella della proprietà e la finestra Informazioni su non sono disponibili per i controlli ActiveX in una pagina di accesso ai dati .
Finestra di dialogo Proprietà personalizzate del controllo ActiveX
Quando si impostano le proprietà di un controllo ActiveX , è possibile utilizzare la finestra di dialogo delle proprietà personalizzata del controllo. Tale finestra di dialogo costituisce un'alternativa all'elenco delle proprietà contenuto nella finestra delle proprietà di Microsoft Access per impostare le proprietà dei controlli ActiveX in visualizzazione Struttura .
Quando si impostano le proprietà di un controllo ActiveX , è possibile utilizzare la finestra di dialogo delle proprietà personalizzata del controllo.
Tale finestra di dialogo costituisce un'alternativa all'elenco delle proprietà contenuto nella finestra delle proprietà di Microsoft Access per impostare le proprietà dei controlli ActiveX in visualizzazione Struttura .
Queste informazioni si applicano solo ai controlli ActiveX in un database di Microsoft Access (mdb).
Due modi per impostare le proprietà
La finestra di dialogo delle proprietà personalizzata è utile poiché non tutte le applicazioni che utilizzano controlli ActiveX dispongono di una finestra delle proprietà come quella di Microsoft Access.
La finestra di dialogo delle proprietà personalizzata fornisce un'interfaccia per impostare le proprietà dei controlli chiave indipendentemente dall'interfaccia di cui dispone l'applicazione principale.
Per impostare alcune proprietà dei controlli ActiveX, è possibile scegliere una delle posizioni seguenti:
Finestra delle proprietà di Microsoft Access.
Finestra di dialogo delle proprietà personalizzate per il controllo ActiveX.
In alcuni casi la finestra di dialogo delle proprietà personalizzata è l'unico modo disponibile per impostare una proprietà in Visualizzazione Struttura, ad esempio quando l'interfaccia necessaria per impostare una proprietà non è disponibile all'interno della finestra delle proprietà di Microsoft Access. Nel caso della proprietà GridFont per il Controllo calendario, questa dispone di vari argomenti, mentre nella finestra delle proprietà di Microsoft Access non è possibile impostare più di un argomento per ogni proprietà.
Ricerca della finestra di dialogo Proprietà personalizzate
Non tutti i controlli ActiveX dispongono di una finestra di dialogo delle proprietà personalizzate. Per verificare se un controllo dispone di una finestra di dialogo delle proprietà personalizzate, cercare la proprietà Custom nella finestra delle proprietà di Microsoft Access relativa al controllo. Se nell'elenco delle proprietà è incluso il nome Custom , il controllo dispone di una finestra di dialogo delle proprietà personalizzate.
Non tutti i controlli ActiveX dispongono di una finestra di dialogo delle proprietà personalizzate.
Per ulteriori informazioni sulla gestione di errori di run-time in VBA, vedere Gestione degli errori di run-time .
Se nell'elenco delle proprietà è incluso il nome Custom , il controllo dispone di una finestra di dialogo delle proprietà personalizzate.
Utilizzo della finestra di dialogo Proprietà personalizzate
Dopo aver selezionato la casella della proprietà Custom nella finestra delle proprietà di Microsoft Access, fare clic sul pulsante dei generatori a destra della casella della proprietà per visualizzare la finestra di dialogo delle proprietà personalizzata per il controllo, spesso rappresentata come finestra di dialogo suddivisa in schede. Scegliere la scheda con l'interfaccia necessaria per impostare le proprietà desiderate.
L'oggetto MacroError non include informazioni sugli errori di run-time che si verificano durante l'esecuzione di codice di Visual Basic, Applications Edition (VBA) . Per ulteriori informazioni sulla gestione di errori di run-time in VBA, vedere Gestione degli errori di run-time .
L'oggetto MacroError non include informazioni sugli errori di run-time che si verificano durante l'esecuzione di codice di Visual Basic, Applications Edition (VBA) .
Dopo aver selezionato la casella della proprietà Custom nella finestra delle proprietà di Microsoft Access, fare clic sul pulsante dei generatori a destra della casella della proprietà per visualizzare la finestra di dialogo delle proprietà personalizzata per il controllo, spesso rappresentata come finestra di dialogo suddivisa in schede.
L'oggetto MacroError include informazioni relative a un solo errore alla volta. Se in una macro si verificano più errori, l'oggetto MacroError include informazioni solo sull'ultimo errore.
L'oggetto MacroError include informazioni relative a un solo errore alla volta.
Scegliere la scheda con l'interfaccia necessaria per l'impostazione delle proprietà desiderate.
Dopo aver apportato le modifiche a una scheda, spesso è possibile applicarle immediatamente scegliendo il pulsante Applica , se è disponibile. Se è necessario, è possibile fare clic su altre schede per impostare altre proprietà. Per approvare tutte le modifiche apportate nella finestra di dialogo delle proprietà personalizzata, scegliere OK . Per tornare alla finestra delle proprietà di Microsoft Access senza modificare le impostazioni delle proprietà, scegliere Annulla .
Dopo aver apportato le modifiche a una scheda, spesso è possibile applicarle immediatamente scegliendo il pulsante Applica , se è disponibile.
Se è necessario, è possibile fare clic su altre schede per impostare altre proprietà.
Per approvare tutte le modifiche apportate nella finestra di dialogo delle proprietà personalizzata, scegliere OK .
Per tornare alla finestra delle proprietà di Microsoft Access senza modificare le impostazioni delle proprietà, scegliere Annulla .
È inoltre possibile visualizzare la finestra di dialogo delle proprietà personalizzate scegliendo il sottocomando Proprietà del comando Oggetto del controllo ActiveX, ad esempio Oggetto Controllo calendario , dal menu Modifica oppure scegliendo lo stesso sottocomando dal menu di scelta rapida del controllo ActiveX. Alcune proprietà della finestra delle proprietà di Microsoft Access per il controllo ActiveX, ad esempio la proprietà GridFontColor del Controllo calendario, dispongono inoltre di un pulsante dei generatori situato a destra della casella della proprietà. Quando si fa clic su tale pulsante, viene visualizzata la finestra di dialogo delle proprietà personalizzate, con la scheda appropriata selezionata, ad esempio quella relativa al colore.
È inoltre possibile visualizzare la finestra di dialogo delle proprietà personalizzate scegliendo il sottocomando Proprietà del comando Oggetto del controllo ActiveX, ad esempio Oggetto Controllo calendario , dal menu Modifica oppure scegliendo lo stesso sottocomando dal menu di scelta rapida del controllo ActiveX.
Alcune proprietà della finestra delle proprietà di Microsoft Access per il controllo ActiveX, ad esempio la proprietà GridFontColor del Controllo calendario, dispongono inoltre di un pulsante dei generatori situato a destra della casella della proprietà.
Quando si fa clic su tale pulsante, viene visualizzata la finestra di dialogo delle proprietà personalizzate, con la scheda appropriata selezionata, ad esempio quella relativa al colore.
Insieme AccessObjectProperties
L'insieme AccessObjectProperties include tutti gli oggetti AccessObjectProperty personalizzati di una specifica istanza di un oggetto. Tali oggetti AccessObjectProperty , spesso definiti proprietà, caratterizzano in modo univoco l'istanza dell'oggetto.
Utilizzare l'insieme AccessObjectProperties in Visual Basic o in un'espressione per fare riferimento alle proprietà dell'oggetto CurrentProject , CodeProject o AccessObject . È possibile, ad esempio, enumerare l'insieme AccessObjectProperties per impostare o restituire i valori delle proprietà di un singolo report.
L'insieme AccessObjectProperties include tutti gli oggetti AccessObjectProperty personalizzati di una specifica istanza di un oggetto.
Utilizzare l'insieme AccessObjectProperties in Visual Basic o in un'espressione per fare riferimento alle proprietà dell'oggetto CurrentProject , CodeProject o AccessObject .
L'insieme AccessObjectProperties non è accessibile per gli oggetti derivati dall'oggetto CurrentData , ad esempio CurrentData.AllTables!Table1 . Per gli oggetti derivati in questo modo, è possibile accedere alle relative proprietà predefinite tramite chiamate dirette alla proprietà desiderata, ad esempio CurrentData.AllTables!Table1.Name .
L'insieme AccessObjectProperties non è accessibile per gli oggetti derivati dall'oggetto CurrentData , ad esempio CurrentData.AllTables!Table1 .
Per gli oggetti derivati in questo modo, è possibile accedere alle relative proprietà predefinite tramite chiamate dirette alla proprietà desiderata, ad esempio CurrentData.AllTables!Table1.Name .
Per aggiungere una proprietà definita dall'utente a un'istanza esistente di un oggetto, è necessario definirne innanzitutto le caratteristiche, quindi aggiungerla all'insieme tramite il metodo Add . Se si fa riferimento a un oggetto AccessObjectProperty definito dall'utente che non sia stato ancora accodato a un insieme AccessObjectProperties , verrà generato un errore. Verrà generato un errore anche se si accoda un oggetto AccessObjectProperty definito dall'utente a un insieme AccessObjectProperties contenente un oggetto AccessObjectProperty avente lo stesso nome.
Tramite le stesse forme sintattiche è inoltre possibile fare riferimento alla proprietà Value di un oggetto AccessObjectProperty . Il contesto del riferimento determinerà se si fa riferimento all'oggetto AccessObjectProperty oppure alla proprietà Value dell'oggetto AccessObjectProperty .
Tramite le stesse forme sintattiche è inoltre possibile fare riferimento alla proprietà Value di un oggetto AccessObjectProperty .
Oggetti CodeData , CodeProject , CurrentProject e CurrentData .
Tali oggetti AccessObjectProperty , spesso definiti proprietà, caratterizzano in modo univoco l'istanza dell'oggetto.
Utilizzo dell'insieme AccessObjectProperties
Utilizzare l'insieme AccessObjectProperties in Visual Basic o in un' espressione per fare riferimento alle proprietà dell'oggetto CurrentProject , CodeProject o AccessObject . È possibile ad esempio enumerare l'insieme AccessObjectProperties per impostare o restituire i valori delle proprietà di un singolo report.
Utilizzare l'insieme AccessObjectProperties in Visual Basic o in un' espressione per fare riferimento alle proprietà dell'oggetto CurrentProject , CodeProject o AccessObject .
È possibile, ad esempio, enumerare l'insieme AccessObjectProperties per impostare o restituire i valori delle proprietà di un singolo report.
L'insieme AccessObjectProperties non è accessibile per gli oggetti derivati dall'oggetto CurrentData , ad esempio CurrentData.AllTables!Table1. Per gli oggetti derivati in questo modo, è possibile accedere alle relative proprietà predefinite solo tramite chiamate dirette alla proprietà desiderata ad esempio, CurrentData.AllTables!Table1.Name.
L'insieme AccessObjectProperties non è accessibile per gli oggetti derivati dall'oggetto CurrentData , ad esempio CurrentData.AllTables!Table1.
Per gli oggetti derivati in questo modo, è possibile accedere alle relative proprietà predefinite solo tramite chiamate dirette alla proprietà desiderata ad esempio, CurrentData.AllTables!Table1.Name.
Per aggiungere una proprietà definita dall'utente a un'istanza esistente di un oggetto, è necessario definirne innanzitutto le caratteristiche, quindi aggiungerla all'insieme con il metodo Add . Il riferimento a un oggetto AccessObjectProperty definito dall'utente che non sia stato ancora accodato a un insieme AccessObjectProperties genera un errore. Ad esempio, se si aggiunge un oggetto AccessObjectProperty definito dall'utente a un insieme AccessObjectProperties contenente un oggetto AccessObjectProperty con lo stesso nome, verrà generato un errore.
È possibile utilizzare il metodo Remove per rimuovere le proprietà definite dall'utente dall'insieme AccessObjectProperties .
Proprietà Name , un valore di tipo String che identifica la proprietà in modo univoco.
Un oggetto AccessObject fa riferimento a un oggetto di Microsoft Access specifico.
Un oggetto AccessObjectProperty incorporato o definito dall'utente è associato solo alla specifica istanza di un oggetto. La proprietà non è definita per tutte le istanze di oggetti del tipo selezionato.
Un oggetto AccessObjectProperty incorporato o definito dall'utente è associato solo alla specifica istanza di un oggetto.
La proprietà non viene definita per tutte le istanze dell'oggetto del tipo selezionato.
Per fare riferimento a un oggetto Property incorporato in un insieme in base al numero ordinale oppure in base all'impostazione della relativa proprietà Name , utilizzare una delle forme sintattiche seguenti:
oggetto . Properties (0)
oggetto . Properties ( nome )
Per fare riferimento a un oggetto AccessObjectProperty incorporato o definito dall'utente in base al numero ordinale o all'impostazione della relativa proprietà Name , utilizzare una delle seguenti forme sintattiche:
Con le stesse forme sintattiche, è anche possibile fare riferimento alla proprietà Value di un oggetto AccessObjectProperty . Il contesto del riferimento determina se si fa riferimento all'oggetto AccessObjectProperty o invece alla proprietà Value dell'oggetto AccessObjectProperty .
Con le stesse forme sintattiche, è anche possibile fare riferimento alla proprietà Value di un oggetto AccessObjectProperty .
Il contesto del riferimento determina se si fa riferimento all'oggetto AccessObjectProperty o invece alla proprietà Value dell'oggetto AccessObjectProperty .
Le proprietà dell'insieme AccessObjectProperties non vengono memorizzate e possono andare perdute quando l'oggetto a cui sono associate viene attivato o disattivato utilizzando il componente aggiuntivo Controllo del codice sorgente.
Insieme AllDataAccessPages
L'insieme AllDataAccessPages contiene un oggetto AccessObject per ogni pagina di accesso ai dati presente nell'oggetto CurrentProject o CodeProject .
Sebbene un progetto di Microsoft Access (adp) o un database di Microsoft Access (mdb) sembri includere pagine di accesso ai dati, tali pagine sono memorizzate in realtà in file esterni al progetto o al database.
Utilizzo dell'insieme AllDataAccessPages
L'oggetto CurrentProject o CodeProject dispone di un insieme AllDataAccessPages contenente oggetti AccessObject che descrivono le istanze di tutte le pagine di accesso ai dati. È possibile ad esempio enumerare l'insieme AllDataAccessPages in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentProject o CodeProject dispone di un insieme AllDataAccessPages contenente oggetti AccessObject che descrivono le istanze di tutte le pagine di accesso ai dati.
È possibile ad esempio enumerare l'insieme AllDataAccessPages in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'istruzione For Each...Next risulta particolarmente utile per l'enumerazione di un insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllDataAccessPages utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata pagina di accesso ai dati dell'insieme AllDataAccessPages , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllDataAccessPages utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata pagina di accesso ai dati dell'insieme AllDataAccessPages , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllDataAccessPages è indicizzato a partire da zero. Se si fa riferimento a una pagina di accesso ai dati mediante il relativo indice, la prima pagina di accesso ai dati sarà AllDataAccessPages(0), la seconda sarà AllDataAccessPages(1), e così via.
L'insieme AllDataAccessPages è indicizzato a partire da zero.
Se si fa riferimento a una pagina di accesso ai dati mediante il relativo indice, la prima pagina di accesso ai dati sarà AllDataAccessPages(0), la seconda sarà AllDataAccessPages(1), e così via.
Per elencare tutte le pagine di accesso ai dati aperte del database, utilizzare la proprietà IsLoaded di ciascun oggetto AccessObject dell'insieme AllDataAccessPages . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una pagina di accesso ai dati.
Per elencare tutte le pagine di accesso ai dati aperte del database, utilizzare la proprietà IsLoaded di ciascun oggetto AccessObject dell'insieme AllDataAccessPages .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una pagina di accesso ai dati.
Non è possibile aggiungere o eliminare un oggetto AccessObject dall'insieme AllDataAccessPages .
Nel seguente esempio viene stampato il nome di ciascun oggetto AccessObject aperto nell'insieme AllDataAccessPages .
Insieme AllDatabaseDiagrams
L'insieme AllDatabaseDiagrams contiene un oggetto AccessObject per ogni diagramma di database presente nell'oggetto CurrentData o CodeData .
Utilizzo dell'insieme AllDatabaseDiagrams
L'oggetto CurrentData o CodeData dispone di un insieme AllDatabaseDiagrams contenente oggetti AccessObject che descrivono le istanze di tutti i diagrammi di database specificati da CurrentData o CodeData . È possibile ad esempio enumerare l'insieme AllDatabaseDiagrams in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentData o CodeData dispone di un insieme AllDatabaseDiagrams contenente oggetti AccessObject che descrivono le istanze di tutti i diagrammi di database specificati da CurrentData o CodeData .
È possibile ad esempio enumerare l'insieme AllDatabaseDiagrams in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllDatabaseDiagrams utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a un determinato diagramma di database dell'insieme AllDatabaseDiagrams , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllDatabaseDiagrams utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a un determinato diagramma di database dell'insieme AllDatabaseDiagrams , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllDatabaseDiagrams è indicizzato a partire da zero. Se si fa riferimento a un diagramma di database mediante il relativo indice, il primo diagramma di database sarà AllDatabaseDiagrams(0), il secondo sarà AllDatabaseDiagrams(1), e così via.
L'insieme AllDatabaseDiagrams è indicizzato a partire da zero.
Se si fa riferimento a un diagramma di database mediante il relativo indice, il primo diagramma di database sarà AllDatabaseDiagrams(0), il secondo sarà AllDatabaseDiagrams(1), e così via.
L'insieme AllDatabaseDiagrams contiene solo oggetti AccessObject di un progetto di Microsoft Access (adp). Un database di Microsoft Access (mdb) non contiene diagrammi di database.
L'insieme AllDatabaseDiagrams contiene solo oggetti AccessObject di un progetto di Microsoft Access (adp).
Un database di Microsoft Access (mdb) non contiene diagrammi di database.
Per elencare tutti i diagrammi di database aperti nel progetto, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllDatabaseDiagrams . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di un diagramma di database.
L'insieme AllQueries contiene solo oggetti AccessObject di un database di Microsoft Access . Un progetto di Microsoft Access (adp) non contiene alcuna macro. Vedere l'insieme AllViews .
Per elencare tutte le query aperte del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllQueries . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una query.
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una query.
L'insieme AllStoredProcedures contiene solo oggetti AccessObject di un progetto di Microsoft Access (adp). Un database di Microsoft Access non contiene alcuna stored procedure. Vedere l'insieme AllMacros .
Per elencare tutti i diagrammi di database aperti nel progetto, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllDatabaseDiagrams .
Quando si seleziona o si deseleziona una casella di controllo associata a un campo Sì/No, viene visualizzato il valore disponibile nella tabella sottostante in base alle impostazioni della proprietà Format del campo (Sì/No, Vero/Falso o On/Off).
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di un diagramma di database.
Non è possibile aggiungere o eliminare un oggetto AccessObject dall'insieme AllDatabaseDiagrams .
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllDatabaseDiagrams .
Insieme AllForms
L'insieme AllForms contiene un oggetto AccessObject per ogni maschera presente nell'oggetto CurrentProject o CodeProject .
Utilizzo dell'insieme AllForms
L'oggetto CurrentProject o CodeProject dispone di un insieme AllForms contenente oggetti AccessObject che descrivono le istanze di tutte le maschere del database. È possibile ad esempio enumerare l'insieme AllForms in Visual Basic per impostare o restituire i valori delle proprietà di singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentProject o CodeProject dispone di un insieme AllForms contenente oggetti AccessObject che descrivono le istanze di tutte le maschere del database.
È possibile ad esempio enumerare l'insieme AllForms in Visual Basic per impostare o restituire i valori delle proprietà di singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllForms utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata maschera dell'insieme AllForms , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllForms utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata maschera dell'insieme AllForms , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllForms è indicizzato a partire da zero. Se si fa riferimento a una maschera mediante il relativo indice, la prima maschera sarà AllForms(0), la seconda sarà AllForms(1), e così via.
L'insieme AllForms è indicizzato a partire da zero.
Se si fa riferimento a una maschera mediante il relativo indice, la prima maschera sarà AllForms(0), la seconda sarà AllForms(1), e così via.
Per elencare tutte le maschere aperte del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllForms . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una maschera.
Per elencare tutte le maschere aperte del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllForms .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una maschera.
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllForms .
Controllo Casella di controllo
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllForms .
Insieme AllMacros
L'insieme AllMacros contiene un oggetto AccessObject per ogni macro presente nell'oggetto CurrentProject o CodeProject .
Utilizzo dell'insieme AllMacros
L'oggetto CurrentProject o CodeProject dispone di un insieme AllMacros contenente oggetti AccessObject che descrivono le istanze di tutte le macro specificate da CurrentProject o CodeProject . È possibile ad esempio enumerare l'insieme AllMacros in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentProject o CodeProject dispone di un insieme AllMacros contenente oggetti AccessObject che descrivono le istanze di tutte le macro specificate da CurrentProject o CodeProject .
È possibile ad esempio enumerare l'insieme AllMacros in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllMacros utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata macro dell'insieme AllMacros , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllMacros utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata macro dell'insieme AllMacros , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllMacros è indicizzato a partire da zero. Se si fa riferimento a una macro mediante il relativo indice, la prima macro sarà AllMacros(0), la seconda sarà AllMacros(1), e così via.
L'insieme AllMacros è indicizzato a partire da zero.
Se si fa riferimento a una macro mediante il relativo indice, la prima macro sarà AllMacros(0), la seconda sarà AllMacros(1), e così via.
Per elencare tutte le macro aperte del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllMacros . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una macro.
Per elencare tutte le macro aperte del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllMacros .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una macro.
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllMacros .
Un controllo associato è un controllo di una maschera o di un report i cui contenuti derivano da un campo della tabella, query o istruzione SQL sottostante. La proprietà ControlSource del controllo è impostata su un nome di campo della tabella, query o istruzione SQL. Ad esempio, una casella di testo che visualizza il cognome di un dipendente è associata al campo Cognome della tabella Dipendenti.
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllMacros .
Insieme AllModules
L'insieme AllModules contiene un oggetto AccessObject per ogni modulo presente nell'oggetto CurrentProject o CodeProject .
Utilizzo dell'insieme AllModules
L'oggetto CurrentProject o CodeProject dispone di un insieme AllModules contenente oggetti AccessObject che descrivono le istanze di tutti gli oggetti Module specificati da CurrentProject o CodeProject . È possibile ad esempio enumerare l'insieme AllModules in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentProject o CodeProject dispone di un insieme AllModules contenente oggetti AccessObject che descrivono le istanze di tutti gli oggetti Module specificati da CurrentProject o CodeProject .
È possibile ad esempio enumerare l'insieme AllModules in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllModules utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a un determinato modulo dell'insieme AllModules , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllModules utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a un determinato modulo dell'insieme AllModules , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllModules è indicizzato a partire da zero. Se si fa riferimento a un modulo mediante il relativo indice, il primo modulo sarà AllModules(0), il secondo sarà AllModules(1), e così via.
L'insieme AllModules è indicizzato a partire da zero.
Se si fa riferimento a un modulo mediante il relativo indice, il primo modulo sarà AllModules(0), il secondo sarà AllModules(1), e così via.
Per elencare tutti i moduli aperti del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllModules . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di un modulo.
Oltre ai controlli predefiniti disponibili nella casella degli strumenti, in Microsoft Access sono supportati i controlli ActiveX, precedentemente definiti controlli personalizzati o OLE. Il controllo ActiveX, come qualsiasi controllo predefinito, è un oggetto che è possibile includere in una maschera per consentire o migliorare l'interazione dell'utente con l'applicazione. I controlli ActiveX dispongono di eventi e possono essere incorporati in altri controlli con estensione dll o ocx. Il controllo Calendario rappresenta un esempio di controllo ActiveX.
Per elencare tutti i moduli aperti del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllModules .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di un modulo.
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllModules .
Controllo ActiveX
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllModules .
Insieme AllQueries
L'insieme AllQueries contiene un oggetto AccessObject per ogni query presente nell'oggetto CurrentData o CodeData .
Utilizzo dell'insieme AllQueries
L'oggetto CurrentData o CodeData presenta un insieme AllQueries contenente oggetti AccessObject che descrivono le istanze di tutte le query specificate da CurrentData o CodeData . È possibile ad esempio enumerare l'insieme AllQueries in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentData o CodeData presenta un insieme AllQueries contenente oggetti AccessObject che descrivono le istanze di tutte le query specificate da CurrentData o CodeData .
È possibile ad esempio enumerare l'insieme AllQueries in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllQueries utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata query dell'insieme AllQueries , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllQueries utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata query dell'insieme AllQueries , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllQueries è indicizzato a partire da zero. Se si fa riferimento a una query mediante il relativo indice, la prima query sarà AllQueries(0), la seconda sarà AllQueries(1), e così via.
L'insieme AllQueries è indicizzato a partire da zero.
Se si fa riferimento a una query mediante il relativo indice, la prima query sarà AllQueries(0), la seconda sarà AllQueries(1), e così via.
L'insieme AllQueries contiene solo oggetti AccessObject di un database di Microsoft Access (mdb). Un progetto di Microsoft Access (adp) non contiene alcuna macro. Vedere l'insieme AllViews .
Per elencare tutte le query aperte del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllQueries . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una query.
Per elencare tutte le query aperte del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllQueries .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una query.
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllQueries .
Ad esempio, è possibile utilizzare Null per impostare la proprietà DefaultValue per il controllo di una maschera utilizzando l'espressione seguente:
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllQueries .
Insieme AllReports
L'insieme AllReports contiene un oggetto AccessObject per ogni report presente nell'oggetto CurrentProject o CodeProject .
Utilizzo dell'insieme AllReports
L'oggetto CurrentProject o CodeProject dispone di un insieme AllReports contenente oggetti AccessObject che descrivono le istanze di tutti i report del database. È possibile ad esempio enumerare l'insieme AllReports in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentProject o CodeProject dispone di un insieme AllReports contenente oggetti AccessObject che descrivono le istanze di tutti i report del database.
È possibile ad esempio enumerare l'insieme AllReports in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllReports utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a un determinato report dell'insieme AllReports , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllReports utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a un determinato report dell'insieme AllReports , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllReports è indicizzato a partire da zero. Se si fa riferimento a un report mediante il relativo indice, il primo report sarà AllReports(0), il secondo sarà AllReports(1), e così via.
L'insieme AllReports è indicizzato a partire da zero.
Se si fa riferimento a un report mediante il relativo indice, il primo report sarà AllReports(0), il secondo sarà AllReports(1), e così via.
Per elencare tutti i report aperti del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllReports . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di un report.
Per elencare tutti i report aperti del database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllReports .
È quindi possibile utilizzare la proprietà Name di ciascun oggetto AccessObject per restituire il nome di un report.
Maschere
È possibile utilizzare le costanti definite dal sistema True , False e Null in qualsiasi posizione in Microsoft Access. Ad esempio, è possibile utilizzare la costante True nell'espressione di condizione di macro seguente. La condizione viene soddisfatta se l'impostazione della proprietà Visible per la maschera Employees è uguale a True .
Non è possibile aggiungere o eliminare un oggetto Report a o dall'insieme Reports .
Automazione con Microsoft Access
Microsoft Access è un componente COM che supporta l' automazione , denominata in precedenza automazione OLE. In Microsoft Access l'automazione viene supportata in due modi: è possibile utilizzare oggetti implementati da un altro componente o implementare oggetti in altri componenti COM.
La proprietà ControlSource del controllo è impostata su un nome di campo della tabella, query o istruzione SQL.
Controllo Grafico
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllReports .
Per elencare tutte le stored procedure aperte del progetto, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllStoredProcedures . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una stored procedure.
L'insieme AllViews contiene un oggetto AccessObject per ogni visualizzazione presente nell'oggetto CurrentDa\ta o CodeData .
L'insieme AllViews contiene solo oggetti AccessObject di un progetto di Microsoft Access (adp). Un database di Microsoft Access non contiene alcuna visualizzazione. Vedere l'insieme AllQueries .
Per elencare tutte le visualizzazioni aperte del progetto, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllViews . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una visualizzazione.
Il controllo struttura a schede contiene un insieme Pages , che rappresenta un tipo speciale di insieme Controls . L'insieme Pages contiene oggetti Page . Gli oggetti Page sono anch'essi controlli. La costante della proprietà ControlType per un controllo Page è acPage . Un oggetto Page include a sua volta un insieme Controls , che contiene tutti i controlli presenti in una singola pagina.
L'insieme Pages contiene oggetti Page .
Gli oggetti Page sono anch'essi controlli.
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllReports .
Insieme AllStoredProcedures
L'insieme AllStoredProcedures contiene un oggetto AccessObject per ogni stored procedure presente nell'oggetto CurrentData o CodeData .
Utilizzo dell'insieme AllStoredProcedures
L'oggetto CurrentData o CodeData dispone di un insieme AllStoredProcedures contenente oggetti AccessObject che descrivono le istanze di tutte le stored procedure specificate da CurrentData o CodeData . È possibile ad esempio enumerare l'insieme AllStoredProcedures in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentData o CodeData dispone di un insieme AllStoredProcedures contenente oggetti AccessObject che descrivono le istanze di tutte le stored procedure specificate da CurrentData o CodeData .
È possibile ad esempio enumerare l'insieme AllStoredProcedures in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllStoredProcedures utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata stored procedure dell'insieme AllStoredProcedures , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllStoredProcedures utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata stored procedure dell'insieme AllStoredProcedures , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllStoredProcedures è indicizzato a partire da zero. Se si fa riferimento a una stored procedure mediante il relativo indice, la prima stored procedure sarà AllStoredProcedures(0), la seconda sarà AllStoredProcedures(1), e così via.
L'insieme AllStoredProcedures è indicizzato a partire da zero.
Se si fa riferimento a una stored procedure mediante il relativo indice, la prima stored procedure sarà AllStoredProcedures(0), la seconda sarà AllStoredProcedures(1), e così via.
L'insieme AllStoredProcedures contiene solo oggetti AccessObject di un progetto di Microsoft Access (adp). Un database di Microsoft Access (mdb) non contiene alcuna stored procedure. Vedere l'insieme AllMacros .
Per elencare tutte le stored procedure aperte del progetto, utilizzare la proprietà IsLoaded di ciascun oggetto AccessObject dell'insieme AllStoredProcedures . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una stored procedure.
Per elencare tutte le stored procedure aperte del progetto, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllStoredProcedures .
Per ulteriori informazioni sull'aggiunta di riferimenti, vedere Impostazione dei riferimenti per le librerie dei tipi .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una stored procedure.
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllStoredProcedures .
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllProcedures .
Insieme AllTables
L'insieme AllTables contiene un oggetto AccessObject per ogni tabella presente nell'oggetto CurrentData o CodeData .
Utilizzo dell'insieme AllTables
L'oggetto CurrentData o CodeData dispone di un insieme AllTables contenente oggetti AccessObject che descrivono le istanze di tutte le tabelle specificate da CurrentData o CodeData . È possibile ad esempio enumerare l'insieme AllTables in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentData o CodeData dispone di un insieme AllTables contenente oggetti AccessObject che descrivono le istanze di tutte le tabelle specificate da CurrentData o CodeData .
È possibile ad esempio enumerare l'insieme AllTables in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllTables utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata tabella dell'insieme AllTables , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllTables utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata tabella dell'insieme AllTables , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllTables è indicizzato a partire da zero. Se si riferimento a una tabella mediante il relativo indice, la prima tabella sarà AllTables(0), la seconda sarà AllTables(1), e così via.
L'insieme AllTables è indicizzato a partire da zero.
Se si riferimento a una tabella mediante il relativo indice, la prima tabella sarà AllTables(0), la seconda sarà AllTables(1), e così via.
Per elencare tutte le tabelle aperte nel database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllTables . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una tabella.
Per elencare tutte le tabelle aperte nel database, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllTables .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una tabella.
Il set di costanti enumerate per ogni argomento di metodo, funzione o proprietà ha un nome che viene visualizzato nella riga della sintassi relativa al metodo, alla funzione o alla proprietà nella finestra del modulo quando l'opzione Informazioni standard automatiche è selezionata nella scheda Editor della finestra di dialogo Opzioni , disponibile scegliendo Opzioni dal menu Strumenti . Per le impostazioni delle proprietà viene visualizzato solo l'elenco delle costanti, ma non il nome. Nella riga della sintassi del metodo OpenForm dell'oggetto DoCmd viene visualizzato, ad esempio, [View As AcFormView = acNormal] per l'argomento visualizzazione di tale metodo. AcFormView è il nome di questo set di costanti enumerate e acNormal è l'impostazione predefinita per l'argomento. Il Visualizzatore oggetti elenca inoltre i nomi dei set di costanti enumerate nella casella Classi , nonché le costanti intrinseche contenute in ogni set nella casella Membri di .
Il set di costanti enumerate per ogni argomento di metodo, funzione o proprietà ha un nome che viene visualizzato nella riga della sintassi relativa al metodo, alla funzione o alla proprietà nella finestra del modulo quando l'opzione Informazioni standard automatiche è selezionata nella scheda Editor della finestra di dialogo Opzioni , disponibile scegliendo Opzioni dal menu Strumenti .
Nella riga della sintassi del metodo OpenForm dell'oggetto DoCmd viene visualizzato, ad esempio, [View As AcFormView = acNormal] per l'argomento visualizzazione di tale metodo.
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllTables .
Funzioni di esempio che eseguono operazioni compatibili con le funzioni di elaborazione di byte delle versioni a 16 bit (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllTables .
Insieme AllViews
L'insieme AllViews contiene un oggetto AccessObject per ogni visualizzazione presente nell'oggetto CurrentData o CodeData .
Utilizzo dell'insieme AllViews
L'oggetto CurrentData o CodeData dispone di un insieme AllViews contenente oggetti AccessObject che descrivono le istanze di tutte le visualizzazioni specificate da CurrentData o CodeData . È possibile ad esempio enumerare l'insieme AllViews in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
L'oggetto CurrentData o CodeData dispone di un insieme AllViews contenente oggetti AccessObject che descrivono le istanze di tutte le visualizzazioni specificate da CurrentData o CodeData .
È possibile ad esempio enumerare l'insieme AllViews in Visual Basic per impostare o restituire i valori delle proprietà dei singoli oggetti AccessObject dell'insieme.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllViews utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata visualizzazione dell'insieme AllViews , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto AccessObject dell'insieme AllViews utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata visualizzazione dell'insieme AllViews , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
L'insieme AllViews è indicizzato a partire da zero. Se si fa riferimento a una visualizzazione mediante il relativo indice, la prima visualizzazione sarà AllViews(0), la seconda sarà AllViews(1), e così via.
L'insieme AllViews è indicizzato a partire da zero.
Se si fa riferimento a una visualizzazione mediante il relativo indice, la prima visualizzazione sarà AllViews(0), la seconda sarà AllViews(1), e così via.
L'insieme AllViews contiene solo oggetti AccessObject di un progetto di Microsoft Access (adp). Un database di Microsoft Access (mdb) non contiene alcuna visualizzazione. Vedere l'insieme AllQueries .
Per elencare tutte le visualizzazioni aperte del progetto, utilizzare la proprietà IsLoaded di ciascun oggetto AccessObject dell'insieme AllViews . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una visualizzazione.
Per elencare tutte le visualizzazioni aperte del progetto, utilizzare la proprietà IsLoaded di ogni oggetto AccessObject dell'insieme AllViews .
È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una visualizzazione.
Non è possibile aggiungere o eliminare un oggetto AccessObject a o dall'insieme AllViews .
Elaborazione di byte di stringhe ANSI (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Nell'esempio seguente viene stampato il nome di ogni oggetto AccessObject aperto nell'insieme AllViews .
Insieme Controls
L'insieme Controls contiene tutti i controlli di una maschera, di un report o di una sottomaschera all'interno di un altro controllo oppure associati a un altro controllo. L'insieme Controls è un membro degli oggetti Form , Report e SubForm .
L'insieme Controls contiene tutti i controlli di una maschera, di un report o di una sottomaschera all'interno di un altro controllo oppure associati a un altro controllo.
L'insieme Controls è un membro degli oggetti Form , Report e SubForm .
Utilizzo dell'insieme Controls
È possibile enumerare, conteggiare e impostare le proprietà dei singoli controlli dell'insieme Controls . Si può ad esempio enumerare l'insieme Controls di una particolare maschera e impostare la proprietà Height di ciascun controllo a un valore specifico.
È possibile enumerare, conteggiare e impostare le proprietà dei singoli controlli dell'insieme Controls .
Si può ad esempio enumerare l'insieme Controls di una particolare maschera e impostare la proprietà Height di ciascun controllo a un valore specifico.
È più rapido fare riferimento in modo implicito all'insieme Controls , come nei seguenti esempi, relativi a un controllo denominato NuoviDati in una maschera denominata MascheraOrdine. Tra i seguenti esempi di sintassi è il modo più rapido per fare riferimento al controllo.
È più rapido fare riferimento in modo implicito all'insieme Controls , come nei seguenti esempi, relativi a un controllo denominato NuoviDati in una maschera denominata MascheraOrdine.
Tra i seguenti esempi di sintassi è il modo più rapido per fare riferimento al controllo.
È anche possibile fare riferimento a un singolo controllo facendo riferimento esplicitamente all'insieme Controls .
È inoltre possibile fare riferimento a un controllo utilizzando il relativo indice nell'ambito dell'insieme. L'insieme Controls è indicizzato a partire da zero.
È inoltre possibile fare riferimento a un controllo utilizzando il relativo indice nell'ambito dell'insieme.
L'insieme Controls è indicizzato a partire da zero.
È possibile utilizzare la parola chiave Me per rappresentare una maschera o un report all'interno del codice soltanto se si fa riferimento alla maschera o al report dal codice all'interno del modulo della maschera o del modulo del report . Se invece si fa riferimento a una maschera o un report da un modulo standard o dal modulo di una maschera o di un report diverso, è necessario utilizzare il riferimento completo alla maschera o al report.
È possibile utilizzare la parola chiave Me per rappresentare una maschera o un report all'interno del codice soltanto se si fa riferimento alla maschera o al report dal codice all'interno del modulo della maschera o del modulo del report .
Se si fa riferimento a una maschera o a un report da un modulo standard o da un modulo di maschera o report diverso, è necessario utilizzare il riferimento completo alla maschera o al report.
Per utilizzare i controlli in una sezione di una maschera o di un report, utilizzare la proprietà Section per restituire un riferimento a un oggetto Section . Fare quindi riferimento all'insieme Controls dell'oggetto Section.
Il modulo può essere creato anche da Visual Basic facendo riferimento alla proprietà Module della maschera quando la maschera o il report è in visualizzazione Struttura oppure impostando su True la proprietà HasModule .
Sono disponibili quattro modi diversi per creare l'istanza predefinita di una maschera. È possibile aprire una maschera esistente utilizzando l'interfaccia utente, eseguendo il metodo OpenForm dell'oggetto DoCmd , chiamando il metodo CreateForm e passando alla nuova maschera in visualizzazione Maschera oppure utilizzando Visual Basic per creare una variabile di tipo Form per fare riferimento all'istanza predefinita. Nell'esempio seguente viene illustrato come aprire una maschera Employees a cui punta una variabile oggetto Form .
È possibile aprire una maschera esistente utilizzando l'interfaccia utente, eseguendo il metodo OpenForm dell'oggetto DoCmd , chiamando il metodo CreateForm e passando alla nuova maschera in visualizzazione Maschera oppure utilizzando Visual Basic per creare una variabile di tipo Form per fare riferimento all'istanza predefinita.
Quando si esegue questo codice, se non è stata già aperta, in Microsoft Access viene aperta la maschera Employees in visualizzazione Maschera e l'etichetta della maschera viene impostata su New Employees. La maschera non è visibile fino a quando la relativa proprietà Visible non viene impostata su True . Al termine dell'esecuzione della routine che ha chiamato il codice, l'istanza della maschera viene distrutta, ovvero la maschera viene chiusa.
Per utilizzare i controlli in una sezione di una maschera o di un report, utilizzare la proprietà Section per restituire un riferimento a un oggetto Section .
Per eseguire azioni di macro dal codice in Microsoft Access, utilizzare l'oggetto DoCmd e i relativi metodi. Questo oggetto sostituisce l'istruzione DoCmd utilizzata per eseguire un'azione di macro nelle versioni 1. x e 2.0 di Microsoft Access.
Per eseguire azioni di macro dal codice in Microsoft Access, utilizzare l'oggetto DoCmd e i relativi metodi.
Quando si crea una maschera o un report in Microsoft Access 2002 o versione successiva, tali oggetti non vengono associati automaticamente a un modulo. Il modulo viene creato quando si fa clic su Codice sulla barra degli strumenti per visualizzare il modulo della maschera o del report. Il modulo può essere creato anche da Visual Basic facendo riferimento alla proprietà Module della maschera quando la maschera o il report è in visualizzazione Struttura oppure impostando su True la proprietà HasModule .
Fare quindi riferimento all'insieme Controls dell'oggetto Section.
La costante della proprietà ControlType per un controllo Page è acPage .
Un oggetto Page include a sua volta un insieme Controls , che contiene tutti i controlli presenti in una singola pagina.
Per determinare se un singolo oggetto Module rappresenta un modulo standard o un modulo di classe, verificare la proprietà Type dell'oggetto Type .
Due tipi di oggetto Control , il controllo Struttura a schede e il controllo Gruppo di opzioni , hanno insiemi Controls che possono contenere più controlli. L'insieme Controls del controllo Gruppo di opzioni contiene qualsiasi controllo Pulsante di opzione , Casella di controllo , Interruttore o Etichetta del Gruppo di opzioni.
Due tipi di oggetto Control , il controllo Struttura a schede e il controllo Gruppo di opzioni , hanno insiemi Controls che possono contenere più controlli.
L'insieme Controls del controllo Gruppo di opzioni contiene qualsiasi controllo Pulsante di opzione , Casella di controllo , Interruttore o Etichetta del Gruppo di opzioni.
Il controllo struttura a schede contiene un insieme Pages che è un tipo particolare di insieme Controls . L'insieme Pages contiene oggetti Page che sono ulteriori controlli. La costante della proprietà ControlType per un controllo Page è acPage . Un oggetto Page a sua volta include un insieme Controls contenente tutti i controlli presenti in una singola pagina.
Altri oggetti Control hanno un insieme Controls che può contenere un'etichetta associata. Tali controlli sono Casella di testo, Gruppo di opzioni, Pulsante di opzione, Interruttore, Casella di controllo, Casella combinata, Casella di riepilogo, Pulsante di comando, Cornice oggetto associato e Cornice oggetto non associato.
Altri oggetti Control presentano un insieme Controls che può contenere un'etichetta associata.
Tali controlli sono Casella di testo, Gruppo di opzioni, Pulsante di opzione, Interruttore, Casella di controllo, Casella combinata, Casella di riepilogo, Pulsante di comando, Cornice oggetto associato e Cornice oggetto non associato.
Insieme DataAccessPages
L'insieme DataAccessPages contiene tutte le pagine di accesso ai dati aperte in un progetto di Microsoft Access (adp) o in un database di Microsoft Access (mdb).
Utilizzo dell'insieme DataAccessPages
Utilizzare l'insieme DataAccessPages in Visual Basic o in un' espressione per fare riferimento alle pagine di accesso ai dati correntemente aperte. È possibile ad esempio enumerare l'insieme DataAccessPages per impostare o restituire i valori delle proprietà delle singole pagine di accesso ai dati dell'insieme.
Utilizzare l'insieme DataAccessPages in Visual Basic o in un' espressione per fare riferimento alle pagine di accesso ai dati correntemente aperte.
È possibile ad esempio enumerare l'insieme DataAccessPages per impostare o restituire i valori delle proprietà delle singole pagine di accesso ai dati dell'insieme.
È possibile fare riferimento a un singolo oggetto DataAccessPage dell'insieme DataAccessPages utilizzandone il nome o l'indice all'interno dell'insieme. Se si desidera fare riferimento a una determinata pagina di accesso ai dati dell'insieme DataAccessPages , è preferibile utilizzare il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto DataAccessPage dell'insieme DataAccessPages utilizzandone il nome o l'indice all'interno dell'insieme.
Se si desidera fare riferimento a una pagina di accesso ai dati specifica dell'insieme DataAccessPages , è preferibile utilizzare il nome, poiché l'indice può variare.
L'insieme DataAccessPages è indicizzato a partire da zero. Se si fa riferimento a una pagina di accesso ai dati mediante il relativo indice, la prima pagina di accesso ai dati sarà DataAccessPages(0), la seconda sarà DataAccessPages(1), e così via. Se è stata aperta Pagina1 e poi Pagina2, nell'insieme DataAccessPages verrà fatto riferimento a quest'ultima mediante il relativo indice come DataAccessPages(1). Se in seguito si chiude Pagina1, nell'insieme DataAccessPages verrà fatto riferimento a Pagina2 mediante il relativo indice come DataAccessPages(0).
L'insieme DataAccessPages è indicizzato a partire da zero.
Se si fa riferimento a una pagina di accesso ai dati mediante il relativo indice, la prima pagina di accesso ai dati sarà DataAccessPages(0), la seconda sarà DataAccessPages(1), e così via.
Se è stata aperta Pagina1 e poi Pagina2, nell'insieme DataAccessPages verrà fatto riferimento a quest'ultima mediante il relativo indice come DataAccessPages(1).
Se in seguito si chiude Pagina1, nell'insieme DataAccessPages verrà fatto riferimento a Pagina2 mediante il relativo indice come DataAccessPages(0).
Per elencare tutte le pagine di accesso ai dati del database, sia aperte che chiuse, enumerare l'insieme AllDataAccessPages dell'oggetto CurrentProject . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una pagina di accesso ai dati.
Per elencare tutte le pagine di accesso ai dati del database, sia aperte che chiuse, enumerare l'insieme AllDataAccessPages dell'oggetto CurrentProject .
Non è possibile aggiungere o eliminare un oggetto DataAccessPage dall'insieme DataAccessPages .
Nell'esempio riportato di seguito viene creata una nuova pagina di accesso ai dati e vengono impostate alcune proprietà:
Nell'esempio che segue viene elencato l'insieme DataAccessPages e viene stampato il nome di ogni pagina di accesso ai dati in esso contenuta.
Insieme FormatConditions
L'insieme FormatConditions rappresenta l'insieme dei formati condizionali per un controllo casella combinata o casella di testo . Ogni formato è rappresentato da un oggetto FormatCondition .
Varie
Data/ora | Espressioni di criteri | API Windows | Manutenzione | altro...
Un indice è una caratteristica di Microsoft Access che accelera la ricerca e l'ordinamento all'interno di una tabella. È possibile creare un indice per un campo nella finestra Indici della visualizzazione Struttura della tabella o impostando la proprietà Indexed del campo su Yes.
È possibile creare un indice per un campo nella finestra Indici della visualizzazione Struttura della tabella o impostando la proprietà Indexed del campo su Yes.
L'insieme FormatConditions rappresenta l'insieme dei formati condizionali per un controllo casella combinata o casella di testo .
Barra multifunzione | Varie | altro...
Ogni formato è rappresentato da un oggetto FormatCondition .
Una specifica di importazione che importa dati da una cartella di lavoro 1st_Excel12 , ad esempio, memorizza il nome del file Excel di origine, il nome del database di destinazione e altri dettagli: se allegare a o creare una nuova tabella, informazioni sulla chiave primaria, nomi dei campi e così via.
Utilizzare il metodo Add dell'insieme di ImportExportSpecifications per creare un nuovo oggetto ImportExportSpecification .
Utilizzare il metodo Execute per eseguire operazioni di importazione e di esportazione salvate.
L'elenco di una casella di riepilogo è composto da due righe di dati. Le righe possono avere una o più colonne, con o senza intestazione.
Oggetto MacroError
Rappresenta le proprietà di un errore di run-time che si verifica in una macro .
Interfaccia utente
Utilizzo dell'insieme FormatConditions
Utilizzare la proprietà FormatConditions di una casella combinata o di una casella di testo in Visual Basic o in un' espressione per restituire un insieme FormatConditions . Utilizzare il metodo Add per creare un nuovo formato condizionale e utilizzare il metodo Modify per modificare un formato condizionale esistente.
Utilizzare la proprietà FormatConditions di una casella combinata o di una casella di testo in Visual Basic o in un' espressione per restituire un insieme FormatConditions .
Utilizzare il metodo Add per creare un nuovo formato condizionale e utilizzare il metodo Modify per modificare un formato condizionale esistente.
Struttura | Controlli | Stampa | Eventi | altro...
È possibile utilizzare il metodo Modify per modificare un formato oppure il metodo Delete per eliminare un formato.
Rappresenta un'operazione di importazione o esportazione salvata.
Per incorporare o collegare un grafico contenente dati di altre applicazioni, utilizzare il controllo Cornice oggetto non associato o Cornice oggetto associato .
La formattazione condizionale per una casella combinata o per una casella di testo può essere impostata anche dalla finestra di dialogo Formattazione condizionale , disponibile scegliendo Formattazione condizionale dal menu Formato quando una maschera è in visualizzazione Struttura .
Insieme Forms
L'insieme Forms contiene tutte le maschere attualmente aperte in un database di Microsoft Access.
Utilizzo dell'insieme Forms
In Visual Basic o in un 'espressione utilizzare l'insieme Forms per fare riferimento a maschere correntemente aperte. È possibile ad esempio enumerare l'insieme Forms per impostare o restituire i valori relativi alle proprietà di singole maschere dell'insieme.
In Visual Basic o in un 'espressione utilizzare l'insieme Forms per fare riferimento a maschere correntemente aperte.
È possibile ad esempio enumerare l'insieme Forms per impostare o restituire i valori relativi alle proprietà di singole maschere dell'insieme.
È possibile fare riferimento a un singolo oggetto Form dell'insieme Forms utilizzandone il nome o l'indice nell'ambito dell'insieme. Se si desidera fare riferimento a una determinata maschera dell'insieme Forms , è preferibile utilizzarne il nome, dato che l'indice potrebbe cambiare.
È possibile fare riferimento a un singolo oggetto Form dell'insieme Forms utilizzandone il nome o l'indice nell'ambito dell'insieme.
Se si desidera fare riferimento a una determinata maschera dell'insieme Forms , è preferibile fare riferimento alla maschera utilizzandone il nome, dato che l'indice dell'insieme di una maschera può subire delle modifiche.
È inoltre possibile utilizzare il metodo CreateControl per aggiungere un oggetto Page all'insieme Pages di un controllo struttura a schede. A tale scopo, è necessario specificare il nome del controllo struttura a schede per l'argomento ElementoPadre della funzione CreateControl . La costante della proprietà ControlType per un oggetto Page è acPage .
Se il nome della maschera include uno spazio, è necessario che il nome venga racchiuso tra parentesi quadre ([ ]).
Forms ! nomemaschera
Forms!MascheraOrdine
Forms![ nome maschera ]
L'insieme Forms è indicizzato a partire da zero. Se si fa riferimento a una maschera tramite il relativo indice, la prima maschera aperta è Forms(0), la seconda è Forms(1), e così via. Se sono state aperte Maschera 1 e poi Maschera 2, nell'insieme Forms verrà fatto riferimento a quest'ultima, utilizzando il relativo indice, come Forms (1). Se, in seguito, si chiudesse Maschera 1, nell'insieme Forms verrebbe fatto riferimento a Maschera 2, utilizzando il relativo indice, come Forms (0).
L'insieme Forms è indicizzato a partire da zero.
Se si fa riferimento a una maschera tramite il relativo indice, la prima maschera aperta è Forms(0), la seconda è Forms(1), e così via.
Se sono state aperte Maschera 1 e poi Maschera 2, nell'insieme Forms verrà fatto riferimento a quest'ultima, utilizzando il relativo indice, come Forms (1).
Se, in seguito, si chiudesse Maschera 1, nell'insieme Forms verrebbe fatto riferimento a Maschera 2, utilizzando il relativo indice, come Forms (0).
Per elencare tutte le maschere del database, sia aperte che chiuse, enumerare l'insieme AllForms dell'oggetto CurrentProject . È quindi possibile utilizzare la proprietà Name di ogni singolo oggetto AccessObject per restituire il nome di una maschera.
Per elencare tutte le maschere del database, sia aperte che chiuse, enumerare l'insieme AllForms dell'oggetto CurrentProject .
Non è possibile aggiungere o eliminare un oggetto Form a o dall'insieme Forms .
Insieme Modules
L'insieme Modules contiene tutti i moduli standard e i moduli di classe aperti in un database di Microsoft Access.
Utilizzo dell'insieme Modules
Tutti i moduli aperti sono inclusi nell'insieme Modules , sia che siano compilati, non compilati, in modalità interruzione o che contengano il codice in esecuzione.
Per determinare se un singolo oggetto Module rappresenta un modulo standard o di classe, verificare la proprietà Type dell'oggetto Module .
L'insieme Modules appartiene all'oggetto Application di Microsoft Access.
I singoli oggetti Module presenti nell'insieme Modules sono indicizzati a partire da zero.
Nell'esempio riportato di seguito viene illustrata la modalità di utilizzo dell'insieme Modules per il controllo dei moduli aperti. L'esempio stampa il nome di ogni modulo aperto nella finestra Immediata.
Nell'esempio riportato di seguito viene illustrata la modalità di utilizzo dell'insieme Modules per il controllo dei moduli aperti.
L'esempio stampa il nome di ogni modulo aperto nella finestra Immediata.
Insieme Pages
L'insieme Pages contiene tutti gli oggetti Page di un controllo struttura a schede .
Utilizzo dell'insieme Pages
L'insieme Pages è un particolare tipo di insieme Controls che appartiene al controllo Struttura a schede e contiene oggetti Page , i quali sono dei controlli. L'insieme Pages è diverso da un tipico insieme Controls in quanto è possibile aggiungere e rimuovere oggetti Page utilizzando i metodi dell'insieme Pages .
Per aggiungere un nuovo oggetto Page all'insieme Pages da Visual Basic, utilizzare il metodo Add dell'insieme Pages . Per rimuovere un oggetto Page esistente, utilizzare il metodo Remove dell'insieme Pages . Per contare il numero di oggetti Page nell'insieme Pages , utilizzare la proprietà Count dell'insieme Pages .
Report
Per aggiungere un nuovo oggetto Page all'insieme Pages da Visual Basic, utilizzare il metodo Add dell'insieme Pages .
Per rimuovere un oggetto Page esistente, utilizzare il metodo Remove dell'insieme Pages .
Per contare il numero di oggetti Page nell'insieme Pages , utilizzare la proprietà Count dell'insieme Pages .
È inoltre possibile utilizzare il metodo CreateControl per aggiungere un oggetto Page all'insieme Pages di un controllo Struttura a schede. A questo scopo, è necessario specificare il nome del controllo Struttura a schede per l'argomento Parent della funzione CreateControl . La costante della proprietà ControlType per un oggetto Page è acPage .
È inoltre possibile utilizzare il metodo CreateControl per aggiungere un oggetto Page all'insieme Pages di un controllo struttura a schede.
Input utente | Controlli | Struttura | Eventi | Stampa | altro...
A tale scopo, è necessario specificare il nome del controllo struttura a schede per l'argomento ElementoPadre della funzione CreateControl .
La costante della proprietà ControlType per un oggetto Page è acPage .
È possibile enumerare l'insieme Pages utilizzando l'istruzione For Each...Next .
I singoli oggetti Page presenti nell'insieme Pages sono indicizzati a partire da zero.
È possibile utilizzare la parola chiave New oppure il metodo CreateObject per creare una nuova istanza di un componente, nonché utilizzare il metodo GetObject per assegnare una variabile a un'istanza esistente di un componente.
Nella libreria dei tipi di Microsoft Access sono incluse informazioni sugli oggetti di Microsoft Access per altri componenti. È possibile impostare un riferimento alla libreria dei tipi di Microsoft Access da un componente e visualizzarne gli oggetti nel Visualizzatore oggetti.
È possibile impostare un riferimento alla libreria dei tipi di Microsoft Access da un componente e visualizzarne gli oggetti nel Visualizzatore oggetti.
Per utilizzare gli oggetti di Microsoft Access mediante l'automazione, è necessario creare un'istanza dell'oggetto Application di Microsoft Access. Si supponga, ad esempio, di voler visualizzare dati di Microsoft Excel in una maschera o in un report di Microsoft Access. Per avviare Microsoft Access da Microsoft Excel, è possibile utilizzare la parola chiave New per creare un'istanza dell'oggetto Application di Microsoft Access, utilizzare il metodo CreateObject per creare una nuova istanza dell'oggetto Application di Microsoft Access oppure utilizzare il metodo GetObject per impostare una variabile oggetto su un'istanza esistente di Microsoft Access. Per determinare la sintassi supportata, vedere la documentazione del componente.
Dopo avere avviato un'istanza di Microsoft Access, se si desidera controllarne gli oggetti, è necessario aprire un database o un progetto (file con estensione adp) nella finestra del programma utilizzando il metodo OpenCurrentDatabase o NewCurrentDatabase per un database oppure il metodo OpenAccessProject o NewAccessProject per un progetto.
Se è stato aperto Microsoft Access solo per utilizzare gli oggetti DAO disponibili in Microsoft DAO, non è necessario aprire un database nella finestra del programma. Per accedere agli oggetti della libreria di oggetti del modulo di gestione di database di Microsoft Office 12.0 Access durante l'automazione, è possibile utilizzare la proprietà DBEngine dell'oggetto Application di Microsoft Access.
Per accedere agli oggetti della libreria di oggetti del modulo di gestione di database di Microsoft Office 12.0 Access durante l'automazione, è possibile utilizzare la proprietà DBEngine dell'oggetto Application di Microsoft Access.
Insieme Properties
L'insieme Properties contiene tutte le proprietà incorporate di un'istanza di una maschera, di un report o di un controllo aperti. Tali proprietà caratterizzano in modo univoco quell'istanza dell'oggetto.
L'insieme Properties contiene tutte le proprietà incorporate di un'istanza di una maschera, di un report o di un controllo aperti.
Tali proprietà caratterizzano in modo univoco quell'istanza dell'oggetto.
Utilizzo dell'insieme Properties
Utilizzare l'insieme Properties in Visual Basic o in un' espressione per fare riferimento alle proprietà della maschere, del report o del controllo per le maschere o i report correntemente aperti.
È possibile utilizzare l'insieme Properties di un oggetto per enumerare le proprietà incorporate dell'oggetto. Non è necessario sapere quali siano le proprietà esistenti o le loro caratteristiche (proprietà Name e Value ) per gestirle.
È possibile utilizzare l'insieme Properties di un oggetto per enumerare le proprietà incorporate dell'oggetto.
Non è necessario sapere quali siano le proprietà esistenti o le loro caratteristiche (proprietà Name e Value ) per gestirle.
Oltre alle proprietà incorporate, è possibile creare e aggiungere proprietà definite dall'utente. Per aggiungere una proprietà definita dall'utente a un'istanza esistente di un oggetto, vedere l'insieme AccessObjectProperties e il metodo Add .
Oltre alle proprietà predefinite, è possibile creare e aggiungere proprietà definite dall'utente.
Per aggiungere una proprietà definita dall'utente a un'istanza esistente di un oggetto, vedere l'insieme AccessObjectProperties e il metodo Add .
Nell'esempio riportato di seguito viene enumerato l'insieme Forms e viene stampato il nome di ogni maschera aperta dell'insieme Forms , quindi viene enumerato l'insieme Properties di ogni maschera e vengono stampati il nome e il valore di ciascuna proprietà.
Insieme References
L'insieme References contiene gli oggetti Reference che rappresentano tutti i riferimenti attualmente impostati.
Utilizzo dell'insieme References
Gli oggetti Reference dell'insieme References corrispondono all'elenco di riferimenti visualizzati nella finestra di dialogo Riferimenti , disponibile scegliendo Riferimenti dal menu Strumenti . Ogni oggetto Reference rappresenta un riferimento selezionato nell'elenco. I riferimenti visualizzati nella finestra di dialogo Riferimenti , ma che non sono stati selezionati, non sono presenti nell'insieme References .
Gli oggetti Reference dell'insieme References corrispondono all'elenco di riferimenti visualizzati nella finestra di dialogo Riferimenti , disponibile scegliendo Riferimenti dal menu Strumenti .
Ogni oggetto Reference rappresenta un riferimento selezionato nell'elenco.
I riferimenti che vengono visualizzati nella finestra di dialogo Riferimenti ma che non sono stati selezionati non sono presenti nell'insieme References .
È possibile enumerare l'insieme References utilizzando l'istruzione For Each...Next .
L'insieme References appartiene all'oggetto Application di Microsoft Access.
I singoli oggetti Reference inclusi nell'insieme References sono indicizzati a partire da uno.
Insieme Reports
L'insieme Reports contiene tutti i report attualmente aperti in un database di Microsoft Access.
Utilizzo dell'insieme Reports
In Visual Basic o in un' espressione è possibile utilizzare l'insieme Reports per fare riferimento a report correntemente aperti. È possibile ad esempio enumerare l'insieme Reports per impostare o restituire i valori di proprietà relative a singoli report dell' insieme .
In Visual Basic o in un' espressione è possibile utilizzare l'insieme Reports per fare riferimento a report correntemente aperti.
È possibile ad esempio enumerare l'insieme Reports per impostare o restituire i valori di proprietà relative a singoli report dell' insieme .
È possibile fare riferimento a un singolo oggetto Report dell'insieme Reports tramite il nome del report o l'indice del report contenuto nell'insieme.
L'insieme Reports è indicizzato a partire da zero. Se si fa riferimento a un report tramite il relativo indice, il primo report è Reports(0), il secondo è Reports(1) e così via. Se sono stati aperti Report1 e quindi Report2, nell'insieme Reports verrà fatto riferimento a quest'ultimo, utilizzando il relativo indice, come Report (1). Se in seguito si chiudesse Report1, nell'insieme Reports verrebbe fatto riferimento a Report2, utilizzando il relativo indice, come Reports(0).
L'insieme Reports è indicizzato a partire da zero.
Se si fa riferimento a un report tramite il relativo indice, il primo report è Reports(0), il secondo è Reports(1) e così via.
Se sono stati aperti Report1 e quindi Report2, nell'insieme Reports verrà fatto riferimento a quest'ultimo, utilizzando il relativo indice, come Report (1).
Se in seguito si chiudesse Report1, nell'insieme Reports verrebbe fatto riferimento a Report2, utilizzando il relativo indice, come Reports(0).
Per elencare tutti i report del database, sia aperti che chiusi, enumerare l'insieme AllReports dell'oggetto CurrentProject . È quindi possibile utilizzare la proprietà Name di ciascun oggetto AccessObject per restituire il nome di un report.
Per elencare tutti i report del database, sia aperti che chiusi, enumerare l'insieme AllReports dell'oggetto CurrentProject .
Nelle versioni precedenti di Microsoft Access era possibile utilizzare la funzione CreateObject o GetObject per correlare una variabile a un'istanza di un componente. In Microsoft Access 97 e versioni successive, è inoltre possibile utilizzare la parola chiave New per creare una nuova istanza di alcuni componenti.
Nelle versioni precedenti di Microsoft Access era possibile utilizzare la funzione CreateObject o GetObject per correlare una variabile a un'istanza di un componente.
In Microsoft Access 97 e versioni successive, è inoltre possibile utilizzare la parola chiave New per creare una nuova istanza di alcuni componenti.
In Microsoft Access è possibile impostare un riferimento alla libreria dei tipi di un componente per migliorarne le prestazioni quando si utilizza tale componente tramite l'automazione. Microsoft Access include inoltre il Visualizzatore oggetti , uno strumento che consente di visualizzare gli oggetti e i relativi metodi e proprietà nella libreria dei tipi di un altro componente.
In Microsoft Access è possibile impostare un riferimento alla libreria dei tipi di un componente per migliorarne le prestazioni quando si utilizza tale componente tramite l'automazione.
Microsoft Access include inoltre il Visualizzatore oggetti , uno strumento che consente di visualizzare gli oggetti e i relativi metodi e proprietà nella libreria dei tipi di un altro componente.
In Microsoft Access 2002 o versione successiva le caselle combinate accettano valori Null quando la proprietà LimitToList è impostata su True (-1), sia che l'elenco contenga o meno valori Null . Nella versione 2.0 una casella combinata la cui proprietà LimitToList è impostata su True accetta un valore Null solo se l'elenco contiene un valore di questo tipo. Per impedire che gli utenti immettano un valore Null utilizzando una casella combinata, impostare su Yes la proprietà Required del campo nella tabella.
In Microsoft Access 2002 o versione successiva le caselle combinate accettano valori Null quando la proprietà LimitToList è impostata su True (-1), sia che l'elenco contenga o meno valori Null .
Per impedire che gli utenti immettano un valore Null utilizzando una casella combinata, impostare su Yes la proprietà Required del campo nella tabella.
Se in un campo di tipo Date in un foglio dati di una maschera o di una tabella si immette 3/3 , in Microsoft Access 2002 o versione successiva viene automaticamente aggiunto l'anno corrente. Se, tuttavia, si immette 3/3/ nello stesso campo, verrà restituito un messaggio di errore. È necessario omettere l'ultimo delimitatore di data per consentire la conversione automatica della data nel formato appropriato.
Se in un campo di tipo Date in un foglio dati di una maschera o di una tabella si immette 3/3 , in Microsoft Access 2002 o versione successiva viene automaticamente aggiunto l'anno corrente.
Nelle versioni precedenti rispetto a Microsoft Access 2002 agli oggetti Form e Report sono associati moduli di classe anche se l'oggetto non si basa su codice. In Microsoft Access 2002 o versione successiva è possibile impostare su False la proprietà HasModule di una maschera o di un report. Dopo aver impostato su False tale proprietà, la maschera o il report occuperà meno spazio su disco e verrà caricato più velocemente poiché non è più associato un modulo di classe.
In Microsoft Access 2002 o versione successiva è possibile impostare su False la proprietà HasModule di una maschera o di un report.
Nelle versioni 1. x e 2.0 è possibile utilizzare la proprietà Format di un controllo per visualizzare valori diversi per valori Null e stringhe di lunghezza zero ( ). In Microsoft Access 2002 o versione successiva, per distinguere tra valori Null e stringhe di lunghezza zero in un controllo incluso in una maschera, è necessario impostare la proprietà ControlSource del controllo su un'espressione che testi la combinazione di maiuscole e minuscole del valore Null . Per visualizzare, ad esempio, Null o ZLS in un controllo, impostare la relativa proprietà ControlSource sull'espressione seguente:
Nelle versioni 1. x e 2.0 è possibile utilizzare la proprietà Format di un controllo per visualizzare valori diversi per valori Null e stringhe di lunghezza zero ( ).
Nella libreria dei tipi di Microsoft Access vengono fornite informazioni sugli oggetti di Microsoft Access ad altri componenti. È possibile impostare un riferimento alla libreria dei tipi di Microsoft Access da un componente e visualizzarne gli oggetti nel Visualizzatore oggetti.
Nella libreria dei tipi di Microsoft Access sono incluse informazioni sugli oggetti di Microsoft Access per altri componenti.
Se si utilizzano componenti aggiuntivi o database di libreria creati in una versione di Microsoft Access precedente a Microsoft Access 2002, è necessario convertirli nel formato di Microsoft Access 2002 - 2003 prima di utilizzarli con applicazioni create in Access.
Una tabella di Microsoft Access può contenere un massimo di 32 indici . Le tabelle molto complesse appartenenti a più relazioni possono superare questo limite, ma il database che le contiene non potrà essere convertito. Il modulo di gestione di database di Microsoft Access crea indici per entrambi i lati delle relazioni tra tabelle. Se la conversione del database ha esito negativo, eliminare alcune relazioni e rieseguire l'operazione di conversione.
Il modulo di gestione di database di Microsoft Access crea indici per entrambi i lati delle relazioni tra tabelle.
Per utilizzare gli oggetti di Microsoft Access mediante l'automazione, è necessario creare un'istanza dell'oggetto Application di Microsoft Access. Si supponga ad esempio di voler visualizzare dei dati di Microsoft Excel in una maschera o in un report di Microsoft Access. Per lanciare Microsoft Access da Microsoft Excel, è possibile utilizzare la parola chiave New al fine di creare un'istanza dell'oggetto Application di Microsoft Access utilizzare la funzione CreateObject per creare una nuova istanza dell'oggetto Application di Microsoft Access oppure utilizzare la funzione GetObject per indicare una variabile di oggetto a una istanza esistente di Microsoft Access. Per determinare la sintassi supportata, consultare la documentazione del componente.
Una volta avviata un'istanza di Microsoft Access, se si desidera controllarne gli oggetti, è necessario aprire un database (mdb) o un progetto (adp) nella finestra del programma utilizzando il metodo OpenCurrentDatabase o NewCurrentDatabase per un database oppure il metodo OpenAccessProject o NewAccessProject per un progetto.
Se è stato aperto Microsoft Access solo come mezzo per utilizzare gli oggetti DAO forniti da Microsoft DAO, non è necessario aprire un database nella finestra del programma. Per accedere agli oggetti della libreria di oggetti Microsoft DAO 3.6 durante l'automazione, è possibile utilizzare la proprietà DBEngine dell'oggetto Application di Microsoft Access.
Se è stato aperto Microsoft Access solo per utilizzare gli oggetti DAO disponibili in Microsoft DAO, non è necessario aprire un database nella finestra del programma.
Per accedere agli oggetti della libreria di oggetti Microsoft DAO 3.6 durante l'automazione, è possibile utilizzare la proprietà DBEngine dell'oggetto Application di Microsoft Access.
Generatore di colori
Il Generatore di colori è uno strumento di Microsoft Access utilizzato per selezionare i colori dalla tavolozza o per creare colori personalizzati che possono essere salvati e utilizzati in maschere e report.
Per eseguire questo generatore, fare clic sul pulsante Genera accanto alla relativa proprietà nella finestra delle proprietà.
Convertire database di libreria e componenti aggiuntivi
Può essere inoltre necessario apportare alcune modifiche a oggetti, macro e routine dei database di libreria e dei componenti aggiuntivi per assicurarne il corretto funzionamento.
Creazione dei riferimenti e caricamento dei database di libreria
Prima di utilizzare una libreria in Microsoft Access 2002 o versioni successive, è necessario stabilire un riferimento al database di libreria in tutte le applicazioni che lo utilizzano. Per eseguire questa operazione, scegliere Riferimenti dal menu Strumenti in visualizzazione Struttura del modulo. Un database con riferimento deve essere nel formato di Microsoft Access 2002.
Prima di utilizzare una libreria in Microsoft Access 2002 o versioni successive, è necessario stabilire un riferimento al database di libreria in tutte le applicazioni che lo utilizzano.
Per eseguire questa operazione, scegliere Riferimenti dal menu Strumenti in visualizzazione Struttura del modulo.
Un database con riferimento deve essere nel formato di Microsoft Access 2002.
Un database di libreria deve contenere solo il codice Visual Basic, che può essere chiamato da qualsiasi applicazione che mantiene un riferimento a tale libreria. Nelle versioni 1. x e 2.0 di Microsoft Access un database di libreria viene caricato all'avvio creando una voce nella sezione Libraries del file ini. Quasi tutte le informazioni che nelle versioni 1. x e 2.0 sono memorizzate in un file ini, nelle versioni successive sono memorizzate nel Registro di sistema di Windows. Per utilizzare un database di libreria tuttavia non è necessario creare una chiave del Registro di sistema di Windows.
Un database di libreria deve contenere solo il codice Visual Basic, che può essere chiamato da qualsiasi applicazione che mantiene un riferimento a tale libreria.
Nelle versioni 1. x e 2.0 di Microsoft Access un database di libreria viene caricato all'avvio creando una voce nella sezione Libraries del file ini.
Quasi tutte le informazioni che nelle versioni 1. x e 2.0 sono memorizzate in un file ini, nelle versioni successive sono memorizzate nel Registro di sistema di Windows.
Per utilizzare un database di libreria tuttavia non è necessario creare una chiave del Registro di sistema di Windows.
Riferimenti circolari tra librerie
Nelle versioni 1. x e 2.0 di Microsoft Access è possibile creare riferimenti circolari tra librerie. Le versioni successive di Microsoft Access tuttavia non consentono tali riferimenti. In altri termini, una volta creato un riferimento dalla Libreria A alla Libreria B, non è possibile creare un riferimento dalla Libreria B alla Libreria A.
Nelle versioni 1. x e 2.0 di Microsoft Access è possibile creare riferimenti circolari tra librerie.
Le versioni successive di Microsoft Access tuttavia non consentono tali riferimenti.
In altri termini, una volta creato un riferimento dalla Libreria A alla Libreria B, non è possibile creare un riferimento dalla Libreria B alla Libreria A.
Funzionamento del menu Componenti aggiuntivi personalizzato
Nelle versioni 1. x e 2.0 di Microsoft Access i componenti aggiuntivi vengono visualizzati automaticamente nel sottomenu Aggiunte del menu File , mentre nelle versioni successive di Microsoft Access il sottomenu Componenti aggiuntivi è accessibile dal menu Strumenti . In Microsoft Access 2002 o versioni successive è possibile fare riferimento ai componenti aggiuntivi anche da qualsiasi menu o barra degli strumenti.
Convertire tabelle, maschere e report di Microsoft Access
Numerose modifiche introdotte da Microsoft Access 2002 potrebbero influire sul funzionamento delle applicazioni nelle versioni 1. x o 2.0. Nelle sezioni che seguono vengono fornite ulteriori informazioni su tali modifiche.
Numerose modifiche introdotte da Microsoft Access 2002 potrebbero influire sul funzionamento delle applicazioni nelle versioni 1. x o 2.0.
Nelle sezioni che seguono vengono fornite ulteriori informazioni su tali modifiche.
Indici e relazioni
Una tabella di Microsoft Access può contenere fino a un massimo di 32 indici . Le tabelle molto complesse che fanno parte di più relazioni possono eccedere questo limite e il database che contiene tali tabelle non può essere convertito. La versione 3,6 del modulo di gestione di database Microsoft Jet crea indici per entrambi i lati della relazione tra le tabelle. Se la conversione del database non riesce, eliminare alcune relazioni e tentare di nuovo l'operazione.
Una tabella di Microsoft Access può contenere un massimo di 32 indici .
Le tabelle molto complesse appartenenti a più relazioni possono superare questo limite, ma il database che le contiene non potrà essere convertito.
La versione 3,6 del modulo di gestione di database Microsoft Jet crea indici per entrambi i lati della relazione tra le tabelle.
Se la conversione del database ha esito negativo, eliminare alcune relazioni e rieseguire l'operazione di conversione.
Proprietà LimitToList delle caselle combinate
In Microsoft Access 2002 o versioni successive le caselle combinate accettano valori di tipo Null quando la proprietà LimitToList è impostata su True (-1), sia che l'elenco contenga valori di tipo Null o meno. Nella versione 2.0 una casella combinata con la proprietà LimitToList impostata su True accetta un valore di tipo Null solo se l'elenco contiene un valore di questo tipo. Per impedire che gli utenti immettano un valore di tipo Null utilizzando una casella combinata è necessario impostare su Yes la proprietà Required del campo nella tabella.
In Microsoft Access 2002 o versioni successive le caselle combinate accettano valori di tipo Null quando la proprietà LimitToList è impostata su True (-1), sia che l'elenco contenga valori di tipo Null o meno.
Nella versione 2.0 una casella combinata la cui proprietà LimitToList è impostata su True accetta un valore Null solo se l'elenco contiene un valore di questo tipo.
Per impedire che gli utenti immettano un valore di tipo Null utilizzando una casella combinata è necessario impostare su Yes la proprietà Required del campo nella tabella.
Menu e attivazione sul posto di oggetti OLE
Per rendere disponibili ulteriori funzionalità durante l'attivazione diretta di oggetti OLE , è possibile che alcuni comandi di menu siano stati spostati in un menu che non viene sostituito quando si attiva un server OLE .
I collegamenti forniscono riferimenti a importanti argomenti della Guida basati su procedure.
Accesso ai dati
SQL (Structured Query Language) | DAO (Data Access Objects) | ADO (ActiveX Data Objects) | XML | altro...
Quando viene attivato un componente, le modifiche apportate non influenzano le macro dell'applicazione convertita che utilizzano l'azione EseguiVoceMenu per eseguire un comando di menu della versione 2.0. I comandi della versione 2.0 vengono associati ai comandi equivalenti delle versioni successive di Microsoft Access.
Quando viene attivato un componente, le modifiche apportate non influenzano le macro dell'applicazione convertita che utilizzano l'azione EseguiVoceMenu per eseguire un comando di menu della versione 2.0.
I comandi della versione 2.0 vengono associati ai comandi equivalenti delle versioni successive di Microsoft Access.
Creazione di un riferimento a un controllo in una maschera di sola lettura
In Microsoft Access 2002 o versione successiva non è possibile utilizzare un'espressione per fare riferimento al valore di un controllo contenuto in una maschera di sola lettura associata a un'origine record vuota. Nelle versioni precedenti l'espressione restituisce un valore Null . Prima di creare un riferimento a un controllo in una maschera di sola lettura, è necessario verificare che l'origine record della maschera contenga record.
In Microsoft Access 2002 o versione successiva non è possibile utilizzare un'espressione per fare riferimento al valore di un controllo contenuto in una maschera di sola lettura associata a un'origine record vuota.
Le categorie essenziali per le operazioni che è possibile eseguire in Access sono elencate in questo argomento.
Nelle versioni precedenti l'espressione restituisce un valore Null .
Prima di creare un riferimento a un controllo in una maschera di sola lettura, è necessario verificare che l'origine record della maschera contenga record.
Campi di tipo Data e immissione dati
Se in un campo di tipo Date in un foglio dati di una maschera o di una tabella si immette 3/3 , in Microsoft Access 2002 o versioni successive viene automaticamente aggiunto l'anno corrente. Tuttavia, se si immette 3/3/ nello stesso campo, verrà restituito un messaggio di errore. È necessario omettere l'ultimo delimitatore di data in modo che venga eseguita la conversione automatica della data nel formato appropriato.
Se in un campo di tipo Date in un foglio dati di una maschera o di una tabella si immette 3/3 , in Microsoft Access 2002 o versioni successive viene automaticamente aggiunto l'anno corrente.
Se, tuttavia, si immette 3/3/ nello stesso campo, verrà restituito un messaggio di errore.
È necessario omettere l'ultimo delimitatore di data per consentire la conversione automatica della data nel formato appropriato.
Pulsanti creati con la Creazione guidata Pulsante di comando
Mentre nelle versioni 2.0 o 7.0 di Microsoft Access si utilizza la Creazione guidata Pulsante di comando per generare il codice che richiama un'altra applicazione, in Microsoft Access 2002 o versioni successive è necessario prima eliminare il pulsante, quindi crearlo di nuovo mediante l'apposita creazione guidata.
Moduli di classe di maschere e report
Nelle versioni di Access precedenti Microsoft Access 2002 agli oggetti Form e Report sono associati moduli di classe anche se dietro l'oggetto non esiste un codice. In Microsoft Access 2002 o versioni successive è possibile impostare a False la proprietà HasModule di una maschera o di un report. Dopo aver impostato su False tale proprietà, la maschera o il report occuperanno meno spazio su disco e verranno caricati più velocemente poiché a essi non sarà più associato un modulo di classe.
Nelle versioni precedenti rispetto a Microsoft Access 2002 agli oggetti Form e Report sono associati moduli di classe anche se l'oggetto non si basa su codice.
In Microsoft Access 2002 o versione successiva, per distinguere tra valori Null e stringhe di lunghezza zero in un controllo incluso in una maschera, è necessario impostare la proprietà ControlSource del controllo su un'espressione che testi la combinazione di maiuscole e minuscole del valore Null .
Come eseguire un'attività in Access
Questo argomento collega alle attività di programmazione (argomenti che descrivono come eseguire un'attività o che riportano una procedura dettagliata) per scenari di Access comuni.
In questo modo è possibile accedere ai principali argomenti basati su attività relativi alla programmazione e allo sviluppo di applicazioni mediante Microsoft Office Access 2007. Le categorie essenziali per le operazioni che è possibile eseguire in Access sono elencate in questo argomento. I collegamenti forniscono riferimenti a importanti argomenti della Guida basati su procedure.
In questo modo è possibile accedere ai principali argomenti basati su attività relativi alla programmazione e allo sviluppo di applicazioni mediante Microsoft Office Access 2007.
In Microsoft Access 2002 o versioni successive è possibile impostare a False la proprietà HasModule di una maschera o di un report.
Dopo aver impostato su False tale proprietà, la maschera o il report occuperà meno spazio su disco e verrà caricato più velocemente poiché non è più associato un modulo di classe.
Differenza di margini dei report della versione 2.0 convertiti
In Microsoft Access 2002 o versione successiva la stampa o l' anteprima di un report convertito da Microsoft Access 2.0 potrebbe presentare problemi se alcuni valori relativi ai margini sono impostati su 0. Quando si esegue la conversione di un report da Microsoft Access 2.0, i valori dei margini non sono impostati su, 0 bensì sul valore minimo valido per la stampante predefinita. Ciò impedisce che alcuni dati del report fuoriescano dall'area di stampa della stampante.
In Microsoft Access 2002 o versione successiva la stampa o l' anteprima di un report convertito da Microsoft Access 2.0 potrebbe presentare problemi se alcuni valori relativi ai margini sono impostati su 0.
Quando si esegue la conversione di un report da Microsoft Access 2.0, i valori dei margini non sono impostati su, 0 bensì sul valore minimo valido per la stampante predefinita.
Ciò impedisce che alcuni dati del report fuoriescano dall'area di stampa della stampante.
Per risolvere questo problema, ridurre la larghezza, la spaziatura o il numero delle colonne contenute nel report di modo che la somma della larghezza delle colonne e quella dei margini predefiniti sia inferiore o uguale alla larghezza del foglio.
Impossibilità di utilizzare la proprietà Format per distinguere i valori di tipo Null e le stringhe di lunghezza zero
Nelle versioni 1. x e 2.0 è possibile utilizzare la proprietà Format di un controllo per visualizzare valori differenti per valori di tipo Null e stringhe a lunghezza zero ( ). In Microsoft Access 2002 o versioni successive per fare distinzione tra i valori di tipo Null e le stringhe a lunghezza zero in un controllo contenuto in una maschera, è necessario impostare la proprietà ControlSource a un'espressione che ricerchi eventuali valori di tipo Null . Per visualizzare ad esempio Null o ZLS in un controllo, impostare la relativa proprietà ControlSource all'espressione riportata di seguito.
Nelle versioni 1. x e 2.0 è possibile utilizzare la proprietà Format di un controllo per visualizzare valori differenti per valori di tipo Null e stringhe a lunghezza zero ( ).
In Microsoft Access 2002 o versioni successive per fare distinzione tra i valori di tipo Null e le stringhe a lunghezza zero in un controllo contenuto in una maschera, è necessario impostare la proprietà ControlSource a un'espressione che ricerchi eventuali valori di tipo Null .
Per visualizzare, ad esempio, Null o ZLS in un controllo, impostare la relativa proprietà ControlSource sull'espressione seguente:
=IIf(IsNull([MioControllo]), Null, Format([MioControllo], @;ZLS))
Metodi e proprietà personalizzati
Per creare la definizione di un nuovo oggetto personalizzato, è possibile utilizzare un modulo di classe . Quando si crea una nuova istanza di una classe , viene creato un nuovo oggetto e viene restituito un riferimento a esso.
Per creare la definizione di un nuovo oggetto personalizzato, è possibile utilizzare un modulo di classe .
Quando si crea una nuova istanza di una classe , viene creato un nuovo oggetto e viene restituito un riferimento a esso.
Tutte le routine pubbliche definite all'interno del modulo di classe diventano metodi del nuovo oggetto. L'istruzione Sub definisce un metodo che non restituisce un valore, mentre l'istruzione Function definisce un metodo che può restituire un valore di tipo specifico.
Tutte le routine pubbliche definite all'interno del modulo di classe diventano metodi del nuovo oggetto.
L'istruzione Sub definisce un metodo che non restituisce un valore, mentre l'istruzione Function definisce un metodo che può restituire un valore di tipo specifico.
Tutte le routine Property Let , Property Get o Property Set definite diventano proprietà del nuovo oggetto. Le routine Property Get recuperano il valore di una proprietà. Le routine Property Let impostano il valore di una proprietà non relativa a un oggetto. Le routine Property Set impostano il valore di una proprietà dell'oggetto.
Tutte le routine Property Let , Property Get o Property Set definite diventano proprietà del nuovo oggetto.
Le routine Property Get recuperano il valore di una proprietà.
Le routine Property Let impostano il valore di una proprietà non relativa a un oggetto.
Le routine Property Set impostano il valore di una proprietà dell'oggetto.
È possibile utilizzare ad esempio un modulo di classe per creare uno strato di interfaccia tra l'applicazione in uso e una serie di funzioni API ( Interfaccia di programma applicativo, Application Programming Interface ) che la richiamano. A tale scopo, creare una serie di routine semplici che chiamano routine complesse in una DLL . Quando si crea un'istanza di questa classe, le routine create diventano i metodi del nuovo oggetto. È possibile applicare tali metodi nello stesso modo in cui si applicano i metodi di qualunque oggetto e in tal modo, si chiamano anche le funzioni API.
È possibile utilizzare ad esempio un modulo di classe per creare uno strato di interfaccia tra l'applicazione in uso e una serie di funzioni API ( Interfaccia di programma applicativo, Application Programming Interface ) che la richiamano.
A tale scopo, creare una serie di routine semplici che chiamano routine complesse in una DLL .
Quando si crea un'istanza di questa classe, le routine create diventano i metodi del nuovo oggetto.
È possibile applicare tali metodi nello stesso modo in cui si applicano i metodi di qualunque oggetto e in tal modo, si chiamano anche le funzioni API.
Sezione di maschera
Una sezione di maschera è una parte di una maschera , ad esempio una sezione intestazione, piè di pagina o Corpo.
È possibile impostare le proprietà della sezione che sono attributi di una maschera e influiscono sull'aspetto o sul comportamento della sezione. È possibile ad esempio impostare la proprietà CanGrow per specificare se la sezione si espanderà verticalmente per stampare tutti i dati in essa contenuti. Le proprietà della sezione sono impostate nella visualizzazione Struttura della maschera .
Insieme SmartTagActions
Rappresenta un insieme di azioni per un singolo smart tag o per un tipo di smart tag.
Le azioni smart tag sono processi programmati all'interno degli smart tag che consentono di eseguire determinate operazioni associate agli smart tag. Ad esempio, un azione potrebbe consistere nell'accesso a un sito Web, nell'inserimento dei dati di un contatto in Microsoft Outlook, oppure nella visualizzazione di una cartina e delle indicazioni stradali.
È possibile impostare le proprietà della sezione che sono attributi di una maschera e influiscono sull'aspetto o sul comportamento della sezione.
È possibile ad esempio impostare la proprietà CanGrow per specificare se la sezione si espanderà verticalmente per stampare tutti i dati in essa contenuti.
Utilizzo del tipo di dati Byte (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Le azioni smart tag sono processi programmati all'interno degli smart tag che consentono di eseguire determinate operazioni associate agli smart tag.
Utilizzo dell'insieme SmartTagActions
Le proprietà della sezione sono impostate nella visualizzazione Struttura della maschera .
Maschera
Una maschera è un oggetto del database di Microsoft Access su cui vengono collocati i controlli per eseguire determinate azioni o per immettere, visualizzare e modificare i dati dei campi.
Proprietà nascoste
Nella tabella riportata di seguito sono elencate le proprietà nascoste nel modello di oggetti di Visual Basic in Microsoft Access 2002 e versioni successive poiché la relativa funzionalità è stata sostituita da nuovi elementi di linguaggio. Queste proprietà sono supportate solo per mantenere la compatibilità con le versioni precedenti. Per il nuovo codice utilizzare la funzionalità sostitutiva fornita in Microsoft Access 2002 e versioni successive. Per visualizzare gli oggetti nascosti nel Visualizzatore oggetti, fare clic con il pulsante destro del mouse nella finestra del Visualizzatore oggetti e scegliere Mostra membri nascosti dal menu di scelta rapida.
Oggetto
Proprietà nascosta
Sostituzione
Nessuna
Indice
Un indice è una funzione di Microsoft Access che accelera la ricerca e l'ordinamento all'interno di una tabella. È possibile creare un indice per un campo nella finestra degli indici della visualizzazione Struttura della tabella o impostando la proprietà Indicizzato del campo a Sì.
Un indice è una caratteristica di Microsoft Access che accelera la ricerca e l'ordinamento all'interno di una tabella.
È possibile creare un indice per un campo nella finestra degli indici della visualizzazione Struttura della tabella o impostando la proprietà Indicizzato del campo a Sì.
La chiave primaria di una tabella viene automaticamente indicizzata e i campi con tipo di dati Memo o Oggetto OLE non possono essere indicizzati.
Proprietà e metodi specifici della lingua
Nella tabella seguente sono elencati le proprietà e i metodi disponibili solo per le lingue asiatiche o da destra a sinistra.
Proprietà o metodo
Azioni di macro e metodi dell'oggetto DoCmd
Per eseguire azioni macro dal codice in Microsoft Access, utilizzare l'oggetto DoCmd e i relativi metodi. Questo oggetto sostituisce l'istruzione DoCmd utilizzata per eseguire un'azione macro nelle versioni 1. x e 2.0 di Microsoft Access.
Per eseguire azioni macro dal codice in Microsoft Access, utilizzare l'oggetto DoCmd e i relativi metodi.
Questo oggetto sostituisce l'istruzione DoCmd utilizzata per eseguire un'azione di macro nelle versioni 1. x e 2.0 di Microsoft Access.
Durante la conversione di un database, Microsoft Access converte automaticamente eventuali istruzioni DoCmd e le azioni che esse svolgevano nel codice Access Basic nei metodi dell'oggetto DoCmd sostituendo lo spazio con l'operatore punto (.).
In Microsoft Access 9.0 e versioni successive alcune azioni macro funzionano in modo diverso rispetto alle versioni 1. x , 2.0 o 7.0. Le differenze sono illustrate di seguito.
Database creati con Microsoft Access 95
Azione EseguiVoceMenu
L'azione EseguiVoceMenu non è più disponibile in Microsoft Access. In sostituzione dell'azione EseguiVoceMenu è possibile utilizzare l'azione EseguiComando.
L'azione EseguiVoceMenu non è più disponibile in Microsoft Access.
In sostituzione dell'azione EseguiVoceMenu è possibile utilizzare l'azione EseguiComando.
Quando si attiva un database creato con una versione precedente di Microsoft Access, l'azione EseguiVoceMenu continuerà a funzionare come prima.
Quando si converte un database creato con una versione precedente di Microsoft Access, tutte le azioni EseguiVoceMenu contenute nelle macro vengono sostituite dalle azioni EseguiComando la prima volta che le macro vengono salvate dopo la conversione. I metodi DoMenuItem utilizzati nelle routine Visual Basic non vengono modificati.
Quando si converte un database creato con una versione precedente di Microsoft Access, tutte le azioni EseguiVoceMenu contenute nelle macro vengono sostituite dalle azioni EseguiComando la prima volta che le macro vengono salvate dopo la conversione.
I metodi DoMenuItem utilizzati nelle routine Visual Basic non vengono modificati.
Database creati con le versioni 1. x o 2.0 di Microsoft Access
Azione TrasferisciFoglioCalcolo
Non è possibile importare in Microsoft Access i fogli di calcolo di Microsoft Excel versione 2.0 o quelli di Lotus 1-2-3 versione 1.0. Se il database convertito contiene una macro che eseguiva questa funzione in Microsoft Access versione 1. x o 2.0 tramite l'azione TrasferisciFoglioCalcolo, la conversione del database comporta l'aggiornamento dell'argomento Tipo foglio calcolo alla versione 2.0 di Microsoft Excel, se tale versione è stata specificata inizialmente, oppure un errore, se è stata specificata la versione 1.0 di Lotus 1-2-3.
Non è possibile importare in Microsoft Access i fogli di calcolo di Microsoft Excel versione 2.0 o quelli di Lotus 1-2-3 versione 1.0.
Se il database convertito contiene una macro che eseguiva questa funzione in Microsoft Access versione 1. x o 2.0 tramite l'azione TrasferisciFoglioCalcolo, la conversione del database comporta l'aggiornamento dell'argomento Tipo foglio calcolo alla versione 2.0 di Microsoft Excel, se tale versione è stata specificata inizialmente, oppure un errore, se è stata specificata la versione 1.0 di Lotus 1-2-3.
Per ovviare a questo problema, prima di importare i fogli di calcolo in Microsoft Access convertirli in una versione successiva di Microsoft Excel o Lotus 1-2-3.
Azioni TrasferisciFoglioCalcolo e TrasferisciTesto
In Microsoft Access non è possibile utilizzare un' istruzione SQL per specificare i dati da esportare mediante l'azione TrasferisciTesto o l'azione TrasferisciFoglioCalcolo. Invece di utilizzare un'istruzione SQL, è necessario creare innanzitutto una query, quindi specificarne il nome nell'argomento Nome tabella.
In Microsoft Access non è possibile utilizzare un' istruzione SQL per specificare i dati da esportare mediante l'azione TrasferisciTesto o l'azione TrasferisciFoglioCalcolo.
Invece di utilizzare un'istruzione SQL, è necessario creare innanzitutto una query, quindi specificarne il nome nell'argomento Nome tabella.
Confronti tra valori di tipo Null
In Microsoft Access versioni 1.x e 2.0, se si esegue il confronto tra due espressioni all'interno della condizione di una macro utilizzando un operatore di confronto e una delle espressioni è di tipo Null , per tale confronto Access Basic restituisce True o False , a seconda dell'operatore di confronto utilizzato. In Microsoft Access 2000 e versioni successive Visual Basic restituisce Null per un confronto in cui un'espressione è di tipo Null . Per determinare se il confronto dà come risultato Null , utilizzare la funzione IsNull .
In Microsoft Access versioni 1.x e 2.0, se si esegue il confronto tra due espressioni all'interno della condizione di una macro utilizzando un operatore di confronto e una delle espressioni è di tipo Null , per tale confronto Access Basic restituisce True o False , a seconda dell'operatore di confronto utilizzato.
In Microsoft Access 2000 e versioni successive Visual Basic restituisce Null per un confronto in cui un'espressione è di tipo Null .
Per determinare se il confronto dà come risultato Null , utilizzare la funzione IsNull .
Miglioramenti delle prestazioni della compilazione
In Microsoft Access sono stati implementati miglioramenti a livello di caricamento del modulo e di prestazioni della compilazione in modo da rendere più veloci la compilazione e l'esecuzione del codice.
Moduli di maschera e di report creati su richiesta
Quando si crea una maschera o un report in Microsoft Access 2002 o versioni successive, tali oggetti non vengono associati automaticamente a un modulo. Il modulo viene creato quando si fa clic sul pulsante Codice sulla barra degli strumenti per visualizzare il modulo della maschera o del report. Il modulo può essere creato anche da Visual Basic facendo riferimento alla proprietà Module della maschera quando la maschera o il report è in visualizzazione Struttura oppure impostando su True la proprietà HasModule .
Quando si crea una maschera o un report in Microsoft Access 2002 o versione successiva, tali oggetti non vengono associati automaticamente a un modulo.
Il modulo viene creato quando si fa clic su Codice sulla barra degli strumenti per visualizzare il modulo della maschera o del report.
L'impostazione della proprietà HasModule indica se la maschera o il report disponga o meno di un modulo associato.
Funzioni Chr e ChrB (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Funzioni Input e InputB (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Poiché il modulo di una maschera o di un report non viene creato fino al momento in cui è necessario aggiungervi del codice, è possibile che il progetto abbia pochi moduli da compilare e di conseguenza le prestazioni della compilazione sono migliori. Le maschere e i report privi di moduli, inoltre, si vengono caricati molto più rapidamente rispetto a quelli che ne sono provvisti.
Poiché il modulo di una maschera o di un report non viene creato fino al momento in cui è necessario aggiungervi del codice, è possibile che il progetto abbia pochi moduli da compilare e di conseguenza le prestazioni della compilazione sono migliori.
Le maschere e i report privi di moduli, inoltre, si vengono caricati molto più rapidamente rispetto a quelli che ne sono provvisti.
Compilazione su richiesta
L'utilizzo dei comandi sopra descritti per compilare esplicitamente i moduli del progetto è consigliabile, ma non necessario. Un modulo che non è già stato compilato infatti viene compilato da Microsoft Access prima dell'esecuzione di una routine.
L'utilizzo dei comandi sopra descritti per compilare esplicitamente i moduli del progetto è consigliabile, ma non necessario.
Un modulo che non è già stato compilato infatti viene compilato da Microsoft Access prima dell'esecuzione di una routine.
Quando un modulo viene caricato per l'esecuzione, Microsoft Access verifica se il modulo è già stato compilato. In caso contrario, il modulo viene compilato immediatamente prima dell'esecuzione di una routine al suo interno. La procedura di compilazione rallenta il codice. Il codice che è stato salvato nello stato compilato invece viene eseguito più velocemente.
Si noti che in Microsoft Access 95, quando si esegue una routine in un modulo, vengono caricati tutti i moduli della possibile struttura delle chiamate , sebbene in base all'impostazione predefinita tali moduli non vengano compilati fino al momento in cui non viene chiamata una routine. Poiché Microsoft Access 97 e versioni successive caricano i moduli solo su richiesta, in molti casi il codice può essere eseguito più rapidamente.
Si noti che in Microsoft Access 95, quando si esegue una routine in un modulo, vengono caricati tutti i moduli della possibile struttura delle chiamate , sebbene in base all'impostazione predefinita tali moduli non vengano compilati fino al momento in cui non viene chiamata una routine.
Per i nomi di costanti modificati le costanti precedenti continuano a funzionare. Ad esempio, nelle versioni precedenti una delle costanti intrinseche dell'argomento salvataggio del metodo Close dell'oggetto DoCmd è acPrompt . Ora è disponibile la costante acSavePrompt , anche se acPrompt continua a funzionare.
Ad esempio, nelle versioni precedenti una delle costanti intrinseche dell'argomento salvataggio del metodo Close dell'oggetto DoCmd è acPrompt .
Poiché Microsoft Access 97 e versioni successive caricano i moduli solo su richiesta, in molti casi il codice può essere eseguito più rapidamente.
È possibile migliorare ulteriormente la prestazione raggruppando le routine in moduli per ridurre le compilazioni inutili. Raggruppare le routine in moduli con altre routine che le richiamano, anziché raggrupparle in moduli con routine non correlate.
È possibile migliorare ulteriormente la prestazione raggruppando le routine in moduli per ridurre le compilazioni inutili.
Raggruppare le routine in moduli con altre routine che le richiamano, anziché raggrupparle in moduli con routine non correlate.
Stile per le costanti intrinseche
In Microsoft Access tutte le costanti intrinseche sono contenute in librerie dei tipi e sono visibili nel Visualizzatore oggetti . Microsoft Access comprende librerie dei tipi per Microsoft Access, oggetti ADO, oggetti DAO e Visual Basic. Ciascuna di queste librerie include costanti intrinseche.
In Microsoft Access tutte le costanti intrinseche sono contenute in librerie dei tipi e sono visibili nel Visualizzatore oggetti .
Microsoft Access comprende librerie dei tipi per Microsoft Access, oggetti ADO, oggetti DAO e Visual Basic.
Ciascuna di queste librerie include costanti intrinseche.
Inoltre, in Microsoft Access le costanti intrinseche sono costituite da maiuscole e minuscole e alcune parti di una costante sono concatenate e non separate da caratteri di sottolineatura. La costante A_NORMAL delle versioni 1. x e 2.0 ad esempio ora è acNormal .
Inoltre, in Microsoft Access le costanti intrinseche sono costituite da maiuscole e minuscole e alcune parti di una costante sono concatenate e non separate da caratteri di sottolineatura.
La costante A_NORMAL delle versioni 1. x e 2.0 ad esempio ora è acNormal .
Le costanti intrinseche di database creati con le versioni precedenti di Microsoft Access non verranno automaticamente convertite nel nuovo formato, ma continueranno a funzionare senza generare errori. Si consiglia tuttavia di utilizzare il nuovo formato quando si scrive del nuovo codice.
Le costanti intrinseche di database creati con le versioni precedenti di Microsoft Access non verranno automaticamente convertite nel nuovo formato, ma continueranno a funzionare senza generare errori.
Si consiglia tuttavia di utilizzare il nuovo formato quando si scrive del nuovo codice.
Creare repliche parziali
Definizione di repliche parziali
Le repliche parziali sono repliche contenenti solo un sottoinsieme di record di una replica completa. Per creare repliche parziali, specificare un filtro che selezioni i dati sincronizzati a un sottoinsieme dell'intero database. Mediante l'utilizzo delle repliche parziali, è possibile sincronizzare una replica solo con i dati necessari anziché con l'intero database.
Le repliche parziali sono repliche contenenti solo un sottoinsieme di record di una replica completa.
Per creare repliche parziali, specificare un filtro che selezioni i dati sincronizzati a un sottoinsieme dell'intero database.
Mediante l'utilizzo delle repliche parziali, è possibile sincronizzare una replica solo con i dati necessari anziché con l'intero database.
Un'azienda potrebbe ad esempio memorizzare il database delle vendite complessive solo nella sede centrale e replicare i dati regionali per ciascuna filiale regionale presente sul territorio. È possibile creare per le filiali repliche separate che contengano solo i dati concernenti ogni regione. Il database della sede centrale sarebbe una replica completa e verrebbero sincronizzate solo le repliche parziali.
Un'azienda potrebbe ad esempio memorizzare il database delle vendite complessive solo nella sede centrale e replicare i dati regionali per ciascuna filiale regionale presente sul territorio.
È possibile creare per le filiali repliche separate che contengano solo i dati concernenti ogni regione.
Il database della sede centrale sarebbe una replica completa e verrebbero sincronizzate solo le repliche parziali.
Vantaggi dell'utilizzo di repliche parziali
Le repliche parziali consentono di ridurre un maniera consistente le dimensioni del database, dato che è necessario replicare solo le parti di un database con cui si lavora più di frequente. La sincronizzazione di repliche parziali inoltre è un processo più rapido e richiede una quantità inferiore di spazio libero sul disco.
Le repliche parziali consentono di ridurre un maniera consistente le dimensioni del database, dato che è necessario replicare solo le parti di un database con cui si lavora più di frequente.
La sincronizzazione di repliche parziali inoltre è un processo più rapido e richiede una quantità inferiore di spazio libero sul disco.
L'utilizzo delle repliche parziali inoltre favorisce la limitazione di accesso ai dati. Nel caso ad esempio di un database sulle vendite, mediante l'utilizzo delle repliche parziali è possibile fare in modo che il personale di un ufficio vendite regionale non abbia accesso ai dati sulle vendite di altri uffici regionali. Sebbene sia possibile utilizzare le repliche parziali per limitare l'accesso ai record, non devono essere considerate sostitutive di un sistema di protezione.
L'utilizzo delle repliche parziali inoltre favorisce la limitazione di accesso ai dati.
Nel caso ad esempio di un database sulle vendite, mediante l'utilizzo delle repliche parziali è possibile fare in modo che il personale di un ufficio vendite regionale non abbia accesso ai dati sulle vendite di altri uffici regionali.
Sebbene sia possibile utilizzare le repliche parziali per limitare l'accesso ai record, non devono essere considerate sostitutive di un sistema di protezione.
Le repliche parziali presentano dei vantaggi anche per la replica di dati in una rete LAN (Local Area Network) o in una rete WAN (Wide Area Network). Limitando i dati replicati, le repliche parziali possono ridurre la quantità di dati da trasferire sulla rete LAN o portante a lunga distanza. In tal modo è possibile ridurre il traffico della rete e abbassare i costi della telecomunicazione.
Le repliche parziali presentano dei vantaggi anche per la replica di dati in una rete LAN (Local Area Network) o in una rete WAN (Wide Area Network).
Limitando i dati replicati, le repliche parziali possono ridurre la quantità di dati da trasferire sulla rete LAN o portante a lunga distanza.
In tal modo è possibile ridurre il traffico della rete e abbassare i costi della telecomunicazione.
Creazione di una replica parziale con oggetti ADO tramite la libreria JRO (Jet & Replication Objects Library) 2.5 (msjro.dll)
Per creare una replica parziale, eseguire la procedura seguente:
Utilizzare il metodo CreateReplica su un oggetto Replica specificando la costante jrRepTypePartial nell'argomento tiporeplica . In tal modo viene creata la replica parziale.
Utilizzare il metodo CreateReplica su un oggetto Replica specificando la costante jrRepTypePartial nell'argomento tiporeplica .
In questo modo viene creata una replica parziale.
Utilizzare la proprietà Filters per impostare i filtri e le relazioni desiderati che determinano i dati da replicare dalla replica completa.
Utilizzare il metodo PopulatePartial per trasferire tutti i record da una replica completa che soddisfa i criteri di filtro della nuova replica.
Quando si modificano i dati o i criteri del filtro nella replica parziale, si consiglia di utilizzare contemporaneamente i metodi Synchronize e PopulatePartial per assicurarsi che tutti i dati siano disponibili per la replica completa e che la replica parziale venga riempita in base ai criteri correnti del filtro.
Una volta creata una replica parziale, non è possibile convertirla in una replica completa. Se si eliminano tutti i filtri e le relazioni della replica parziale, questa conterrà tutti i record di una replica completa, ma avrà le stesse limitazioni e restrizioni di una replica parziale.
Una volta creata una replica parziale, non è possibile convertirla in una replica completa.
Se si eliminano tutti i filtri e le relazioni della replica parziale, questa conterrà tutti i record di una replica completa, ma avrà le stesse limitazioni e restrizioni di una replica parziale.
Creazione di una replica parziale con oggetti DAO
Utilizzare il metodo MakeReplica su un oggetto Database specificando la costante dbRepMakePartial nell'argomento opzioni . In questo modo viene creata una replica parziale.
Utilizzare il metodo MakeReplica su un oggetto Database specificando la costante dbRepMakePartial nell'argomento opzioni .
Utilizzare le proprietà ReplicaFilter e PartialReplica per impostare i filtri e le relazioni desiderati che determinano i dati da replicare dalla replica completa.
Repliche parziali e integrità referenziale
In una replica che dispone di relazioni che applicano l'integrità referenziale, molte tabelle del database potrebbero essere correlate alla tabella su cui è basato il filtro. Quando si crea una replica parziale, è necessario assicurarsi di includere tutte le tabelle correlate alla tabella che contiene i dati desiderati.
In una replica che dispone di relazioni che applicano l'integrità referenziale, molte tabelle del database potrebbero essere correlate alla tabella su cui è basato il filtro.
Quando si crea una replica parziale, è necessario assicurarsi di includere tutte le tabelle correlate alla tabella che contiene i dati desiderati.
Se ad esempio si utilizza il database di esempio Northwind, si potrebbe inserire un filtro nella tabella Impiegati [IDImpiegato]=1 in base al quale vengono sincronizzati solo i record relativi a un impiegato. Dato che la tabella Impiegati è correlata alle tabelle Ordini e Dettagli ordini, è necessario includere tali tabelle in modo che la replica parziale includa i record corrispondenti a tale impiegato nelle tabelle Ordini e Dettagli ordini.
Se ad esempio si utilizza il database di esempio Northwind, si potrebbe inserire un filtro nella tabella Impiegati [IDImpiegato]=1 in base al quale vengono sincronizzati solo i record relativi a un impiegato.
Dato che la tabella Impiegati è correlata alle tabelle Ordini e Dettagli ordini, è necessario includere tali tabelle in modo che la replica parziale includa i record corrispondenti a tale impiegato nelle tabelle Ordini e Dettagli ordini.
Potrebbe essere necessario includere altre tabelle correlate solo indirettamente al filtro. Si potrebbe desiderare ad esempio che la replica parziale includa un elenco di tutti i prodotti in modo da poter includere tutti i prodotti disponibili nei nuovi ordini. In tal caso è necessario includere la tabella Prodotti nella replica parziale.
Potrebbe essere necessario includere altre tabelle correlate solo indirettamente al filtro.
Si potrebbe desiderare ad esempio che la replica parziale includa un elenco di tutti i prodotti in modo da poter includere tutti i prodotti disponibili nei nuovi ordini.
In tal caso è necessario includere la tabella Prodotti nella replica parziale.
È inoltre importante tenere presenti le tabelle del database che non dispongono di relazioni applicate, ad esempio le tabelle di ricerca o le tabelle con relazioni in cui l'integrità referenziale non sia applicata. Una tabella che riempia una casella combinata potrebbe ad esempio non essere compresa in alcuna relazione. Se si sceglie di includere tale tabella, vengono estratti tutti i record. In caso contrario nessuno di questi record viene preso in considerazione.
Programmare con i moduli di classe
In Microsoft Access sono disponibili due tipi di moduli: moduli standard e moduli di classe . In Microsoft Access 95 i moduli di classe sono disponibili solo in associazione a una maschera o a un report, mentre in Microsoft Access 97 sono anche disponibili nella scheda Moduli della finestra del database .
Per restituire l'insieme SmartTagProperties per uno smart tag, utilizzare la proprietà Properties dell'oggetto SmartTag .
A differenza dell'insieme SmartTags in Microsoft Excel e Microsoft Word, l'insieme SmartTags in Microsoft Access è a base zero, pertanto il codice control.SmartTags(0) restituisce il primo smart tag per il controllo specificato.
A differenza degli insiemi SmartTags di Microsoft Excel e Microsoft Word, l'insieme SmartTags di Microsoft Access è a base zero.
Di conseguenza, il codice control.SmartTags(0) restituisce il primo smart tag per il controllo specificato.
Rappresenta uno smart tag aggiunto a un controllo di una maschera o di un report. L'oggetto SmartTag è un membro dell'insieme SmartTags .
Rappresenta uno smart tag aggiunto a un controllo di una maschera o di un report.
A differenza degli insiemi SmartTags di Microsoft Excel e Microsoft Word, l'insieme SmartTags di Microsoft Access è a base zero. Di conseguenza, il codice control.SmartTags(0) restituisce il primo smart tag per il controllo specificato.
Di conseguenza, il codice control.SmartTags(0) restituisce il primo smart tag per il controllo specificato.
In Microsoft Access sono disponibili due tipi di moduli: moduli standard e moduli di classe .
In Microsoft Access 95 i moduli di classe esistevano solo in associazione a una maschera o a un report.
In Microsoft Access 97 erano disponibili inoltre nella scheda Moduli della finestra del database .
Creazione di oggetti personalizzati con i moduli di classe
È possibile utilizzare un modulo di classe per creare una definizione per un oggetto personalizzato. Il nome con il quale viene salvato il modulo di classe diventa il nome dell'oggetto personalizzato. Le routine pubbliche Sub e Function , definite all'interno di un modulo di classe, diventano i metodi personalizzati dell'oggetto. Le routine pubbliche Property Let , Property Get e Property Set diventano le proprietà dell'oggetto.
È possibile utilizzare un modulo di classe per creare una definizione per un oggetto personalizzato.
Il nome con il quale viene salvato il modulo di classe diventa il nome dell'oggetto personalizzato.
Le routine pubbliche Sub e Function , definite all'interno di un modulo di classe, diventano i metodi personalizzati dell'oggetto.
Le routine pubbliche Property Let , Property Get e Property Set diventano le proprietà dell'oggetto.
Dopo avere definito le routine all'interno del modulo di classe, è possibile creare il nuovo oggetto creando una nuova istanza della classe. A tale scopo, dichiarare una variabile del tipo definito dalla classe. Se, ad esempio, il nome della classe è ABasicClass, la nuova istanza verrà creata nel modo seguente:
Dopo avere definito le routine all'interno del modulo di classe, è possibile creare il nuovo oggetto creando una nuova istanza della classe.
A tale scopo, dichiarare una variabile del tipo definito dalla classe.
Se, ad esempio, il nome della classe è ABasicClass, la nuova istanza verrà creata nel modo seguente:
Quando si esegue il codice contenente tale dichiarazione, Visual Basic crea la nuova istanza. A questo punto è possibile applicare i relativi metodi e proprietà utilizzando la variabile abc . Se ad esempio è stato definito un metodo personalizzato denominato ListNames, è possibile applicarlo nel seguente modo:
Quando si esegue il codice contenente tale dichiarazione, Visual Basic crea la nuova istanza.
A questo punto è possibile applicare i relativi metodi e proprietà utilizzando la variabile abc .
Se ad esempio è stato definito un metodo personalizzato denominato ListNames, è possibile applicarlo nel seguente modo:
Novità in Microsoft Access 95: Creazione di un'istanza predefinita per una classe della maschera
Quando si apre una maschera in visualizzazione Maschera , sia dall'interfaccia utente sia da Visual Basic, si crea un'istanza del modulo di classe di tale maschera. In altre parole, si designa uno spazio nella memoria in cui viene inserito l'oggetto ed è quindi possibile chiamare i relativi metodi e impostare o restituire le relative proprietà dal codice, come nel caso di qualsiasi oggetto incorporato. Lo stesso vale per quando si apre un report in Anteprima di stampa .
Quando si apre una maschera in visualizzazione Maschera , sia dall'interfaccia utente sia da Visual Basic, si crea un'istanza del modulo di classe di tale maschera.
La maschera non è visibile fino a quando la relativa proprietà Visible non viene impostata su True .
In altre parole, si designa uno spazio nella memoria in cui viene inserito l'oggetto ed è quindi possibile chiamare i relativi metodi e impostare o restituire le relative proprietà dal codice, come nel caso di qualsiasi oggetto incorporato.
Lo stesso vale per quando si apre un report in Anteprima di stampa .
Quando si fa riferimento a una maschera nel codice Visual Basic, in genere si utilizza l'istanza predefinita della classe della maschera. La classe di una maschera è dotata di una sola istanza predefinita. È inoltre possibile creare più istanze della stessa classe della maschera da Visual Basic. Quando vengono create più istanze di una classe di maschera, vengono create istanze non predefinite.
Quando si fa riferimento a una maschera nel codice Visual Basic, in genere si utilizza l'istanza predefinita della classe della maschera.
La classe di una maschera è dotata di una sola istanza predefinita.
È inoltre possibile creare più istanze della stessa classe della maschera da Visual Basic.
Quando vengono create più istanze di una classe di maschera, vengono create istanze non predefinite.
Esistono quattro modi per creare l'istanza predefinita di una maschera. È possibile aprire una maschera esistente utilizzando l'interfaccia utente, eseguendo il metodo OpenForm dell'oggetto DoCmd , richiamando il metodo CreateForm e passando alla nuova maschera in visualizzazione Maschera o utilizzando Visual Basic al fine di creare una variabile di tipo Form per fare riferimento all'istanza predefinita. Nell'esempio riportato di seguito viene indicato come aprire una maschera Employees cui punta una variabile oggetto Form .
Sono disponibili quattro modi diversi per creare l'istanza predefinita di una maschera.
È possibile aprire una maschera esistente utilizzando l'interfaccia utente, eseguendo il metodo OpenForm dell'oggetto DoCmd , richiamando il metodo CreateForm e passando alla nuova maschera in visualizzazione Maschera o utilizzando Visual Basic al fine di creare una variabile di tipo Form per fare riferimento all'istanza predefinita.
Nell'esempio seguente viene illustrato come aprire una maschera Employees a cui punta una variabile oggetto Form .
Microsoft Access inoltre fornisce un collegamento che consente di aprire la maschera e fare riferimento a un metodo o a una proprietà di tale maschera o a uno dei controlli di tale maschera in un solo passaggio. Viene fatto riferimento al modulo della classe della maschera come mostrato nell'esempio riportato di seguito.
Microsoft Access inoltre fornisce un collegamento che consente di aprire la maschera e fare riferimento a un metodo o a una proprietà di tale maschera o a uno dei controlli di tale maschera in un solo passaggio.
Viene fatto riferimento al modulo della classe della maschera come mostrato nell'esempio riportato di seguito.
Quando si esegue questo codice, se non è stata già aperta, viene aperta la maschera Employees in visualizzazione Maschera e viene impostata l'etichetta su New Employees. La maschera non è visibile fino a quando la relativa proprietà Visible non viene impostata su True . Al termine dell'esecuzione della routine che ha richiamato questo codice, l'istanza della maschera viene distrutta; in altre parole la maschera viene chiusa.
Quando si esegue questo codice, se non è stata già aperta, in Microsoft Access viene aperta la maschera Employees in visualizzazione Maschera e l'etichetta della maschera viene impostata su New Employees.
Nell'insieme Forms non è possibile fare riferimento a un'istanza non predefinita della classe di una maschera in base al nome. L'unico riferimento possibile è quello in base al numero di indice. Poiché è possibile creare più istanze non predefinite di una maschera e tutte le istanze hanno lo stesso nome, più maschere nell'insieme Forms possono avere lo stesso nome. Il numero di indice, pertanto, rappresenta l'unico modo per distinguerle.
Al termine dell'esecuzione della routine che ha chiamato il codice, l'istanza della maschera viene distrutta, ovvero la maschera viene chiusa.
Funzioni Input e InputB (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Elaborazione di byte di stringhe ANSI (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Funzioni di esempio che eseguono operazioni compatibili con le funzioni di elaborazione di byte delle versioni a 16 bit (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Utilizzo del tipo di dati Byte (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Funzioni Asc e AscB (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
I formati di memorizzazione del testo sono diversi nel codice di Visual Basic, Applications Edition (VBA) e in quello di Access Basic (utilizzato nelle prime versioni di Microsoft Access). Il testo viene memorizzato in formato ANSI all'interno del codice di Access Basic e in formato Unicode in Visual Basic. In questo argomento viene trattato un potenziale problema riscontrato durante la gestione di stringhe nella versione corrente di Microsoft Access. Per ulteriori informazioni, vedere Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe .
Se si tenta di eseguire questo codice quando la maschera Employees è aperta in visualizzazione Struttura , viene generato un errore di run-time . La maschera può essere aperta solo in visualizzazione Maschera.
Chiamata dell'API di Windows (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Se si tenta di eseguire questo codice quando la maschera Employees è aperta in visualizzazione Struttura , viene generato un errore di run-time .
La maschera può essere aperta solo in visualizzazione Maschera.
Se si utilizza questa sintassi per modificare una proprietà della maschera o uno dei relativi controlli, tale modifica viene perduta quando l'istanza della maschera viene distrutta. Ciò avviene tutte le volte che si modifica un'impostazione di una proprietà di una maschera in visualizzazione Maschera. È infatti necessario modificare la proprietà in visualizzazione Struttura e salvare le modifiche insieme alla maschera.
Se si utilizza questa sintassi per modificare una proprietà della maschera o uno dei relativi controlli, tale modifica viene perduta quando l'istanza della maschera viene distrutta.
Ciò avviene tutte le volte che si modifica un'impostazione di una proprietà di una maschera in visualizzazione Maschera.
È infatti necessario modificare la proprietà in visualizzazione Struttura e salvare le modifiche insieme alla maschera.
Creazione di più istanze non predefinite di maschere
Se si desidera visualizzare più istanze di una maschera alla volta, è possibile creare più istanze non predefinite della classe di una maschera. È possibile ad esempio che si desideri visualizzare allo stesso tempo i record relativi a un impiegato e quelli relativi al suo superiore. È possibile creare un'istanza della classe di una maschera Impiegati per visualizzare i record relativi all'impiegato e un'altra istanza per visualizzare i record relativi al superiore.
Se si desidera visualizzare più istanze di una maschera alla volta, è possibile creare più istanze non predefinite della classe di una maschera.
È possibile ad esempio che si desideri visualizzare allo stesso tempo i record relativi a un dipendente e quelli relativi al suo superiore.
È possibile creare un'istanza della classe della maschera Dipendenti per visualizzare i record relativi al dipendente e un'altra istanza per visualizzare i record relativi al superiore.
Per creare nuove istanze non predefinite della classe di una maschera da Visual Basic, dichiarare una variabile il cui tipo sia il nome del modulo della classe della maschera. Nella dichiarazione della variabile è necessario includere la parola chiave New . Con il codice seguente ad esempio viene creata una nuova istanza della maschera Employees che viene assegnata a una variabile di tipo Form :
Per creare nuove istanze non predefinite della classe di una maschera da Visual Basic, dichiarare una variabile il cui tipo sia il nome del modulo della classe della maschera.
Nella dichiarazione della variabile è necessario includere la parola chiave New .
Con il codice seguente ad esempio viene creata una nuova istanza della maschera Employees che viene assegnata a una variabile di tipo Form :
Questa istanza non predefinita della maschera non è visibile finché la relativa proprietà Visible non viene impostata in modo esplicito.
Al termine dell'esecuzione della routine che ha creato questa istanza, l'istanza viene rimossa dalla memoria, a meno che la variabile che la rappresenta non sia stata dichiarata come variabile a livello di modulo . Poiché le variabili a livello di modulo mantengono i valori fino a quando non vengono reimpostate tramite il comando Ripristina del menu Esegui o facendo clic sul pulsante Ripristina sulla barra degli strumenti, se la variabile è stata dichiarata come variabile a livello di modulo, la maschera resta aperta.
La condizione viene soddisfatta se l'impostazione della proprietà Visible per la maschera Employees è uguale a True .
È possibile utilizzare la costante Null in qualsiasi posizione in Microsoft Access. Ad esempio, è possibile utilizzare Null per impostare la proprietà DefaultValue per il controllo di una maschera utilizzando l'espressione seguente:
Al termine dell'esecuzione della routine che ha creato questa istanza, l'istanza viene rimossa dalla memoria, a meno che la variabile che la rappresenta non sia stata dichiarata come variabile a livello di modulo .
Il campo di una query rappresenta i dati di una tabella collegata alla query. Per impostazione predefinita, il campo di una query eredita tutte le proprietà della tabella o della query sottostante. Se, ad esempio, una struttura di tabella specifica il formato di visualizzazione del campo Data ordine come Data breve nella proprietà Formato del campo, il campo Data ordine viene formattato nel set di record della query come Data breve. Poiché le proprietà del campo sottostante sono predefinite, non vengono visualizzate nella finestra delle proprietà.
Se, ad esempio, una struttura di tabella specifica il formato di visualizzazione del campo Data ordine come Data breve nella proprietà Formato del campo, il campo Data ordine viene formattato nel set di record della query come Data breve.
Se si chiama una routine da un maschera e tale routine ha lo stesso nome di un controllo nella maschera, è necessario specificare in modo completo la chiamata di routine tramite il nome del modulo in cui si trova la routine stessa. Se, ad esempio, si desidera chiamare una routine denominata PrintInvoice che si trova in un modulo standard denominato Utilities e nella stessa maschera esiste anche un pulsante denominato PrintInvoice, quando si chiama la routine dalla maschera o dal modulo di maschera , è necessario utilizzare il nome completo: Utilities.PrintInvoice .
Se, ad esempio, si desidera chiamare una routine denominata PrintInvoice che si trova in un modulo standard denominato Utilities e nella stessa maschera esiste anche un pulsante denominato PrintInvoice, quando si chiama la routine dalla maschera o dal modulo di maschera , è necessario utilizzare il nome completo: Utilities.PrintInvoice .
Quando in una tabella si crea un campo che sarà associato a un controllo in un report o sarà utilizzato in un'espressione nella proprietà ControlSource di un controllo o di un report, evitare di assegnare al campo lo stesso nome di un metodo dell'oggetto Application . Per visualizzare un elenco dei metodi dell'oggetto Application , scegliere Visualizzatore oggetti dal menu Visualizza in visualizzazione Struttura del modulo. Fare clic su Access nella casella Progetto/libreria , Application nella casella Classi e quindi visualizzare i metodi dell'oggetto Application nella casella Membri di .
Quando in una tabella si crea un campo che sarà associato a un controllo in un report o sarà utilizzato in un'espressione nella proprietà ControlSource di un controllo o di un report, evitare di assegnare al campo lo stesso nome di un metodo dell'oggetto Application .
Poiché le variabili a livello di modulo mantengono i valori fino a quando non vengono reimpostate tramite il comando Ripristina del menu Esegui o facendo clic sul pulsante Ripristina sulla barra degli strumenti, se la variabile è stata dichiarata come variabile a livello di modulo, la maschera resta aperta.
Tutte le proprietà impostate influenzano tale istanza della classe della maschera, ma non vengono salvate con la maschera. Non è possibile creare una nuova istanza della classe della maschera se la maschera viene aperta in visualizzazione Struttura.
Tutte le proprietà impostate influenzano tale istanza della classe della maschera, ma non vengono salvate con la maschera.
Non è possibile creare una nuova istanza della classe della maschera se la maschera viene aperta in visualizzazione Struttura.
Nell'insieme Forms non è consentito fare riferimento a una istanza non predefinita della classe della maschera in base al nome. L'unico riferimento possibile è quello in base al numero di indice. Poiché è possibile creare più istanze non predefinite e tutte le istanze hanno lo stesso nome, è possibile che più maschere nell'insieme Forms abbiano lo stesso nome e l'unico modo di distinguerle è il numero di indice.
Nell'insieme Forms non è consentito fare riferimento a una istanza non predefinita della classe della maschera in base al nome.
L'unico riferimento possibile è quello in base al numero di indice.
Poiché è possibile creare più istanze non predefinite e tutte le istanze hanno lo stesso nome, è possibile che più maschere nell'insieme Forms abbiano lo stesso nome e l'unico modo di distinguerle è il numero di indice.
Programmare le barre degli strumenti e le barre dei menu
In Microsoft Access sono incluse barre dei comandi , ovvero barre degli strumenti e barre dei menu programmabili. Utilizzando le barre dei comandi, è possibile creare barre degli strumenti e dei menu personalizzate.
In Microsoft Access sono incluse barre dei comandi , ovvero barre degli strumenti e barre dei menu programmabili.
Utilizzando le barre dei comandi, è possibile creare barre degli strumenti e dei menu personalizzate.
Per utilizzare le barre dei comandi a scopo di programmazione, è necessario impostare un riferimento alla libreria di oggetti di Microsoft Office. In visualizzazione Struttura del modulo scegliere Riferimenti dal menu Strumenti e quindi selezionare la casella di controllo accanto a Microsoft Office Object Library .
Per utilizzare le barre dei comandi a scopo di programmazione, è necessario impostare un riferimento alla libreria di oggetti di Microsoft Office.
In visualizzazione Struttura del modulo scegliere Riferimenti dal menu Strumenti e quindi selezionare la casella di controllo accanto a Microsoft Office Object Library .
L'insieme CommandBars include tutte le barre dei comandi che esistono all'interno dell'applicazione. È possibile aggiungere un nuovo oggetto CommandBar all'insieme CommandBars utilizzando il metodo Add dell'insieme CommandBars . Con il seguente codice ad esempio viene creata una nuova barra dei comandi, denominata BarraDeiComandi. È importante ricordare che per visualizzarla, è necessario impostare su True la proprietà Visible della nuova barra dei comandi.
L'insieme CommandBars include tutte le barre dei comandi che esistono all'interno dell'applicazione.
È possibile aggiungere un nuovo oggetto CommandBar all'insieme CommandBars utilizzando il metodo Add dell'insieme CommandBars .
Con il seguente codice ad esempio viene creata una nuova barra dei comandi, denominata BarraDeiComandi.
È importante ricordare che per visualizzarla, è necessario impostare su True la proprietà Visible della nuova barra dei comandi.
Ciascun oggetto CommandBar dispone di un insieme CommandBarControls contenente tutti i controlli della barra dei comandi. I controlli della barra dei comandi sono diversi dai controlli di una maschera. È possibile creare tipi diversi di controlli della barra dei comandi, inclusi pulsanti, caselle combinate e popup. È possibile combinare tali controlli per creare una barra degli strumenti o una barra dei menu personalizzata.
Ciascun oggetto CommandBar dispone di un insieme CommandBarControls contenente tutti i controlli della barra dei comandi.
I controlli della barra dei comandi sono diversi dai controlli di una maschera.
È possibile creare tipi diversi di controlli della barra dei comandi, inclusi pulsanti, caselle combinate e popup.
È possibile combinare tali controlli per creare una barra degli strumenti o una barra dei menu personalizzata.
Per fare riferimento a un insieme CommandBarControls , utilizzare la proprietà Controls dell'oggetto CommandBar . Per aggiungere un controllo a una barra dei comandi, utilizzare il metodo Add dell'insieme CommandBarControls specificando il tipo di controllo che si desidera creare. Nell'esempio che segue viene indicato come aggiungere un nuovo pulsante alla barra dei comandi creata nell'esempio precedente:
Per fare riferimento a un insieme CommandBarControls , utilizzare la proprietà Controls dell'oggetto CommandBar .
Per aggiungere un controllo a una barra dei comandi, utilizzare il metodo Add dell'insieme CommandBarControls specificando il tipo di controllo che si desidera creare.
Nell'esempio che segue viene indicato come aggiungere un nuovo pulsante alla barra dei comandi creata nell'esempio precedente:
È possibile specificare un' espressione da valutare o una macro da eseguire quando l'utente fa clic su un controllo della barra di comando. Impostare la proprietà OnAction al nome di una macro o a un'espressione che contiene una funzione incorporata o definita dall'utente. Con la seguente riga di codice ad esempio la proprietà OnAction di un oggetto CommandBarControl viene impostata a un'espressione che include la funzione MsgBox . L'esempio illustra come utilizzare gli oggetti CommandBar e CommandBarControl creati nei due esempi precedenti.
È possibile specificare un' espressione da valutare o una macro da eseguire quando l'utente fa clic su un controllo della barra di comando.
Impostare la proprietà OnAction al nome di una macro o a un'espressione che contiene una funzione incorporata o definita dall'utente.
Con la seguente riga di codice ad esempio la proprietà OnAction di un oggetto CommandBarControl viene impostata a un'espressione che include la funzione MsgBox .
L'esempio illustra come utilizzare gli oggetti CommandBar e CommandBarControl creati nei due esempi precedenti.
Al contrario della maggior parte degli altri insiemi di Microsoft Access, l'insieme CommandBars e tutti gli insiemi che contiene vengono indicizzati a partire da 1 anziché da 0.
Campo della query
Il campo di una query rappresenta i dati di una tabella collegata alla query. In base all'impostazione predefinita, il campo di una query eredita tutte le proprietà della tabella o della query sottostante. Se ad esempio una struttura tabella specifica il formato di visualizzazione del campo Data ordine come Data abbreviata nella proprietà Formato del campo, il campo Data ordine viene formattato nel set di record della query come Data abbreviata. Poiché le proprietà del campo sottostante sono predefinite, non vengono visualizzate nella finestra delle proprietà.
Il campo di una query rappresenta i dati di una tabella collegata alla query.
Per impostazione predefinita, il campo di una query eredita tutte le proprietà della tabella o della query sottostante.
Per creare un nuovo oggetto Reference , utilizzare il metodo AddFromFile o AddFromGUID dell'insieme References .
Ad esempio, la stringa di testo ABC verrà memorizzata come illustrato di seguito.
Se i programmi creati in una versione precedente di Microsoft Access vengono spostati nella versione corrente di Microsoft Access, vedere gli argomenti seguenti relativi all'elaborazione delle stringhe.
Funzioni Asc e AscB (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Funzioni Chr e ChrB (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Se ad esempio una struttura tabella specifica il formato di visualizzazione del campo Data ordine come Data abbreviata nella proprietà Formato del campo, il campo Data ordine viene formattato nel set di record della query come Data abbreviata.
Poiché le proprietà del campo sottostante sono predefinite, non vengono visualizzate nella finestra delle proprietà.
Se si modifica la proprietà di un campo nella struttura tabella, il campo della query eredita automaticamente la modifica, mentre se la modifica avviene all'interno della query, viene utilizzata l'impostazione della proprietà contenuta nella struttura tabella. Se in seguito si modifica la proprietà nella struttura tabella, la modifica non si riflette nella query.
È possibile impostare le proprietà dei campi della query nella finestra Proprietà campo della visualizzazione Struttura della query.
Per aprire la finestra Proprietà campo nella visualizzazione Struttura della query per il campo di una query, fare clic su Proprietà sulla barra degli strumenti Struttura query .
Sezione di report
Una sezione di report è una parte di un report , ad esempio una sezione intestazione, piè di pagina o corpo.
È possibile impostate le proprietà della sezione di report che sono attributi di un report e influiscono sull'aspetto o sul comportamento di una determinata sezione. È possibile ad esempio impostare la proprietà Espandibile per specificare se la sezione si espanderà verticalmente per stampare tutti i dati in essa contenuti. Le proprietà della sezione sono impostate nella visualizzazione Struttura del report .
È possibile impostate le proprietà della sezione di report che sono attributi di un report e influiscono sull'aspetto o sul comportamento di una determinata sezione.
Le proprietà della sezione sono impostate nella visualizzazione Struttura del report .
Un report è un oggetto del database di Microsoft Access che presenta informazioni formattate e organizzate secondo le specifiche dell'utente. Esempi di report sono: riepiloghi vendite, elenchi telefonici ed etichette postali.
Un report è un oggetto del database di Microsoft Access che presenta informazioni formattate e organizzate secondo le specifiche dell'utente.
Esempi di report sono: riepiloghi vendite, elenchi telefonici ed etichette postali.
Compatibilità a livello di ambito e denominazione di oggetti
Le regole relative all'ambito in Visual Basic influiscono sulla scelta dei nomi per gli oggetti, i moduli e le routine .
Moduli e altri oggetti con lo stesso nome
Nell'assegnare un nome a un modulo evitare di anteporre Form_ o Report_ ai nomi dei moduli perché ciò sarebbe in conflitto con il codice esistente scritto dietro maschere e report.
Se un modulo di un'applicazione creata con le versioni 1. x o 2.0 di Microsoft Access non rispetta queste regole di denominazione, in Microsoft Access viene generato un errore durante la conversione dell'applicazione. Se ad esempio in un database delle versioni 1. x o 2.0 di Microsoft Access si assegna il nome Form_Ordini a un modulo, viene generato un errore e viene richiesto di assegnare un nuovo nome al modulo prima di tentare di convertirlo.
Se un modulo di un'applicazione creata con le versioni 1. x o 2.0 di Microsoft Access non rispetta queste regole di denominazione, in Microsoft Access viene generato un errore durante la conversione dell'applicazione.
Se ad esempio in un database delle versioni 1. x o 2.0 di Microsoft Access si assegna il nome Form_Ordini a un modulo, viene generato un errore e viene richiesto di assegnare un nuovo nome al modulo prima di tentare di convertirlo.
Moduli e routine con lo stesso nome
Anche se non è consigliabile, è possibile avere una routine con lo stesso nome di un modulo. Per chiamare tale routine da un' espressione in qualsiasi punto dell'applicazione, è necessario utilizzare per la routine un nome completo che includa sia il nome del modulo sia quello della routine, come nell'esempio seguente.
Anche se non è consigliabile, è possibile avere una routine con lo stesso nome di un modulo.
Per chiamare tale routine da un' espressione in qualsiasi punto dell'applicazione, è necessario utilizzare per la routine un nome completo che includa sia il nome del modulo sia quello della routine, come nell'esempio seguente.
Una routine di questo tipo non funziona con l'azione macro EseguiCodice , poiché non è consentito accedere tramite macro a routine che abbiano lo stesso nome di un modulo.
Routine e controlli con lo stesso nome
Se si richiama una routine da un maschera e tale routine ha lo stesso nome di un controllo nella maschera, è necessario specificare in modo completo la chiamata alla routine con il nome del modulo in cui essa risiede. Se ad esempio si desidera richiamare una routine denominata StampaFattura che risiede in un modulo standard denominato Utilità e nella stessa maschera esiste anche un pulsante denominato StampaFattura, quando si richiama la routine dalla maschera o dal modulo di maschera , è necessario utilizzare il nome completo Utilità.StampaFattura.
Se si chiama una routine da un maschera e tale routine ha lo stesso nome di un controllo nella maschera, è necessario specificare in modo completo la chiamata di routine tramite il nome del modulo in cui si trova la routine stessa.
Per impostare un riferimento da Visual Basic, creare un nuovo oggetto Reference che rappresenta il riferimento desiderato. L'insieme References contiene tutti i riferimenti attualmente impostati.
Per impostare un riferimento da Visual Basic, creare un nuovo oggetto Reference che rappresenta il riferimento desiderato.
L'insieme References contiene tutti i riferimenti attualmente impostati.
Per creare un nuovo oggetto Reference , utilizzare il metodo AddFromFile o AddFromGUID dell'insieme References . Per rimuovere un oggetto Reference , utilizzare il metodo Remove .
Se ad esempio si desidera richiamare una routine denominata StampaFattura che risiede in un modulo standard denominato Utilità e nella stessa maschera esiste anche un pulsante denominato StampaFattura, quando si richiama la routine dalla maschera o dal modulo di maschera , è necessario utilizzare il nome completo Utilità.StampaFattura.
Controlli con nomi simili
Non possono esistere due o più controlli con nomi simili che differiscono solo per uno spazio o un simbolo. Non possono esistere contemporaneamente ad esempio un controllo denominato [Data_di_nascita] e un controllo denominato [Data di nascita] o [Data+di+nascita].
Non possono esistere due o più controlli con nomi simili che differiscono solo per uno spazio o un simbolo.
Non possono esistere contemporaneamente ad esempio un controllo denominato [Data_di_nascita] e un controllo denominato [Data di nascita] o [Data+di+nascita].
Moduli con gli stessi nomi delle librerie dei tipi
Non è possibile salvare un modulo con lo stesso nome di una libreria dei tipi . Se si tenta di salvare un modulo con il nome ADO, Access, DAO o VBA, verrà visualizzato un messaggio di errore che indica che il nome è in conflitto con un modulo, un progetto o una libreria di oggetti esistente. Analogamente, se è stato impostato un riferimento a un'altra libreria dei tipi, ad esempio quella di Microsoft Excel, non è possibile salvare un modulo con il nome Excel.
Ogni database di Microsoft Access include un progetto di Visual Basic, che è costituito dall'insieme di tutti i moduli del progetto, inclusi i moduli standard e i moduli di classe . Tutti i database, i database di libreria e i componenti aggiuntivi di Microsoft Access contenuti in un file con estensione mde includono un progetto di Visual Basic.
Scegliere Riferimenti dal menu Strumenti . Il comando Riferimenti del menu Strumenti è disponibile solo quando una finestra del modulo è aperta e attiva in visualizzazione Struttura .
Il comando Riferimenti del menu Strumenti è disponibile solo quando una finestra del modulo è aperta e attiva in visualizzazione Struttura .
Non è possibile salvare un modulo con lo stesso nome di una libreria dei tipi .
Se si tenta di salvare un modulo con il nome ADO, Access, DAO o VBA, verrà visualizzato un messaggio di errore che indica che il nome è in conflitto con un modulo, un progetto o una libreria di oggetti esistente.
Analogamente, se è stato impostato un riferimento a un'altra libreria dei tipi, ad esempio quella di Microsoft Excel, non è possibile salvare un modulo con il nome Excel.
Campi con gli stessi nomi dei metodi
Se il campo di una tabella ha lo stesso nome di un metodo ADO (ActiveX Data Objects) di un oggetto Recordset ADO o di un metodo DAO (Data Access Object) di un oggetto Recordset DAO, non è possibile fare riferimento al campo corrispondente nel recordset utilizzando la sintassi con il punto (.). È necessario invece utilizzare la sintassi con il punto esclamativo (!), altrimenti in Microsoft Access verrà generato un errore. Nell'esempio seguente viene illustrato come fare riferimento a un campo denominato AddNew in un recordset aperto in una tabella denominata Contacts.
Moduli con gli stessi nomi delle funzioni di Visual Basic
Se si salva un modulo con lo stesso nome di una funzione intrinseca di Visual Basic, in Microsoft Access verrà generato un errore quando si tenta di eseguire la funzione. Se ad esempio si salva un modulo denominato MsgBox e si tenta di eseguire una routine che richiama la funzione MsgBox , in Microsoft Access verrà generato un errore che indica come valore previsto una variabile o una routine, ma non un modulo.
Se si salva un modulo con lo stesso nome di una funzione intrinseca di Visual Basic, in Microsoft Access verrà generato un errore quando si tenta di eseguire la funzione.
Se ad esempio si salva un modulo denominato MsgBox e si tenta di eseguire una routine che richiama la funzione MsgBox , in Microsoft Access verrà generato un errore che indica come valore previsto una variabile o una routine, ma non un modulo.
Moduli con gli stessi nomi degli oggetti
Se un database creato con una versione precedente di Microsoft Access include un modulo con lo stesso nome di un oggetto di Microsoft Access, di un oggetto ADO o di un oggetto DAO, si possono verificare errori di compilazione durante la conversione del database. Un modulo denominato Form o Database ad esempio può generare un errore di compilazione. Per evitare tali errori, rinominare il modulo.
Se un database creato con una versione precedente di Microsoft Access include un modulo con lo stesso nome di un oggetto di Microsoft Access, di un oggetto ADO o di un oggetto DAO, si possono verificare errori di compilazione durante la conversione del database.
Un modulo denominato Form o Database ad esempio può generare un errore di compilazione.
Per evitare tali errori, rinominare il modulo.
Assegnazione del nome ai campi utilizzati nelle espressioni o associati a controlli di maschere e report
Quando in una tabella si crea un campo che sarà associato a un controllo in un report o sarà utilizzato in un'espressione nella proprietà ControlSource di un controllo o di un report, evitare di assegnare al campo lo stesso nome di un metodo dell'oggetto Application . Per visualizzare un elenco dei metodi dell'oggetto Application , scegliere Visualizzatore oggetti dal menu Visualizza nella visualizzazione Struttura del modulo. Selezionare Access dalla casella Progetto/libreria , quindi Application dalla casella Classi e infine visualizzare i metodi dell'oggetto Application nella casella Membri di .
Per visualizzare un elenco dei metodi dell'oggetto Application , scegliere Visualizzatore oggetti dal menu Visualizza in visualizzazione Struttura del modulo.
Fare clic su Access nella casella Progetto/libreria , Application nella casella Classi e quindi visualizzare i metodi dell'oggetto Application nella casella Membri di .
Quando in una tabella si crea un campo che sarà associato a un controllo in un report o in una maschera, evitare di assegnare al campo uno dei seguenti nomi: AddRef, GetIDsOfNames, GetTypeInfo, GetTypeInfoCount, Invoke, QueryInterface, Release.
Identificatori con lo stesso nome di parole chiave di Visual Basic
La versione di Visual Basic utilizzata in Microsoft Access 97 e versioni successive contiene alcune nuove parole chiave che non è più possibile utilizzare come identificatori. Queste parole chiave sono: AddressOf , Assert , Decimal , DefDec , Enum , Event , Friend , Implements , RaiseEvent e WithEvents . Quando si converte un database creato con una versione precedente di Microsoft Access, gli identificatori esistenti con lo stesso nome di parole chiave di Visual Basic generano un errore di compilazione. Per risolvere questo problema, assegnare un nuovo nome agli identificatori.
La versione di Visual Basic utilizzata in Microsoft Access 97 e versioni successive contiene alcune nuove parole chiave che non è più possibile utilizzare come identificatori.
Queste parole chiave sono: AddressOf , Assert , Decimal , DefDec , Enum , Event , Friend , Implements , RaiseEvent e WithEvents .
Quando si converte un database creato con una versione precedente di Microsoft Access, gli identificatori esistenti con lo stesso nome di parole chiave di Visual Basic generano un errore di compilazione.
Per risolvere questo problema, assegnare un nuovo nome agli identificatori.
Nomi di progetto uguali a oggetti di Microsoft Access
Un nome di progetto è una stringa che corrisponde al nome dell'applicazione di Microsoft Access. Nelle versioni precedenti di Microsoft Access il nome del progetto corrispondeva al nome del database. A partire da Microsoft Access 2000 il nome del progetto è specificato dall'impostazione della proprietà ProjectName e l'impostazione predefinita corrisponde al nome del database. Se si converte un database con un nome uguale a una classe di oggetti, ad esempio application, form o report, per creare un nome di progetto che non sia in conflitto con gli oggetti esistenti viene accodato al nome del database un carattere di sottolineatura.
Un nome di progetto è una stringa che corrisponde al nome dell'applicazione di Microsoft Access.
Nelle versioni precedenti di Microsoft Access il nome del progetto corrispondeva al nome del database.
A partire da Microsoft Access 2000 il nome del progetto è specificato dall'impostazione della proprietà ProjectName e l'impostazione predefinita corrisponde al nome del database.
Se si converte un database con un nome uguale a una classe di oggetti, ad esempio application, form o report, per creare un nome di progetto che non sia in conflitto con gli oggetti esistenti viene accodato al nome del database un carattere di sottolineatura.
Impostare un riferimento a un progetto di Visual Basic in un altro database o in un altro progetto di Microsoft Access
Ciascun database di Microsoft Access (mdb o adp) include un progetto di Visual Basic, che è l'insieme di tutti i moduli del progetto, inclusi i moduli standard e i moduli di classe . Tutti i database (mdb o adp), i database di libreria e i componenti aggiuntivi di Microsoft Access contenuti in un file con estensione MDE includono un progetto di Visual Basic.
Il nome del database di Access e il nome del progetto possono essere diversi. Il nome del database di Access è determinato dal nome del file con estensione MDB, MDA, MDE o ADP, mentre il nome del progetto è determinato dall'impostazione dell'opzione Nome progetto nella scheda Generale della finestra di dialogo Proprietà progetto - Nome progetto , alla quale è possibile accedere scegliendo Proprietà Nome progetto dal menu Strumenti in Visual Basic Editor. Per impostazione predefinita, quando si crea un database (mdb o adp), il nome del database e il nome del progetto sono uguali. Se però si rinomina il database, non viene modificato automaticamente anche il nome del progetto. Allo stesso modo, le modifiche effettuate al nome del progetto non si ripercuotono sul nome del database.
Il nome del database di Access e il nome del progetto possono essere diversi.
Il nome del database di Access è determinato dal nome del file con estensione MDB, MDA, MDE o ADP, mentre il nome del progetto è determinato dall'impostazione dell'opzione Nome progetto nella scheda Generale della finestra di dialogo Proprietà progetto - Nome progetto , alla quale è possibile accedere scegliendo Proprietà Nome progetto dal menu Strumenti in Visual Basic Editor.
Per impostazione predefinita, quando si crea un database (mdb o adp), il nome del database e il nome del progetto sono uguali.
Se però si rinomina il database, non viene modificato automaticamente anche il nome del progetto.
Allo stesso modo, le modifiche effettuate al nome del progetto non si ripercuotono sul nome del database.
È possibile impostare un riferimento da un progetto di Visual Basic di un database di Microsoft Access a un progetto in un altro database, un database libreria o un componente aggiuntivo contenuto in un file con estensione MDE. Una volta impostato un riferimento, è possibile eseguire le routine Visual Basic nel progetto a cui si fa riferimento. Il database di esempio Northwind include ad esempio il modulo Funzioni di utilità contenente un funzione chiamata Caricata. È possibile impostare un riferimento al progetto del database di esempio Northwind dal database corrente, quindi chiamare la funzione Caricata come se fosse definita all'interno del database corrente.
È possibile impostare un riferimento da un progetto di Visual Basic di un database di Microsoft Access a un progetto in un altro database, un database libreria o un componente aggiuntivo contenuto in un file con estensione MDE.
Una volta impostato un riferimento, è possibile eseguire le routine Visual Basic nel progetto a cui si fa riferimento.
Il database di esempio Northwind include ad esempio il modulo Funzioni di utilità contenente un funzione chiamata Caricata.
È possibile impostare un riferimento al progetto del database di esempio Northwind dal database corrente, quindi chiamare la funzione Caricata come se fosse definita all'interno del database corrente.
Per impostare un riferimento al progetto del database di esempio Northwind da un altro progetto:
Aprire la finestra del modulo.
Scegliere Riferimenti dal menu Strumenti , quindi il pulsante Sfoglia nella finestra di dialogo Riferimenti .
Dalla casella Tipo file selezionare Database Microsoft Access (*.mdb) .
Individuare il file Northwind.mdb. Se è stato installato, in base all'impostazione predefinita il file si trova nella cartella \Programmi\Microsoft Office\Office\Esempi.
Fare clic su OK .
Nell'elenco dei riferimenti disponibili nella finestra di dialogo Riferimenti verrà visualizzato il file Northwind.mdb.
Impostare un riferimento al progetto in un altro database di Microsoft Access quando si desidera chiamare una routine pubblica definita all'interno di un modulo standard di quel database. Non è consentito chiamare una routine definita all'interno di un modulo di classe o routine di moduli standard precedute dalla parola chiave Private .
Impostare un riferimento al progetto in un altro database di Microsoft Access quando si desidera chiamare una routine pubblica definita all'interno di un modulo standard di quel database.
Non è consentito chiamare una routine definita all'interno di un modulo di classe o routine di moduli standard precedute dalla parola chiave Private .
È possibile impostare un riferimento al progetto in un database di Microsoft Access solo da un altro database di Microsoft Access.
È possibile impostare un riferimento a un progetto solo in un altro database di Microsoft Access 2002 o versioni successive. Per impostare un riferimento a un progetto di un database creato con una versione precedente di Microsoft Access è necessario innanzitutto convertire tale database in Microsoft Access 2002 o versioni successive.
È possibile impostare un riferimento a un progetto solo in un altro database di Microsoft Access 2002 o versioni successive.
Per impostare un riferimento a un progetto di un database creato con una versione precedente di Microsoft Access è necessario innanzitutto convertire tale database in Microsoft Access 2002 o versioni successive.
Se si imposta un riferimento a un progetto o a una libreria dei tipi da Microsoft Access e in seguito si sposta il file contenente il progetto o la libreria dei tipi in una cartella diversa, Microsoft Access tenterà di individuare il file e di ristabilire il riferimento. Se nel Registro di sistema esiste la chiave RefLibPaths , la ricerca verrà iniziata da tale chiave. In assenza di una voce corrispondente, il file verrà ricercato innanzitutto nella cartella corrente e quindi in tutte le cartelle dell'unità. È possibile creare la chiave RefLibPaths utilizzando l'Editor del registro di Windows nel percorso \HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\ versione \Access. Per ulteriori informazioni sull'utilizzo dell'Editor del registro, consultare la documentazione di Windows.
Se si imposta un riferimento a un progetto o a una libreria dei tipi da Microsoft Access e in seguito si sposta il file contenente il progetto o la libreria dei tipi in una cartella diversa, Microsoft Access tenterà di individuare il file e di ristabilire il riferimento.
Se nel Registro di sistema esiste la chiave RefLibPaths , la ricerca verrà iniziata da tale chiave.
In assenza di una voce corrispondente, il file verrà ricercato innanzitutto nella cartella corrente e quindi in tutte le cartelle dell'unità.
È possibile creare la chiave RefLibPaths utilizzando l'Editor del registro di Windows nel percorso \HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\ versione \Access.
Per ulteriori informazioni sull'utilizzo dell'Editor del registro, consultare la documentazione di Windows.
Impostare riferimenti per le librerie dei tipi
Quando si imposta un riferimento alla libreria dei tipi di un'altra applicazione, è possibile utilizzare nel codice gli oggetti forniti da tale applicazione. Se ad esempio si imposta un riferimento da Microsoft Access alla libreria di Microsoft Excel, è possibile utilizzare gli oggetti di Microsoft Excel mediante l' automazione (precedentemente indicata come Automazione OLE). Se si imposta un riferimento a un progetto di Visual Basic in un altro database di Microsoft Access, è possibile chiamare le relative routine pubbliche. Se si imposta un riferimento a un controllo ActiveX , è possibile utilizzare tale controllo nelle maschere di Microsoft Access.
Quando si imposta un riferimento alla libreria dei tipi di un'altra applicazione, è possibile utilizzare nel codice gli oggetti forniti da tale applicazione.
Se ad esempio si imposta un riferimento da Microsoft Access alla libreria di Microsoft Excel, è possibile utilizzare gli oggetti di Microsoft Excel mediante l' automazione (precedentemente indicata come Automazione OLE).
Se si imposta un riferimento a un progetto di Visual Basic in un altro database di Microsoft Access, è possibile chiamare le relative routine pubbliche.
Se si imposta un riferimento a un controllo ActiveX , è possibile utilizzare tale controllo nelle maschere di Microsoft Access.
È possibile impostare un riferimento da Microsoft Access quando Microsoft Visual Basic Editor è aperto oppure è possibile impostarlo nel codice Visual Basic.
Impostazione di un riferimento da Microsoft Access
Per impostare un riferimento alla libreria dei tipi di un'applicazione:
Scegliere Riferimenti dal menu Strumenti . Tale comando è disponibile solo quando una finestra del modulo è aperta ed è attiva in visualizzazione Struttura .
Scegliere Riferimenti dal menu Strumenti .
Tale comando è disponibile solo quando una finestra del modulo è aperta ed è attiva in visualizzazione Struttura .
Selezionare le caselle di controllo relative alle applicazioni in cui sono contenute le librerie dei tipi a cui si desidera fare riferimento.
Impostazione di un riferimento da Visual Basic
Per impostare un riferimento da Visual Basic, creare un nuovo oggetto Reference che rappresenta il riferimento desiderato. L'insieme References contiene tutti i riferimenti impostati correntemente.
L'insieme References contiene tutti i riferimenti impostati correntemente.
Per rimuovere un oggetto Reference , utilizzare il metodo Remove .
Vantaggi dell'impostazione di riferimenti
Se prima di utilizzare gli oggetti viene impostato un riferimento alla libreria dei tipi di un'altra applicazione, l'esecuzione del codice risulta molto più veloce. Se è stato impostato un riferimento, è possibile dichiarare una variabile di oggetto che rappresenti un oggetto nell'altra applicazione come tipo più specifico. Se ad esempio si scrive del codice per utilizzare gli oggetti di Microsoft Excel, è possibile dichiarare una variabile di oggetto di tipo Excel.Application utilizzando la sintassi riportata di seguito solo se è stato creato un riferimento alla libreria dei tipi di Microsoft Excel:
Se prima di utilizzare gli oggetti viene impostato un riferimento alla libreria dei tipi di un'altra applicazione, l'esecuzione del codice risulta molto più veloce.
Se è stato impostato un riferimento, è possibile dichiarare una variabile di oggetto che rappresenti un oggetto nell'altra applicazione come tipo più specifico.
Se ad esempio si scrive del codice per utilizzare gli oggetti di Microsoft Excel, è possibile dichiarare una variabile di oggetto di tipo Excel.Application utilizzando la sintassi riportata di seguito solo se è stato creato un riferimento alla libreria dei tipi di Microsoft Excel:
Se non è stato impostato un riferimento alla libreria dei tipi di Microsoft Excel, è necessario dichiarare la variabile come variabile generica di tipo Object . L'esecuzione del codice riportato di seguito è più lenta:
Se non è stato impostato un riferimento alla libreria dei tipi di Microsoft Excel, è necessario dichiarare la variabile come variabile generica di tipo Object .
L'esecuzione del codice riportato di seguito è più lenta:
Se inoltre viene impostato un riferimento alla libreria dei tipi di un'applicazione, tutti gli oggetti e i relativi metodi e proprietà vengono elencati nel Visualizzatore oggetti . In tal modo è più semplice determinare quali proprietà e quali metodi sono disponibili per ciascun oggetto.
Se inoltre viene impostato un riferimento alla libreria dei tipi di un'applicazione, tutti gli oggetti e i relativi metodi e proprietà vengono elencati nel Visualizzatore oggetti .
In tal modo è più semplice determinare quali proprietà e quali metodi sono disponibili per ciascun oggetto.
Dal momento che Microsoft Access è un componente COM che supporta l'automazione, è possibile anche impostare un riferimento alla relativa libreria dei tipi da un'altra applicazione e utilizzare gli oggetti di Microsoft Access da tale applicazione.
Controllo Snapshot Viewer
È un controllo ActiveX (Snapview.ocx) utilizzato per visualizzare lo snapshot di un report da Microsoft Internet Explorer 3.0 o versioni successive o da qualsiasi applicazione che supporti i controlli ActiveX, come Microsoft Access o Microsoft Visual Basic, Applications Edition.
Finestra Ordinamento e raggruppamento
La finestra Ordinamento e raggruppamento specifica l'ordine dei dati e definisce i livelli di gruppo per un report.
Per visualizzare la finestra Ordinamento e raggruppamento , fare clic su Ordinamento e raggruppamento sulla barra degli strumenti .
Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe
I formati di memorizzazione del testo sono diversi nel codice di Visual Basic, Applications Edition (VBA) e in quello di Access Basic (utilizzato nelle prime versioni di Microsoft Access). Il testo viene memorizzato in formato ANSI all'interno del codice di Access Basic e in formato Unicode in Visual Basic.
In Visual Basic il formato Unicode viene utilizzato per garantire la conformità con il formato utilizzato per il testo in OLE, una tecnologia indirettamente correlata a Visual Basic.
Formato di memorizzazione
Schema di memorizzazione
Descrizione
Ogni carattere viene memorizzato utilizzando 2 byte.
I caratteri ASCII vengono memorizzati utilizzando 1 byte, mentre i caratteri a byte doppio utilizzando 2 byte.
A causa delle differenze nel formato interno, esistono funzioni di elaborazione delle stringhe che operano in modo diverso in Access Basic e in Visual Basic. Queste funzioni e le rispettive istruzioni sono indicate di seguito.
A causa delle differenze nel formato interno, esistono funzioni di elaborazione delle stringhe che operano in modo diverso in Access Basic e in Visual Basic.
Queste funzioni e le rispettive istruzioni sono indicate di seguito.
Funzione Asc , funzione Chr , funzione InputB , funzione InStrB , funzione LeftB , funzione LenB , funzione RightB , funzione MidB e istruzioni corrispondenti.
A Visual Basic sono state inoltre aggiunte le funzioni ChrB e AscB .
Queste funzioni e le rispettive istruzioni presentano analogie in Access Basic e in Visual Basic in quanto elaborano il testo in byte, ma operano in modo diverso in quanto i rispettivi formati di memorizzazione per il testo sono diversi. Ad esempio, il risultato della funzione LenB (A) sarà 1 in Access Basic e 2 in Visual Basic.
Queste funzioni e le rispettive istruzioni presentano analogie in Access Basic e in Visual Basic in quanto elaborano il testo in byte, ma operano in modo diverso in quanto i rispettivi formati di memorizzazione per il testo sono diversi.
Ad esempio, il risultato della funzione LenB (A) sarà 1 in Access Basic e 2 in Visual Basic.
I programmi creati in versioni precedenti di Microsoft Access che utilizzano funzioni di elaborazione delle stringhe basate su unità byte devono essere modificati in Visual Basic utilizzando codice sorgente per il riconoscimento dei caratteri Unicode. Tuttavia, se vengono utilizzate solo funzioni di elaborazione delle stringhe che elaborano unità carattere, quali la funzione Len , la funzione Left e la funzione Right , tale riconoscimento non è necessario.
I programmi creati in versioni precedenti di Microsoft Access che utilizzano funzioni di elaborazione delle stringhe basate su unità byte devono essere modificati in Visual Basic utilizzando codice sorgente per il riconoscimento dei caratteri Unicode.
Tuttavia, se vengono utilizzate solo funzioni di elaborazione delle stringhe che elaborano unità carattere, quali la funzione Len , la funzione Left e la funzione Right , tale riconoscimento non è necessario.
Se i programmi creati in una versione precedente di Microsoft Access vengono spostati nella versione corrente di Microsoft Access, considerare gli aspetti seguenti relativi all'elaborazione delle stringhe.
Funzione Asc e funzione AscB
Il codice seguente veniva eseguito correttamente nelle versioni precedenti di Access, ma genera un errore di run-time nella versione corrente di Visual Basic in Microsoft Access.
L'errore è dovuto al fatto che MidB ( , 2,1), ovvero un argomento della funzione Asc , non restituisce dati in testo Unicode.
Chiamata dell'API di Windows (Differenze operative nell'utilizzo delle funzioni per l'elaborazione di stringhe)
Utilizzare la funzione AscB seguente per eseguire questo programma nella versione corrente di Microsoft Access:
In questo programma viene restituito il valore (&H30) del secondo byte Unicode.
Funzione Chr e funzione ChrB
La funzione Chr di Microsoft Access restituisce sempre caratteri a 2 byte. Nelle versioni precedenti di Microsoft Access, Chr (&H41) e ChrB (&H41) erano equivalenti, mentre nella versione corrente sono equivalenti Chr (&H41) e ChrB (&H41) + ChrB (0) .
La funzione Chr di Microsoft Access restituisce sempre caratteri a 2 byte.
Nelle versioni precedenti di Microsoft Access, Chr (&H41) e ChrB (&H41) erano equivalenti, mentre nella versione corrente sono equivalenti Chr (&H41) e ChrB (&H41) + ChrB (0) .
Inoltre, nelle versioni precedenti di Microsoft Access, il carattere veniva espresso come ChrB (&H82) + ChrB (&HA0), mentre nella versione corrente è espresso come ChrB (&H42) + ChrB (&H30).
Chiamata dell'API (Application Programming Interface) di Windows
In diverse funzioni API di Windows la lunghezza in byte di una stringa assume un significato speciale. Il programma riportato di seguito, ad esempio, restituisce una cartella installata in in Windows. In Microsoft Access, la funzione LeftB (Buffer, ret) non restituisce la stringa corretta. Pur mostrando la lunghezza in byte di una stringa ANSI, la funzione LeftB elabora infatti stringhe Unicode. In questo caso, utilizzare la funzione InStr in modo che venga restituita solo la stringa di caratteri senza valori Null.
In diverse funzioni API di Windows la lunghezza in byte di una stringa assume un significato speciale.
Il programma riportato di seguito, ad esempio, restituisce una cartella installata in in Windows.
In Microsoft Access, la funzione LeftB (Buffer, ret) non restituisce la stringa corretta.
Pur mostrando la lunghezza in byte di una stringa ANSI, la funzione LeftB elabora infatti stringhe Unicode.
In questo caso, utilizzare la funzione InStr in modo che venga restituita solo la stringa di caratteri senza valori Null.
Funzione Input e funzione InputB
La funzione Input di Microsoft Access converte il numero di caratteri specificato in una stringa Unicode durante la lettura del testo del file e legge i caratteri come variabili. La funzione InputB , invece, presuppone che i dati siano binari e li memorizza come variabili senza convertirli. Se la funzione InputB viene utilizzata per la lettura di un file memorizzato in un campo a lunghezza fissa, i dati con lunghezza fissa in byte devono essere convertiti dopo la lettura.
La funzione Input di Microsoft Access converte il numero di caratteri specificato in una stringa Unicode durante la lettura del testo del file e legge i caratteri come variabili.
La funzione InputB , invece, presuppone che i dati siano binari e li memorizza come variabili senza convertirli.
Se la funzione InputB viene utilizzata per la lettura di un file memorizzato in un campo a lunghezza fissa, i dati con lunghezza fissa in byte devono essere convertiti dopo la lettura.
Elaborazione dei byte di stringhe ANSI in Microsoft Access 7.0
Se è necessario elaborare i byte di stringhe ANSI in Microsoft Access, utilizzare la funzione StrConv . È possibile convertire il testo da ANSI a Unicode impostando la costante vbUnicode o vbFromUnicode . Se si elaborano i byte dopo aver temporaneamente convertito una stringa in una stringa ANSI e quindi si converte nuovamente la stringa in formato Unicode al termine del processo, è possibile utilizzare codici di versioni precedenti di Access con relativa facilità.
Se è necessario elaborare i byte di stringhe ANSI in Microsoft Access, utilizzare la funzione StrConv .
È possibile convertire il testo da ANSI a Unicode impostando la costante vbUnicode o vbFromUnicode .
Se si elaborano i byte dopo aver temporaneamente convertito una stringa in una stringa ANSI e quindi si converte nuovamente la stringa in formato Unicode al termine del processo, è possibile utilizzare codici di versioni precedenti di Access con relativa facilità.
Funzioni di esempio che eseguono operazioni compatibili con le funzioni di elaborazione dei byte delle versioni a 16 bit
In Visual Basic, Applications Edition l'elaborazione interna delle stringhe viene eseguita utilizzando il formato Unicode. Pertanto, le funzioni di elaborazione binaria in VBA sono diverse da quelle di Access Basic, utilizzato nelle prime versioni di Microsoft Access.
In Visual Basic, Applications Edition l'elaborazione interna delle stringhe viene eseguita utilizzando il formato Unicode.
Pertanto, le funzioni di elaborazione binaria in VBA sono diverse da quelle di Access Basic, utilizzato nelle prime versioni di Microsoft Access.
La funzione ANSI è stata creata per garantire la compatibilità tra Access Basic e Visual Basic.
Le stringhe immesse e rimosse tramite le funzioni di elaborazione ANSI sono sempre in formato Unicode. Dopo essere state convertite temporaneamente in stringhe ANSI all'interno della funzione, vengono ripristinate in formato Unicode al termine del processo.
Le stringhe immesse e rimosse tramite le funzioni di elaborazione ANSI sono sempre in formato Unicode.
Dopo essere state convertite temporaneamente in stringhe ANSI all'interno della funzione, vengono ripristinate in formato Unicode al termine del processo.
L'espressione seguente non consente di combinare il primo e il secondo byte di un carattere DBCS per creare un carattere DBCS.
Queste funzioni sono state create per elaborare stringhe in unità byte. Non è possibile, tuttavia, creare un carattere diverso tramite l'elaborazione basata su unità byte. In questo caso, il carattere verrà espresso come riportato di seguito:
Queste funzioni sono state create per elaborare stringhe in unità byte.
Non è possibile, tuttavia, creare un carattere diverso tramite l'elaborazione basata su unità byte.
In questo caso, il carattere verrà espresso come riportato di seguito:
In genere, se si converte una stringa in un carattere ANSI prima dell'elaborazione, la stringa convertita deve essere ripristinata in formato Unicode al termine del processo.
L'elaborazione di una stringa di byte rappresenta sempre una funzione per l'elaborazione di una stringa. Per elaborare dati binari, utilizzare una matrice di byte e non una variabile stringa o una funzione per l'elaborazione di stringhe di byte.
L'elaborazione di una stringa di byte rappresenta sempre una funzione per l'elaborazione di una stringa.
Per elaborare dati binari, utilizzare una matrice di byte e non una variabile stringa o una funzione per l'elaborazione di stringhe di byte.
Il formato di una stringa memorizzata in un matrice di byte è il seguente:
Utilizzo del tipo di dati Byte
In Microsoft Access è stato aggiunto il nuovo tipo di dati Byte . Se per l'elaborazione di dati binari viene utilizzata una variabile stringa, il testo viene convertito da ANSI a Unicode e i dati binari vengono modificati. Per la gestione di dati binari è pertanto consigliabile utilizzare variabili di tipo Byte .
In Microsoft Access è stato aggiunto il nuovo tipo di dati Byte .
Se per l'elaborazione di dati binari viene utilizzata una variabile stringa, il testo viene convertito da ANSI a Unicode e i dati binari vengono modificati.
Per la gestione di dati binari è pertanto consigliabile utilizzare variabili di tipo Byte .
Campo di tabella
I campi delle tabelle sono informazioni separate che compongono un record all'interno di una tabella. È possibile controllare l'aspetto dei dati, specificare i valori predefiniti e accelerare le operazioni di ricerca e ordinamento impostando le proprietà dei campi nella sezione Proprietà campo della visualizzazione Struttura della tabella .
I campi delle tabelle sono informazioni separate che compongono un record all'interno di una tabella.
È possibile controllare l'aspetto dei dati, specificare i valori predefiniti e accelerare le operazioni di ricerca e ordinamento impostando le proprietà dei campi nella sezione Proprietà campo della visualizzazione Struttura della tabella .
Microsoft Access utilizza le proprietà dei campi per visualizzare o modificare i dati. Ad esempio, le proprietà Formato , Maschera di input ed Etichetta impostate influiscono sull'aspetto del database della tabella e della query. I controlli sulle nuove maschere e sui nuovi report basati sulla tabella ereditano queste proprietà per impostazione predefinita. È possibile utilizzare altre proprietà per impostare le regole relative ai dati o per richiedere l'immissione dei dati nei campi. Tale operazione viene eseguita da Microsoft Access ogni volta che si aggiungono o si modificano i dati in una tabella.
Per aprire una tabella nella visualizzazione Struttura, andare alla finestra del database , fare clic sulla scheda Tabelle , selezionare la tabella che si desidera aprire e fare clic su Struttura .
Tabella
Una tabella è la struttura fondamentale del sistema di gestione di database relazionali. In Microsoft Access, una tabella è un oggetto che memorizza i dati in record (righe) e campi (colonne). Generalmente, i dati riguardano una determinata categoria, ad esempio impiegati o ordini.
Una tabella è la struttura fondamentale del sistema di gestione di database relazionali.
In Microsoft Access, una tabella è un oggetto che memorizza i dati in record (righe) e campi (colonne).
Generalmente, i dati riguardano una determinata categoria, ad esempio impiegati o ordini.
Utilizzo di costanti enumerate in Microsoft Access 2002 o versioni successive
In Microsoft Access 2002 sono state aggiunte o modificate numerose costanti intrinseche per poter creare elenchi di costanti enumerate che vengono visualizzate nell'elenco Elenco automatico membri della finestra del modulo per gli argomenti di vari metodi , funzioni e proprietà di Microsoft Access oppure come impostazione di varie proprietà di Microsoft Access. È possibile selezionare la costante appropriata dall'elenco nella finestra del modulo, invece di dover ricordare la costante o cercarla negli argomenti della Guida.
Le informazioni seguenti si riferiscono alle costanti enumerate:
Il set di costanti enumerate per ciascun argomento di metodo, funzione o proprietà ha un nome che viene visualizzato nella riga della sintassi relativa al metodo, funzione o proprietà nella finestra del modulo quando l'opzione Informazioni standard automatiche è selezionata nella scheda Editor della finestra di dialogo Opzioni , disponibile scegliendo Opzioni dal menu Strumenti . Per le impostazioni delle proprietà viene visualizzato solo l'elenco delle costanti, ma non il nome. La riga di sintassi per il metodo OpenForm dell'oggetto DoCmd visualizza ad esempio [View As AcFormView = acNormal] per l'argomento visualizza di tale metodo. AcFormView è il nome di questo set di costanti enumerate e acNormal è l'impostazione predefinita per l'argomento. Il Visualizzatore oggetti elenca inoltre i nomi dei set delle costanti enumerate nella casella Classi ed elenca le costanti intrinseche contenute in ognuno di questi set nella casella Membri di .
Il set di costanti enumerate per ciascun argomento di metodo, funzione o proprietà ha un nome che viene visualizzato nella riga della sintassi relativa al metodo, funzione o proprietà nella finestra del modulo quando l'opzione Informazioni standard automatiche è selezionata nella scheda Editor della finestra di dialogo Opzioni , disponibile scegliendo Opzioni dal menu Strumenti .
Per le impostazioni delle proprietà viene visualizzato solo l'elenco delle costanti, ma non il nome.
La riga di sintassi per il metodo OpenForm dell'oggetto DoCmd visualizza ad esempio [View As AcFormView = acNormal] per l'argomento visualizza di tale metodo.
AcFormView è il nome di questo set di costanti enumerate e acNormal è l'impostazione predefinita per l'argomento.
Il Visualizzatore oggetti elenca inoltre i nomi dei set di costanti enumerate nella casella Classi , nonché le costanti intrinseche contenute in ogni set nella casella Membri di .
Oltre alle costanti dichiarate tramite l'istruzione Const , Microsoft Access dichiara automaticamente una serie di costanti intrinseche e consente l'accesso alle costanti di Visual Basic, Applications Edition (VBA) e alle costanti ADO (ActiveX Data Objects). È inoltre possibile utilizzare le costanti disponibili in altre librerie di oggetti di riferimento. Per ulteriori informazioni sull'aggiunta di riferimenti, vedere Impostazione dei riferimenti per le librerie dei tipi .
Per i nomi di costanti modificati, le costanti precedenti continuano a funzionare. Una delle costanti intrinseche per l'argomento salva del metodo Close dell'oggetto DoCmd era ad esempio acPrompt . Ora è diventata acSavePrompt , ma acPrompt continua a funzionare.
Per i nomi di costanti modificati le costanti precedenti continuano a funzionare.
Una delle costanti intrinseche per l'argomento salva del metodo Close dell'oggetto DoCmd era ad esempio acPrompt .
Ora è disponibile la costante acSavePrompt , anche se acPrompt continua a funzionare.
In molti casi nelle versioni precedenti di Microsoft Access era possibile lasciare un'impostazione di argomento vuota e veniva eseguita l'azione predefinita per quell'argomento. Era possibile ad esempio lasciare vuoti gli argomenti tipooggetto e nomeoggetto del metodo Close e la finestra attiva veniva chiusa. Per i nuovi set di costanti enumerate, l'impostazione vuota è stata sostituita da una nuova costante predefinita. L'argomento tipooggetto del metodo Close ad esempio dispone ora di una nuova costante predefinita, acDefault . L'impostazione di questo argomento alla nuova costante equivale a lasciare vuoto l'argomento. È ancora possibile lasciare vuoti alcuni argomenti e in questo caso viene utilizzata la nuova costante predefinita.
In molti casi nelle versioni precedenti di Microsoft Access era possibile lasciare un'impostazione di argomento vuota e veniva eseguita l'azione predefinita per quell'argomento.
Era possibile ad esempio lasciare vuoti gli argomenti tipooggetto e nomeoggetto del metodo Close e la finestra attiva veniva chiusa.
Per i nuovi set di costanti enumerate, l'impostazione vuota è stata sostituita da una nuova costante predefinita.
L'argomento tipooggetto del metodo Close ad esempio dispone ora di una nuova costante predefinita, acDefault .
L'impostazione di questo argomento alla nuova costante equivale a lasciare vuoto l'argomento.
È ancora possibile lasciare vuoti alcuni argomenti e in questo caso viene utilizzata la nuova costante predefinita.
Vi è una sola eccezione a quanto è stato appena detto. Se viene eseguito il codice Visual Basic di versioni precedenti di Visual Basic in Microsoft Access utilizzando l' Automazione , gli argomenti vuoti provocano un errore se hanno le nuove costanti predefinite. Tale problema non si verifica per i codici precedenti Visual Basic, Applications Edition o Visual Basic eseguiti direttamente in Microsoft Access.
Vi è una sola eccezione a quanto è stato appena detto.
Se viene eseguito il codice Visual Basic di versioni precedenti di Visual Basic in Microsoft Access utilizzando l' Automazione , gli argomenti vuoti provocano un errore se hanno le nuove costanti predefinite.
Tale problema non si verifica per i codici precedenti Visual Basic, Applications Edition o Visual Basic eseguiti direttamente in Microsoft Access.
Costanti di Microsoft Access - Panoramica
Generale
Una costante rappresenta un valore numerico o un valore stringa non soggetto a variazioni. È possibile utilizzare le costanti per migliorare la leggibilità del codice Visual Basic e per agevolarne l'aggiornamento. Inoltre, l'utilizzo di costanti intrinseche garantisce la continuità di funzionamento del codice anche se i valori sottostanti rappresentati dalle costanti vengono modificati in versioni successive di Microsoft Access.
Una costante rappresenta un valore numerico o un valore stringa non soggetto a variazioni.
È possibile utilizzare le costanti per migliorare la leggibilità del codice Visual Basic e per agevolarne l'aggiornamento.
Inoltre, l'utilizzo di costanti intrinseche garantisce la continuità di funzionamento del codice anche se i valori sottostanti rappresentati dalle costanti vengono modificati in versioni successive di Microsoft Access.
Microsoft Access supporta tre tipi di costanti:
Costanti simboliche, ovvero create tramite l'istruzione Const e utilizzate nei moduli .
Costanti intrinseche, ovvero incluse in Microsoft Access o in una libreria di riferimento.
Costanti definite dal sistema, ovvero True , False e Null .
Costanti simboliche
Gli stessi valori vengono spesso utilizzati ripetutamente nel codice oppure il codice dipende da determinati numeri che non hanno un significato evidente. In questi casi, è possibile migliorare la leggibilità e agevolare l'aggiornamento del codice utilizzando costanti simboliche o definite dall'utente che consentono di utilizzare un nome significativo anziché un numero o una stringa.
Gli stessi valori vengono spesso utilizzati ripetutamente nel codice oppure il codice dipende da determinati numeri che non hanno un significato evidente.
In questi casi, è possibile migliorare la leggibilità e agevolare l'aggiornamento del codice utilizzando costanti simboliche o definite dall'utente che consentono di utilizzare un nome significativo anziché un numero o una stringa.
Dopo aver creato una costante utilizzando l'istruzione Const , non è possibile modificarla o assegnarle un nuovo valore. Inoltre, non è possibile creare una costante che abbia lo stesso nome di una costante intrinseca.
Dopo aver creato una costante utilizzando l'istruzione Const , non è possibile modificarla o assegnarle un nuovo valore.
Inoltre, non è possibile creare una costante che abbia lo stesso nome di una costante intrinseca.
Negli esempi seguenti vengono illustrate alcune possibili modalità di utilizzo dell'istruzione Const per dichiarare costanti numeriche e costanti stringhe:
Costanti intrinseche
Oltre alle costanti dichiarate tramite l'istruzione Const , Microsoft Access dichiara automaticamente una serie di costanti intrinseche e consente l'accesso alle costanti di Visual Basic, Applications Edition (VBA) e alle costanti ADO (ActiveX Data Objects). È inoltre possibile utilizzare le costanti disponibili in altre librerie di oggetti di riferimento. Per ulteriori informazioni sull'aggiunta di riferimenti, vedere Impostazione dei riferimenti per le librerie dei tipi .
Oltre alle costanti dichiarate tramite l'istruzione Const , Microsoft Access dichiara automaticamente una serie di costanti intrinseche e consente l'accesso alle costanti di Visual Basic, Applications Edition (VBA) e alle costanti ADO (ActiveX Data Objects).
È inoltre possibile utilizzare le costanti disponibili in altre librerie di oggetti di riferimento.
Per ulteriori informazioni sull'aggiunta di riferimenti, vedere Impostazione dei riferimenti per le librerie dei tipi .
È possibile utilizzare qualsiasi costante intrinseca in una macro o in Visual Basic. Queste costanti sono sempre disponibili. Le costanti incorporate specifiche utilizzate con funzioni, metodi o proprietà particolari sono descritte nell'argomento della Guida relativo ai singoli metodi, funzioni o proprietà.
È possibile utilizzare qualsiasi costante intrinseca in una macro o in Visual Basic.
Queste costanti sono sempre disponibili.
Le costanti incorporate specifiche utilizzate con funzioni, metodi o proprietà particolari sono descritte nell'argomento della Guida relativo ai singoli metodi, funzioni o proprietà.
È possibile utilizzare il Visualizzatore oggetti per visualizzare l'elenco delle costanti intrinseche incluse in tutte le librerie di oggetti disponibili.
Le costanti intrinseche sono caratterizzate da un prefisso di due lettere che identifica la libreria di oggetti che definisce la costante. Le costanti incluse nella libreria di Microsoft Access sono precedute dal prefisso ac; le costanti della libreria ADO dal prefisso ad e le costanti della libreria di Visual Basic dal prefisso vb. Ad esempio:
Le costanti intrinseche sono caratterizzate da un prefisso di due lettere che identifica la libreria di oggetti che definisce la costante.
Le costanti incluse nella libreria di Microsoft Access sono precedute dal prefisso ac; le costanti della libreria ADO dal prefisso ad e le costanti della libreria di Visual Basic dal prefisso vb.
Ad esempio:
Se l'argomento Criteri è composto da una stringa concatenata a un valore non intero e i parametri di sistema specificano un separatore decimale non statunitense quale la virgola, ad esempio strSQL = PRICE > & lngPrice e lngPrice = 125,50 , si verificherà un errore quando si cerca di chiamare il metodo. Ciò è dovuto al fatto che durante la concatenazione il numero viene convertito in stringa utilizzando il separatore decimale predefinito di sistema e il linguaggio SQL per Microsoft Access supporta solo il separatore decimale statunitense, ovvero il punto.
È possibile che i valori rappresentati dalle costanti intrinseche vengano modificati in versioni successive di Microsoft Access ed è pertanto consigliabile utilizzare le costanti anziché i rispettivi valori effettivi. È comunque possibile visualizzare il valore effettivo di una costante selezionandola nel Visualizzatore oggetti oppure digitando ? nomecostante nella finestra Immediata .
È possibile che i valori rappresentati dalle costanti intrinseche vengano modificati in versioni successive di Microsoft Access ed è pertanto consigliabile utilizzare le costanti anziché i rispettivi valori effettivi.
È comunque possibile visualizzare il valore effettivo di una costante selezionandola nel Visualizzatore oggetti oppure digitando ? nomecostante nella finestra Immediata .
È possibile utilizzare costanti intrinseche ogni volta che si possono utilizzare costanti simboliche o definite dall'utente, ad esempio nelle espressioni . Nell'esempio riportato di seguito viene illustrato l'utilizzo della costante intrinseca vbCurrency per determinare se la variabile varNum è un elemento Variant per il quale la funzione VarType restituisce 6 ( Currency ):
È possibile utilizzare costanti intrinseche ogni volta che si possono utilizzare costanti simboliche o definite dall'utente, ad esempio nelle espressioni .
Nell'esempio riportato di seguito viene illustrato l'utilizzo della costante intrinseca vbCurrency per determinare se la variabile varNum è un elemento Variant per il quale la funzione VarType restituisce 6 ( Currency ):
Costanti definite dal sistema
È possibile utilizzare le costanti definite dal sistema True , False e Null in qualsiasi posizione in Microsoft Access. Ad esempio, è possibile utilizzare la costante True nell'espressione di condizione di macro riportata di seguito. La condizione è soddisfatta se l'impostazione della proprietà Visible per la maschera Employees è uguale a True .
È possibile utilizzare le costanti definite dal sistema True , False e Null in qualsiasi posizione in Microsoft Access.
Ad esempio, è possibile utilizzare la costante True nell'espressione di condizione di macro seguente.
La condizione è soddisfatta se l'impostazione della proprietà Visible per la maschera Employees è uguale a True .
È possibile utilizzare la costante Null in qualsiasi posizione in Microsoft Access. Ad esempio, è possibile utilizzare Null per impostare la proprietà DefaultValue per il controllo di una maschera utilizzando l'espressione riportata di seguito:
È possibile utilizzare la costante Null in qualsiasi posizione in Microsoft Access.
Ad esempio, è possibile utilizzare Null per impostare la proprietà DefaultValue per il controllo di una maschera utilizzando l'espressione riportata di seguito:
Query di comando
Le query di comando consentono di modificare o copiare i dati e includono query di accodamento, di eliminazione, di creazione tabella e di aggiornamento. Al contrario, le query di selezione non copiano né modificano i dati, ma restituiscono semplicemente un set di record.
Tipo di query di comando
Di accodamento
Aggiunge record a un set di risultati della query alla fine di una tabella esistente.
Di eliminazione
Elimina un set di righe che soddisfano i criteri specificati.
Di creazione tabella
Crea una nuova tabella dal set di risultati di una query esistente.
Di aggiornamento
Modifica un set di record in base ai criteri specificati.
Informazioni sui controlli ActiveX (pagine di accesso ai dati)
Oltre ai controlli incorporati che appaiono nella casella degli strumenti, in Microsoft Access sono supportati i controlli ActiveX (in precedenza definiti come controlli personalizzati o OLE). Il controllo ActiveX, come qualsiasi controllo incorporato, consiste in un oggetto che si posiziona su una maschera per consentire o migliorare l'interazione dell'utente con l'applicazione. I controlli ActiveX sono corredati da eventi e possono essere inglobati in altri controlli con estensione ocx. Il calendario rappresenta un esempio di controllo ActiveX.
Controllo ActiveX (maschere)
Controllo :
Strumento :
Controllo Calendario
Pulsante Altri controlli
Non confondere questo controllo con il controllo ActiveX in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Informazioni sui controlli ActiveX (pagine di accesso ai dati) .
Non confondere questo controllo con il controllo ActiveX in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Informazioni sui controlli ActiveX (pagine di accesso ai dati) .
Controllo associato
Un controllo associato è un controllo di una maschera o di un report i cui contenuti derivano da un campo della tabella, della query o dell'istruzione SQL sottostante. La proprietà Origine controllo del controllo è impostata a un nome campo nella tabella, query o istruzione SQL. Una casella di testo che visualizza ad esempio il cognome di un impiegato è associata al campo Cognome della tabella Impiegati.
Un controllo associato è un controllo di una maschera o di un report i cui contenuti derivano da un campo della tabella, query o istruzione SQL sottostante.
La proprietà Origine controllo del controllo è impostata a un nome campo nella tabella, query o istruzione SQL.
Ad esempio, una casella di testo che visualizza il cognome di un dipendente è associata al campo Cognome della tabella Dipendenti.
Controllo Span associato
È possibile utilizzare il controllo Span associato per memorizzare codice Span in un campo di una tabella. Quando la pagina di accesso ai dati visualizza i valori contenuti nel campo in questione, il codice Span esegue l'azione specificata dall'utente. Quando la colonna o il campo viene posizionato in una pagina di accesso ai dati come controllo Span associato, il contenuto del campo viene composto come codice Span e non sarà modificabile.
È possibile impostare il controllo Span associato come controllo predefinito per una pagina di accesso ai dati con gruppi. Impostare la proprietà DefaultControlType della pagina di accesso dati su Bound Span .
È possibile impostare il controllo Span associato come controllo predefinito per una pagina di accesso ai dati con gruppi.
Impostare la proprietà DefaultControlType della pagina di accesso dati su Bound Span .
È possibile utilizzare il controllo Span associato per visualizzare calcoli e tutti i dati presenti su una pagina di accesso ai dati con gruppi. Se si utilizzano i controlli Span, la pagina verrà caricata più rapidamente in Microsoft Internet Explorer 5.
È possibile utilizzare il controllo Span associato per visualizzare calcoli e tutti i dati presenti su una pagina di accesso ai dati con gruppi.
Se si utilizzano i controlli Span, la pagina verrà caricata più rapidamente in Microsoft Internet Explorer 5.
Non è possibile utilizzare il controllo di spostamento per eseguire operazioni di filtraggio o di ordinamento su controlli Span associati in visualizzazione Pagina o in Internet Explorer.
Controllo Collegamento ipertestuale associato
Utilizzando il controllo Collegamento ipertestuale associato è possibile aggiungere un collegamento ipertestuale associato a un campo di testo di una pagina di accesso ai dati . È possibile utilizzare un collegamento ipertestuale associato quando si desidera assegnare un indirizzo di collegamento ipertestuale diverso a ciascun record di una tabella. Mentre ci si sposta da un record all'altro, è possibile fare clic su un collegamento ipertestuale e accedere a una pagina Web diversa per ogni record.
Utilizzando il controllo Collegamento ipertestuale associato è possibile aggiungere un collegamento ipertestuale associato a un campo di testo di una pagina di accesso ai dati .
È possibile utilizzare un collegamento ipertestuale associato quando si desidera assegnare un indirizzo di collegamento ipertestuale diverso a ciascun record di una tabella.
Mentre ci si sposta da un record all'altro, è possibile fare clic su un collegamento ipertestuale e accedere a una pagina Web diversa per ogni record.
Controllo Cornice oggetto associato
Un controllo Cornice oggetto associato visualizza un'immagine, un grafico o qualsiasi oggetto OLE memorizzato in una tabella di un database di Microsoft Access. Se ad esempio si memorizzano le immagini degli impiegati in una tabella di Microsoft Access, è possibile utilizzare una cornice oggetto associato per visualizzarle in una maschera o un report.
Un controllo Cornice oggetto associato visualizza un'immagine, un grafico o qualsiasi oggetto OLE memorizzato in una tabella di un database di Microsoft Access.
Se ad esempio si memorizzano le fotografie degli impiegati in una tabella di Microsoft Access, è possibile utilizzare una cornice oggetto associato per visualizzarle in una maschera o un report.
Osservazioni
Questo tipo di controllo consente di creare o modificare l'oggetto dalla maschera o dal report tramite il server OLE .
Una cornice oggetto associato è associata a un campo in una tabella sottostante.
Il campo della tabella sottostante cui è associata la cornice oggetto associato deve essere di tipo Oggetto OLE .
L'oggetto di una cornice oggetto associato cambia a seconda del record. La cornice oggetto associato può visualizzare oggetti collegati o incorporati . Per visualizzare gli oggetti non memorizzati in una tabella sottostante, utilizzare un controllo Cornice oggetto non associato o Immagine .
L'oggetto di una cornice oggetto associato cambia a seconda del record.
La cornice oggetto associato può visualizzare oggetti collegati o incorporati .
Per visualizzare gli oggetti non memorizzati in una tabella sottostante, utilizzare un controllo Cornice oggetto non associato o Immagine .
Controllo Grafico (maschere e report)
È possibile utilizzare il controllo Grafico per incorporare un grafico che visualizza i dati di Microsoft Access da una maschera o un report. È inoltre possibile modificare tale grafico dalla maschera o dal report tramite Microsoft Graph.
È possibile utilizzare il controllo Grafico per incorporare un grafico che visualizza i dati di Microsoft Access da una maschera o un report.
È inoltre possibile modificare tale grafico dalla maschera o dal report tramite Microsoft Graph.
Non confondere questo controllo con i controlli Immagine, Immagine area sensibile, Grafico di Office o Foglio di lavoro di Office in formato HTML dinamico utilizzati in una pagina di accesso ai dati. Per informazioni su questi controlli in una pagina di accesso ai dati, vedere i controlli Immagine , Immagine con collegamento ipertestuale , Grafico di Office o Foglio di lavoro di Office (pagine di accesso ai dati).
Non confondere questo controllo con i controlli Immagine, Immagine area sensibile, Grafico di Office o Foglio di lavoro di Office in formato HTML dinamico utilizzati in una pagina di accesso ai dati.
Per informazioni su questi controlli in una pagina di accesso ai dati, vedere i controlli Immagine , Immagine con collegamento ipertestuale , Grafico di Office o Foglio di lavoro di Office (pagine di accesso ai dati).
Quando si include un controllo Grafico in una maschera o un report, Microsoft Access visualizza la Creazione guidata Grafico per facilitare la creazione del grafico.
Per incorporare o collegare un grafico contenente i dati di altre applicazioni, utilizzare il controllo Cornice oggetto non associato o Cornice oggetto associato .
Controllo Casella di controllo (pagine di accesso ai dati)
Una casella di controllo di una pagina di accesso ai dati è un controllo associato che visualizza un valore Sì/No di un' origine record sottostante.
Casella di controllo
Controllo Casella di controllo
Quando si seleziona o si deseleziona una casella di controllo associata a un campo Sì/No, viene visualizzato il valore nella tabella sottostante in base alle impostazioni della proprietà Format del campo (Yes/No, True / False o On/Off).
Una casella di controllo non associata può inoltre essere utilizzata in una finestra di dialogo personalizzata per accettare l'input dell'utente.
Controllo Casella di controllo (maschere e report)
Una casella di controllo di una maschera o di un report è un controllo autonomo che visualizza un valore Sì/No di un' origine record sottostante.
Non confondere questo controllo con il controllo Casella di controllo in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di controllo (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Casella di controllo in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di controllo (pagine di accesso ai dati).
Quando si seleziona o si deseleziona una casella di controllo associata a un campo Sì/No, viene visualizzato il valore nella tabella sottostante in base alle impostazioni della proprietà Formato del campo (Sì/No, Vero/Falso o On/Off).
Controllo Casella combinata (maschere)
Il controllo Casella combinata unisce le caratteristiche di una casella di testo e di una casella di riepilogo . Le caselle combinate vengono utilizzate per digitare un valore o selezionarlo da un elenco predefinito.
Le caselle combinate vengono utilizzate per digitare un valore o selezionarlo da un elenco predefinito.
Non confondere questo controllo con il controllo Casella di riepilogo a discesa in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di riepilogo a discesa (pagine di accesso ai dati) .
Non confondere questo controllo con il controllo Casella di riepilogo a discesa in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di riepilogo a discesa (pagine di accesso ai dati) .
In visualizzazione Maschera di Microsoft Access l'elenco non viene visualizzato fino a quando non si fa clic sulla freccia della casella combinata.
Se è stato attivato Creazioni guidate Controllo prima di selezionare lo strumento Casella combinata, è possibile creare una casella combinata tramite una procedura guidata. Per attivare o disattivare Creazioni guidate Controllo, fare clic sul pulsante Creazioni guidate Controllo nella casella degli strumenti.
Se è stato attivato Creazioni guidate Controllo prima di selezionare lo strumento Casella combinata, è possibile creare una casella combinata tramite una procedura guidata.
Per attivare o disattivare Creazioni guidate Controllo, fare clic sul pulsante Creazioni guidate Controllo nella casella degli strumenti.
L'impostazione della proprietà LimitToList determina la possibilità o meno di immettere i valori non inclusi nell'elenco.
L'oggetto CurrentProject fa riferimento al progetto per il progetto di Microsoft Access (adp) o il database di Microsoft Access corrente.
Oggetto CommandButton
L'elenco può avere una o più colonne, con o senza intestazione.
Controllo Pulsante di comando (pagine di accesso ai dati)
Un pulsante di comando in una pagina di accesso ai dati può avviare un'azione o un gruppo di azioni. In una pagina di accesso ai dati il codice scritto in JavaScript o in Visual Basic Script è collegato a un pulsante di comando tramite Microsoft Visual Script Editor .
Un pulsante di comando in una pagina di accesso ai dati può avviare un'azione o un gruppo di azioni.
In una pagina di accesso ai dati il codice scritto in JavaScript o in Visual Basic Script è collegato a un pulsante di comando tramite Microsoft Visual Script Editor .
Pulsante di comando
Controllo Pulsante di comando
Per visualizzare il testo di un pulsante di comando, impostare la proprietà Value .
Controllo Pulsante di comando (maschere)
Un pulsante di comando di una maschera può avviare un'azione o un set di azioni. È possibile ad esempio creare un pulsante di comando per aprire un'altra maschera. Per fare in modo che un pulsante di comando esegua un'azione è necessario scrivere una macro o una routine evento e allegarla alla proprietà Su clic del pulsante.
Un pulsante di comando di una maschera può avviare un'azione o un insieme di azioni.
È possibile ad esempio creare un pulsante di comando per aprire un'altra maschera.
Per fare in modo che un pulsante di comando esegua un'azione, è necessario scrivere una macro o una routine evento e allegarla alla proprietà OnClick del pulsante.
Quando si seleziona un'opzione all'interno di un gruppo, il valore del campo cui è associato tale gruppo viene impostato al valore della proprietà OptionValue dell'opzione selezionata.
Pages ( nomepagina )
Una query a campi incrociati calcola totali di riepilogo in base ai valori di ogni riga e colonna, nonché somme, medie, conteggi o altri tipi di totali sui record e quindi suddivide i risultati in due tipi di informazioni, uno in basso a sinistra del foglio dati e l'altro in alto.
Controllo Immagine
Controllo Etichetta
Non confondere questo controllo con il controllo Pulsante di comando in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Pulsante di comando (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Pulsante di comando in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Pulsante di comando (pagine di accesso ai dati).
È possibile visualizzare il testo su un pulsante di comando impostandone la proprietà Caption o visualizzare un'immagine impostandone la proprietà Picture .
È possibile creare oltre 30 tipi di pulsanti di comando tramite la Creazione guidata Pulsante di comando. Quando si utilizza tale creazione guidata, Microsoft Access crea il pulsante e la routine evento.
È possibile creare oltre 30 tipi di pulsanti di comando tramite la Creazione guidata Pulsante di comando.
Quando si utilizza tale creazione guidata, Microsoft Access crea il pulsante e la routine evento.
Query a campi incrociati
Una query a campi incrociati calcola i totali di riepilogo in base ai valori di ogni riga e colonna. Tale query calcola somme, medie, conteggi o altri tipi di totali sui record e suddivide i risultati in due tipi di informazioni, uno in basso a sinistra del foglio dati e l'altro in alto. Ad esempio, la query Ordini trimestrali per prodotto del database di esempio Northwind è una query a campi incrociati.
Una query a campi incrociati calcola i totali di riepilogo in base ai valori di ogni riga e colonna.
Tale query calcola somme, medie, conteggi o altri tipi di totali sui record e suddivide i risultati in due tipi di informazioni, uno in basso a sinistra del foglio dati e l'altro in alto.
Ad esempio, la query Ordini trimestrali per prodotto del database di esempio Northwind è una query a campi incrociati.
Controllo Casella di riepilogo a discesa (pagine di accesso ai dati)
Il controllo Casella di riepilogo a discesa di una pagina di accesso ai dati combina alcune funzioni di una casella di testo con quelle di una casella di riepilogo . Utilizzare il controllo Casella di riepilogo a discesa quando si desidera visualizzare e selezionare un valore da un elenco predefinito.
Il controllo Casella di riepilogo a discesa di una pagina di accesso ai dati combina alcune funzioni di una casella di testo con quelle di una casella di riepilogo .
Utilizzare il controllo Casella di riepilogo a discesa quando si desidera visualizzare e selezionare un valore da un elenco predefinito.
Casella combinata
Strumento casella combinata
In visualizzazione Pagina le voci dell'elenco verranno visualizzate facendo clic sulla freccia del controllo Casella di riepilogo a discesa.
Se le Creazioni guidate Controllo sono attive quando si seleziona lo strumento controllo Casella di riepilogo a discesa, è possibile utilizzare la funzione di creazione guidata. Per attivare o disattivare le Creazioni guidate Controllo, fare clic sullo strumento corrispondente nella casella degli strumenti.
Se le Creazioni guidate Controllo sono attive quando si seleziona lo strumento controllo Casella di riepilogo a discesa, è possibile utilizzare la funzione di creazione guidata.
Per attivare o disattivare Creazioni guidate Controllo, fare clic sul pulsante Creazioni guidate Controllo sulla barra degli strumenti.
Non è possibile immettere valori nuovi non presenti nell'elenco.
Controllo Sottomaschera/Sottoreport
Il controllo Sottomaschera/Sottoreport incorpora una maschera in un'altra maschera o un report in un altro report.
È possibile utilizzare una maschera con una sottomaschera per presentare relazioni uno-a-molti , ad esempio una categoria di prodotti e i relativi articoli. In questo caso la maschera principale può visualizzare l'ID, il nome e la descrizione della categoria e la sottomaschera può visualizzare i prodotti disponibili nella categoria.
È possibile utilizzare una maschera con una sottomaschera per presentare relazioni uno-a-molti , ad esempio una categoria di prodotti e i relativi articoli.
In questo caso la maschera principale può visualizzare l'ID, il nome e la descrizione della categoria e la sottomaschera può visualizzare i prodotti disponibili nella categoria.
Anziché creare la maschera principale e aggiungerle in un secondo momento il controllo Sottomaschera, è possibile creare contemporaneamente maschera principale e sottomaschera tramite una creazione guidata. È inoltre possibile creare una sottomaschera o un sottoreport trascinando una maschera o un report esistente dalla finestra del database alla maschera o al report principale.
Anziché creare la maschera principale e aggiungerle in un secondo momento il controllo Sottomaschera, è possibile creare contemporaneamente maschera principale e sottomaschera tramite una creazione guidata.
È inoltre possibile creare una sottomaschera o un sottoreport trascinando una maschera o un report esistente dalla finestra del database alla maschera o al report principale.
Controllo Espandi
Il controllo Espandi consente di aggiungere un pulsante Espandi/Comprimi in una pagina di accesso ai dati .
Controllo
Questo controllo consente di visualizzare o nascondere record raggruppati sotto altri record.
Controllo Immagine con collegamento ipertestuale
Il controllo Immagine con collegamento ipertestuale consente di aggiungere un' immagine non associata a una pagina di accesso ai dati .
Controllo Immagine con collegamento ipertestuale
Utilizzare il controllo Immagine con collegamento ipertestuale per aggiungere a una pagina di accesso ai dati un'immagine che, se selezionata, visualizza un'altra pagina Web richiamata dal disco rigido, dal Web o da un'altra posizione. Quando si crea un controllo Immagine con collegamento ipertestuale, si seleziona l'immagine da visualizzare sulla pagina e l'indirizzo del file a cui accedere.
Utilizzare il controllo Immagine con collegamento ipertestuale per aggiungere a una pagina di accesso ai dati un'immagine che, se selezionata, visualizza un'altra pagina Web richiamata dal disco rigido, dal Web o da un'altra posizione.
Quando si crea un controllo Immagine con collegamento ipertestuale, si seleziona l'immagine da visualizzare sulla pagina e l'indirizzo del file a cui accedere.
La finestra di dialogo Inserisci immagine visualizza un elenco di immagini selezionabili.
La finestra di dialogo Inserisci collegamento ipertestuale consente di selezionare il file o la pagina Web da collegare al controllo Immagine.
Quando il puntatore passa sull'immagine in visualizzazione Pagina , si trasforma in una mano per indicare che l'immagine è un collegamento che può essere selezionato per passare a un'altra pagina. È inoltre possibile definire descrizioni comandi e testo alternativo per l'immagine.
Quando il puntatore passa sull'immagine in visualizzazione Pagina , si trasforma in una mano per indicare che l'immagine è un collegamento che può essere selezionato per passare a un'altra pagina.
È inoltre possibile definire descrizioni comandi e testo alternativo per l'immagine.
Controllo Collegamento ipertestuale (pagine di accesso ai dati)
Il controllo Collegamento ipertestuale consente di aggiungere un collegamento ipertestuale in una pagina di accesso ai dati .
Icona del pulsante
Quando il controllo Collegamento ipertestuale viene posizionato in una pagina di accesso ai dati, viene visualizzata la finestra di dialogo Inserisci collegamento ipertestuale , che consente di selezionare il file o la pagina Web da collegare al controllo Collegamento ipertestuale.
Controllo Immagine (pagine di accesso ai dati)
Il controllo Immagine consente di aggiungere un'immagine in una pagina di accesso ai dati . È possibile includere un controllo di questo tipo ad esempio per inserire un logo in una pagina di immissione dati Vendite.
Il controllo Immagine consente di aggiungere un'immagine in una pagina di accesso ai dati .
È possibile includere un controllo di questo tipo ad esempio per inserire un logo in una pagina di immissione dati Vendite.
Controllo Immagine
Controllo cornice immagine
È possibile utilizzare il controllo Immagine o una cornice di oggetto non associato per le immagini non associate. Utilizzando un controllo Immagine la visualizzazione sarà più veloce.
È possibile utilizzare il controllo Immagine o una cornice di oggetto non associato per le immagini non associate.
Utilizzando un controllo Immagine la visualizzazione sarà più veloce.
Controllo Immagine (Maschere e report)
Il controllo Immagine può aggiungere un'immagine a una maschera o a un report. È ad esempio possibile includere un controllo Immagine per un logo in un report di fattura.
Il controllo Immagine può aggiungere un'immagine a una maschera o a un report.
È possibile ad esempio includere un controllo Immagine per un logo in un report di fattura.
Non confondere questo controllo con il controllo Immagine in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Immagine (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Immagine in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Immagine (pagine di accesso ai dati).
È possibile utilizzare il controllo Immagine o una cornice di oggetto non associato per immagini non associate. Il vantaggio del controllo Immagine risiede nel fatto che viene visualizzato più rapidamente, mentre il vantaggio della cornice di oggetto non associato risiede nella possibilità di modificare l'oggetto direttamente dalla maschera o dal report.
Controllo Etichetta (pagine di accesso ai dati)
Le etichette in una pagina di accesso ai dati visualizzano testi descrittivi quali titoli, didascalie o brevi istruzioni. Le etichette hanno le seguenti caratteristiche specifiche:
Le etichette in una pagina di accesso ai dati visualizzano testi descrittivi quali titoli, didascalie o brevi istruzioni.
Le etichette hanno le caratteristiche specifiche seguenti:
Non visualizzano valori restituiti da campi o espressioni .
Il testo non cambia quando ci si sposta da un record all'altro.
Etichetta
Controllo Etichetta
Anche altri controlli possono avere un'etichetta associata. Quando viene creata, una casella di testo ad esempio ha associata un'etichetta che ne indica il nome.
Un'etichetta può essere allegata a un altro controllo.
Una casella di testo ad esempio ha un'etichetta allegata che ne visualizza una stringa.
Se l'etichetta viene creata utilizzando lo strumento Etichetta , resta autonoma, cioè non è associata ad altri controlli. Le etichette autonome di solito vengono utilizzate per i titoli o per altri testi descrittivi.
Se l'etichetta viene creata utilizzando lo strumento Etichetta , resta autonoma, cioè non è associata ad altri controlli.
Le etichette autonome di solito vengono utilizzate per i titoli o per altri testi descrittivi.
Controllo Etichetta (maschere e report)
Le etichette di una maschera o di un report visualizzano testo descrittivo, ad esempio titoli, stringhe o brevi istruzioni. Le etichette hanno determinate caratteristiche:
Le etichette di una maschera o di un report visualizzano testo descrittivo, ad esempio titoli, didascalie o brevi istruzioni.
Sono sempre non associate .
Non confondere questo controllo con il controllo Etichetta in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Etichetta (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Etichetta in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Etichetta (pagine di accesso ai dati).
Un'etichetta può essere allegata a un altro controllo. Una casella di testo ad esempio ha un'etichetta allegata che ne visualizza una stringa. Tale etichetta appare come intestazione di colonna nella visualizzazione Foglio dati di una maschera.
Tale etichetta appare come intestazione di colonna nella visualizzazione Foglio dati di una maschera.
Un'etichetta creata tramite lo strumento Etichetta non viene allegata a nessun altro controllo. Le etichette autonome vengono utilizzate per informazioni quali il titolo di una maschera o di un report o per altro testo descrittivo e non compaiono in visualizzazione Foglio dati.
Controllo Linea (pagine di accesso ai dati)
Il controllo Linea visualizza una linea orizzontale, verticale o diagonale in una pagina di accesso ai dati .
Linea
Controllo Linea
È possibile utilizzare la proprietà Height per modificare lo spessore della linea e il pulsante Colore linea/bordo per modificare il colore del bordo o renderlo trasparente.
Controllo Linea (maschere e report)
Il controllo linea visualizza una linea orizzontale, verticale o diagonale su una maschera o un report.
Non confondere questo controllo con il controllo Linea in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Linea (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Linea in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Linea (pagine di accesso ai dati).
È possibile utilizzare i pulsanti Spessore bordo per modificare lo spessore della linea e Colore bordo per modificare il colore del bordo o renderlo trasparente. È inoltre possibile modificare lo stile della linea del bordo (punti, trattini e così via) tramite la proprietà BorderStyle .
Controllo Casella di riepilogo (pagine di accesso ai dati)
Il controllo Casella di riepilogo visualizza un elenco di valori o alternative. In molti casi è più semplice e veloce selezionare un valore da un elenco piuttosto che doverlo ricordare per digitarlo. Effettuando una selezione nell'elenco si è certi inoltre che il valore immesso in un campo sia corretto.
Il controllo Casella di riepilogo visualizza un elenco di valori o alternative.
In molti casi è più rapido e facile selezionare un valore da un elenco piuttosto che ricordare un valore da digitare.
Un elenco di opzioni assicura inoltre che il valore immesso in un campo sia corretto.
Casella di riepilogo
Controllo Casella di riepilogo
L'elenco di una casella di riepilogo è composto da due righe di dati.
Le righe possono avere una o più colonne, con o senza intestazione.
Casella di riepilogo a più colonne
Se una casella di riepilogo a più colonne è associata , tramite Microsoft Access vengono memorizzati i valori di una delle colonne.
Mediante una casella di riepilogo non associata è possibile memorizzare un valore da utilizzare con un altro controllo, ad esempio per limitare i valori di un'altra casella di riepilogo o di una finestra di dialogo personalizzata . Una casella di riepilogo non associata inoltre consente di trovare un record in base al valore selezionato dalla casella stessa.
Se nella maschera non vi è spazio disponibile per visualizzare una normale casella di riepilogo, utilizzare una casella di riepilogo a discesa .
Controllo Casella di riepilogo (maschere)
Non confondere questo controllo con il controllo Casella di riepilogo in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di riepilogo (pagine di accesso ai dati) .
Non confondere questo controllo con il controllo Casella di riepilogo in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di riepilogo (pagine di accesso ai dati) .
Se nella maschera non vi è spazio sufficiente per visualizzare una casella di riepilogo o si desidera digitare nuovi valori e selezionarne altri da un elenco, utilizzare una casella combinata al posto della casella di riepilogo.
Controllo Filmato
Il controllo Filmato consente di aggiungere un file video (avi o mov) in una pagina di accesso ai dati .
Controllo Filmato
Quando si aggiunge tale controllo in una pagina di accesso ai dati, viene visualizzata la finestra di dialogo Inserire video in cui è possibile selezionare il file del filmato da collegare al controllo.
È possibile specificare se l'esecuzione del filmato deve iniziare all'apertura della pagina di accesso ai dati o al passaggio del puntatore del mouse sul controllo Filmato.
Controllo Grafico di Office
Il controllo Grafico di Office consente di aggiungere un grafico in una pagina di accesso ai dati .
Controllo Grafico di Office
È possibile utilizzare Microsoft Office Chart, uno dei Microsoft Office Web Components, per creare grafici dinamici e interattivi in una pagina di accesso ai dati da rendere disponibile su siti Web per la visualizzazione mediante un browser . È possibile ad esempio creare un grafico utilizzando i dati di una tabella contenente le cifre relative alle vendite. Quando si aggiornano le cifre, viene aggiornato anche il grafico, in modo che gli utenti possano sempre visualizzare nelle pagine Web le informazioni più recenti.
È possibile utilizzare Microsoft Office Chart, uno dei Microsoft Office Web Components, per creare grafici dinamici e interattivi in una pagina di accesso ai dati da rendere disponibile su siti Web per la visualizzazione mediante un browser .
È possibile ad esempio creare un grafico utilizzando i dati di una tabella contenente le cifre relative alle vendite.
Quando si aggiornano le cifre, viene aggiornato anche il grafico, in modo che gli utenti possano sempre visualizzare nelle pagine Web le informazioni più recenti.
Per creare un grafico in una pagina di accesso ai dati è necessario Microsoft Internet Explorer 5 o versioni successive, ma gli utenti che dispongono di Internet Explorer 4. x o versioni successive possono comunque visualizzare il grafico e vederne l'aggiornamento a seguito di variazioni nei dati.
Controllo Foglio di lavoro di Office
Il controllo Foglio di lavoro di Office consente di aggiungere in una pagina di accesso ai dati un foglio di calcolo con alcune delle caratteristiche e funzioni tipiche di Microsoft Excel.
Controllo Foglio di lavoro di Office
È possibile aggiungere un controllo Foglio di lavoro per includere in una pagina di accesso ai dati alcune delle funzionalità specifiche dei fogli di calcolo di Microsoft Excel e poter immettere valori, inserire formule, applicare filtri e altro ancora. Per creare un foglio di calcolo in cui immettere dati non elaborati o importare dati da una pagina Web o da un file di testo, seguire la procedura descritta più avanti. Se si desidera utilizzare nel foglio di calcolo dati di altri controlli presenti nella pagina di accesso ai dati, è necessario fare riferimento a tali controlli nelle rispettive celle del foglio di calcolo.
Controllo Pulsante di opzione (pagine di accesso ai dati)
Un pulsante di opzione in una pagina di accesso ai dati è un controllo autonomo utilizzato per visualizzare un valore Sì/No proveniente da un' origine record sottostante.
Pulsante di opzione
Quando si seleziona o si deseleziona un pulsante di opzione associato a un campo Sì/No, il valore della tabella sottostante viene visualizzato in base all'impostazione della proprietà Format del campo (Yes/No, True / False o On/Off).
È possibile utilizzare i pulsanti di opzione in un gruppo di opzioni per visualizzare valori da selezionare.
È inoltre possibile utilizzare un pulsante di opzione non associato in una finestra di dialogo personalizzata per accettare l'input dell'utente.
Controllo Pulsante di opzione (maschere e report)
Un pulsante di opzione in una maschera o in un report è un controllo autonomo utilizzato per visualizzare un valore Sì/No di un' origine record sottostante
Non confondere questo controllo con il controllo Pulsante di opzione in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Pulsante di opzione (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Pulsante di opzione in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Pulsante di opzione (pagine di accesso ai dati).
Controllo Gruppo di opzioni (pagine di accesso ai dati)
Un gruppo di opzioni in una pagina di accesso ai dati visualizza un gruppo limitato di alternative. Per effettuare una selezione da un gruppo di opzioni è sufficiente fare clic sul valore desiderato. In un gruppo di opzioni è possibile selezionare una sola opzione alla volta.
Un gruppo di opzioni in una pagina di accesso ai dati visualizza un gruppo limitato di alternative.
Per effettuare una selezione da un gruppo di opzioni è sufficiente fare clic sul valore desiderato.
In un gruppo di opzioni è possibile selezionare una sola opzione alla volta.
Un gruppo di opzioni è composto da una cornice e da un set di caselle di controllo , interruttori o pulsanti di opzione .
La proprietà OptionValue è impostata su un numero in quanto il valore di un gruppo di opzioni può essere rappresentato solo da numeri e non da testo. Il numero viene memorizzato nella tabella sottostante. Nel precedente esempio se nella tabella Ordini si desidera visualizzare il nome del corriere anziché un numero, è possibile creare una tabella separata denominata Corrieri in cui vengono memorizzati i nomi dei corrieri e impostare il campo Corriere della tabella Ordini come campo di ricerca dei dati nella tabella Corrieri.
Gruppo di opzioni
Se un gruppo di opzioni è associato a un campo, solo la cornice è effettivamente associata al campo, non le caselle di controllo, gli interruttori o i pulsanti di opzione che si trovano all'interno della cornice stessa. Invece di impostare la proprietà ControlSource per ogni controllo del gruppo di opzioni, impostare la proprietà Value per ogni casella di controllo, interruttore o pulsante di opzione a un numero significativo per il campo al quale la cornice è associata. Quando si seleziona un'opzione da un gruppo di opzioni, il valore del campo al quale il gruppo di opzioni è associato viene impostato al valore della proprietà Value dell'opzione selezionata.
In un gruppo di opzioni associato a un campo, l'unico elemento effettivamente associato è la cornice, non le caselle di controllo, gli interruttori o i pulsanti di opzione in essa contenuti.
Anziché impostare la proprietà ControlSource per ogni controllo del gruppo di opzioni, si imposta la proprietà OptionValue di ogni casella di controllo, interruttore o pulsante di opzione a un numero che identifica il campo cui è associata la cornice del gruppo.
La prima colonna elenca le impostazioni della proprietà Type disponibili nella visualizzazione Struttura della tabella e le cinque impostazioni della proprietà FieldSize per il tipo di dati Number .
La quinta colonna elenca i corrispondenti tipi di dati SQL del modulo di gestione di database Jet definiti dal modulo di gestione di database Access insieme ai relativi sinonimi validi.
Tipi di dati SQL e sinonimi modulo di gestione di database Microsoft Access
Il tipo di dati INTEGER nell'SQL definito dal modulo di gestione di database Access non corrisponde al tipo di dati Intero per i campi della tabella, i parametri delle query o Visual Basic. Invece, in SQL, il tipo di dati INTEGER corrisponde a un tipo di dati Intero lungo per campi di tabella e parametri di query e a un tipo di dati Long in Visual Basic.
Invece di impostare la proprietà ControlSource per ogni controllo del gruppo di opzioni, impostare la proprietà Value per ogni casella di controllo, interruttore o pulsante di opzione a un numero significativo per il campo al quale la cornice è associata.
Quando si seleziona un'opzione da un gruppo di opzioni, il valore del campo al quale il gruppo di opzioni è associato viene impostato al valore della proprietà Value dell'opzione selezionata.
Opzione selezionata da un gruppo di opzioni
La proprietà Value è impostata su un numero in quanto il valore di un gruppo di opzioni può essere rappresentato solo da numeri e non da testo. Il numero viene memorizzato nella tabella sottostante. Nel precedente esempio se si desidera visualizzare nella tabella Ordini il nome del corriere invece di un numero, è possibile creare una tabella separata chiamata Corrieri che memorizza i nomi dei corrieri e impostare il campo Corriere della tabella Ordini come campo di ricerca dei dati nella tabella Corrieri.
La proprietà Value è impostata su un numero in quanto il valore di un gruppo di opzioni può essere rappresentato solo da numeri e non da testo.
Microsoft Access memorizza il numero nella tabella sottostante.
Nel precedente esempio se nella tabella Ordini si desidera visualizzare il nome del corriere anziché un numero, è possibile creare una tabella separata denominata Corrieri in cui vengono memorizzati i nomi dei corrieri e impostare il campo Corriere della tabella Ordini come campo di ricerca dei dati nella tabella Corrieri.
Un gruppo di opzioni può essere impostato anche a un' espressione oppure può non essere associato. È possibile utilizzare un gruppo di opzioni non associato in una finestra di dialogo personalizzata per accettare l'input dell'utente ed eseguire un'azione corrispondente a tale input.
Un gruppo di opzioni può essere impostato anche a un' espressione oppure può non essere associato.
È possibile utilizzare un gruppo di opzioni non associato in una finestra di dialogo personalizzata per accettare l'input dell'utente ed eseguire un'azione corrispondente a tale input.
Controllo Gruppo di opzioni (maschere e report)
Un gruppo di opzioni di una maschera o di un report visualizza un set limitato di alternative e consente di selezionare un valore facendo semplicemente clic su di esso. È possibile selezionare soltanto un'opzione alla volta.
Non confondere questo controllo con il controllo Gruppo di opzioni in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Gruppo di opzioni (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Gruppo di opzioni in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Gruppo di opzioni (pagine di accesso ai dati).
In un gruppo di opzioni associato a un campo, l'unico elemento effettivamente associato è la cornice, non le caselle di controllo, gli interruttori o i pulsanti di opzione in essa contenuti. Anziché impostare la proprietà ControlSource per ogni controllo del gruppo di opzioni, si imposta la proprietà OptionValue di ogni casella di controllo, interruttore o pulsante di opzione a un numero che identifica il campo cui è associata la cornice del gruppo. Quando si seleziona un'opzione all'interno di un gruppo, il valore del campo cui è associato tale gruppo viene impostato al valore della proprietà OptionValue dell'opzione selezionata.
Il tipo di dati INTEGER nell'SQL definito dal modulo di gestione di database Access non corrisponde al tipo di dati Intero per i campi della tabella, i parametri delle query o Visual Basic.
Controllo Rettangolo
Controllo Casella di testo
Il modulo di gestione di database di Microsoft Access riconosce numerosi set di tipi di dati sovrapposti. In Microsoft Access vi sono quattro contesti diversi in cui potrebbe essere necessario specificare un tipo di dati, vale a dire nella visualizzazione Struttura della tabella , nella finestra di dialogo Parametri query , in Visual Basic e nella visualizzazione SQL di una query.
Il modulo di gestione di database di Microsoft Access riconosce numerosi set di tipi di dati sovrapposti.
Nella tabella seguente vengono confrontati i cinque set di tipi di dati che corrispondono ai singoli contesti. La prima colonna elenca le impostazioni della proprietà Type disponibili nella visualizzazione Struttura della tabella e le cinque impostazioni della proprietà FieldSize per il tipo di dati Number . La seconda colonna elenca i corrispondenti tipi di dati dei parametri di una query disponibili per strutturare le query con parametri nella finestra di dialogo Parametri query . La terza colonna elenca i corrispondenti tipi di dati di Visual Basic. La quarta colonna elenca i tipi di dati dell'oggetto Field DAO. La quinta colonna elenca i corrispondenti tipi di dati SQL del modulo di gestione di database Jet definiti dal modulo di gestione di database Access insieme ai relativi sinonimi validi.
La proprietà OptionValue è impostata a un numero in quanto il valore di un gruppo di opzioni può essere rappresentato solo da numeri, non da testo. Microsoft Access memorizza il numero nella tabella sottostante. Se nel precedente esempio si desidera visualizzare il nome del fornitore anziché un numero nella tabella Ordini, è possibile creare una tabella separata chiamata Corrieri contenente i nomi dei corrieri e modificare il campo Corriere della tabella Ordini in un campo di ricerca che consenta di reperire i dati nella tabella Corrieri.
La proprietà OptionValue è impostata a un numero in quanto il valore di un gruppo di opzioni può essere rappresentato solo da numeri, non da testo.
Se nel precedente esempio si desidera visualizzare il nome del fornitore anziché un numero nella tabella Ordini, è possibile creare una tabella separata chiamata Corrieri contenente i nomi dei corrieri e modificare il campo Corriere della tabella Ordini in un campo di ricerca che consenta di reperire i dati nella tabella Corrieri.
Controllo Interruzione di pagina
Il controllo Interruzione di pagina indica l'inizio di un nuovo schermo o di una nuova pagina stampata in una maschera o in un report.
In una maschera, un'interruzione di pagina è attiva soltanto quando si imposta la proprietà DefaultView su Maschera singola. Le interruzioni di pagina non influiscono sul foglio dati di una maschera.
In una maschera, un'interruzione di pagina è attiva soltanto quando si imposta la proprietà DefaultView su Maschera singola.
Le interruzioni di pagina non influiscono sul foglio dati di una maschera.
In visualizzazione Maschera premere PGSU o PGGIÙ per passare all'interruzione di pagina precedente o successiva.
Collocare le interruzioni di pagina sopra o sotto gli altri controlli in quanto, se collocate sulla stessa riga, provocano la divisione dei dati del controllo.
Oggetto Page
Un oggetto Page corrisponde a una pagina singola di un controllo Struttura a schede.
Ciascun oggetto Page può contenere uno o più controlli , come ad esempio caselle di testo o pulsanti di opzione . I controlli di un oggetto Page appartengono all'insieme Controls di quello stesso oggetto. Per poter lavorare con un controllo di un oggetto Page , è necessario fare riferimento a quel controllo all'interno dell'insieme Control dello stesso oggetto.
Ciascun oggetto Page può contenere uno o più controlli , come ad esempio caselle di testo o pulsanti di opzione .
I controlli di un oggetto Page appartengono all'insieme Controls di quello stesso oggetto.
Per poter lavorare con un controllo di un oggetto Page , è necessario fare riferimento a quel controllo all'interno dell'insieme Control dello stesso oggetto.
Il controllo Struttura a schede consente di costruire una singola maschera o finestra di dialogo contenente varie schede e di raggruppare le opzioni o i dati simili sulle pagine di ogni scheda. È possibile ad esempio utilizzare un controllo Struttura a schede su una maschera Impiegati per separare le informazioni generali da quelle personali.
Il controllo Struttura a schede consente di costruire una singola maschera o finestra di dialogo contenente varie schede e di raggruppare le opzioni o i dati simili sulle pagine di ogni scheda.
È possibile ad esempio utilizzare un controllo Struttura a schede su una maschera Impiegati per separare le informazioni generali da quelle personali.
Query con parametri
La query con parametri è un tipo di query di selezione che estende la flessibilità delle altre query richiedendo l'immissione di determinati criteri a ogni esecuzione. In realtà, le query con parametri non rappresentano un tipo di query distinto ma, piuttosto, estendono la flessibilità delle altre query.
La query con parametri è un tipo di query di selezione che estende la flessibilità delle altre query richiedendo l'immissione di determinati criteri a ogni esecuzione.
In realtà, le query con parametri non rappresentano un tipo di query distinto ma, piuttosto, estendono la flessibilità delle altre query.
Controllo Tabella pivot di Office
Il controllo Tabella pivot di Office consente di aggiungere un elenco di tabella pivot a una pagina di accesso ai dati .
Controllo Tabella pivot di Office
Controllo Spostamento tra record
Il controllo Spostamento tra record consente di aggiungere informazioni per lo spostamento tra record in una pagina di accesso ai dati .
Controllo Spostamento tra record
Il controllo Spostamento tra record può contenere i seguenti pulsanti:
Primo record
Record precedente
Record successivo
Ultimo record
Nuovo record
Salva record
Annulla
Ordinamento crescente
Ordinamento decrescente
Filtro in base a selezione
Attiva/disattiva filtro
Controllo Rettangolo (pagine di accesso ai dati)
Questo controllo visualizza un rettangolo in una pagina di accesso ai dati .
Rettangolo
Controllo rettangolo
È possibile spostare un rettangolo e i controlli in esso contenuti come una singola unità trascinando il puntatore del mouse in diagonale sull'intero rettangolo per selezionare tutti i controlli. A questo punto la selezione può essere spostata globalmente in una posizione diversa.
È possibile spostare un rettangolo e i controlli in esso contenuti come una singola unità trascinando il puntatore del mouse in diagonale sull'intero rettangolo per selezionare tutti i controlli.
A questo punto la selezione può essere spostata globalmente in una posizione diversa.
Controllo Rettangolo (maschere e report)
Il controllo Rettangolo consente di visualizzare un rettangolo in una maschera o un report.
Non confondere questo controllo con il controllo Rettangolo in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Rettangolo (pagine di accesso ai dati).
Non confondere questo controllo con il controllo Rettangolo in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Rettangolo (pagine di accesso ai dati).
Controllo Testo a scorrimento
Il controllo Testo a scorrimento consente di aggiungere testo animato in una pagina di accesso ai dati .
Controllo Testo a scorrimento
Utilizzare il controllo Testo a scorrimento, detto anche testo scorrevole , in una pagina di accesso ai dati per visualizzare del testo in movimento o del testo che scorre. Lo scorrimento attira l'attenzione su una riga di testo quale un'intestazione o un annuncio importante. È possibile visualizzare del testo contenuto in un campo del database associando al campo il controllo Testo a scorrimento. Si può inoltre personalizzare il testo a scorrimento impostando opzioni come la direzione, la velocità e il tipo di movimento.
Utilizzare il controllo Testo a scorrimento, detto anche testo scorrevole , in una pagina di accesso ai dati per visualizzare del testo in movimento o del testo che scorre.
Lo scorrimento attira l'attenzione su una riga di testo quale un'intestazione o un annuncio importante.
È possibile visualizzare del testo contenuto in un campo del database associando al campo il controllo Testo a scorrimento.
Si può inoltre personalizzare il testo a scorrimento impostando opzioni come la direzione, la velocità e il tipo di movimento.
Alcuni browser non sono in grado di visualizzare testi a scorrimento. In questi casi, all'interno del controllo verrà visualizzata una normale riga di testo.
Alcuni browser non sono in grado di visualizzare testi a scorrimento.
In questi casi, all'interno del controllo verrà visualizzata una normale riga di testo.
Query di selezione
La query di selezione pone alcune domande relativamente ai dati memorizzati nel database e restituisce il risultato della query senza modificare i dati. Una volta visualizzato il set di risultati, è possibile visualizzare e, in alcuni casi, modificare i dati delle tabelle sottostanti. Al contrario, una query di comando modifica i dati.
La query di selezione pone alcune domande relativamente ai dati memorizzati nel database e restituisce il risultato della query senza modificare i dati.
Una volta visualizzato il set di risultati, è possibile visualizzare e, in alcuni casi, modificare i dati delle tabelle sottostanti.
Al contrario, una query di comando modifica i dati.
Query specifica del linguaggio SQL
Una query specifica del linguaggio SQL può essere creata solo scrivendo un'istruzione SQL in visualizzazione SQL. Le query di unione, di tipo pass-through e di definizione dati sono query specifiche del linguaggio SQL.
Una query specifica del linguaggio SQL può essere creata solo scrivendo un'istruzione SQL in visualizzazione SQL.
Le query di unione, di tipo pass-through e di definizione dati sono query specifiche del linguaggio SQL.
Tipo di query specifica del linguaggio SQL
Di unione
Query di selezione specifica del linguaggio SQL che unisce i campi corrispondenti di due o più tabelle o query in un unico campo. Ad esempio, una query di unione delle tabelle Clienti e Fornitori genera uno snapshot contenente tutti i record specificati nelle due tabelle.
Query di selezione specifica del linguaggio SQL che unisce i campi corrispondenti di due o più tabelle o query in un unico campo.
Ad esempio, una query di unione delle tabelle Clienti e Fornitori genera uno snapshot contenente tutti i record specificati nelle due tabelle.
Pass-through
Query specifica del linguaggio SQL che invia i comandi direttamente a un server di database SQL, ad esempio Microsoft SQL Server. Le query pass-through consentono di operare con le tabelle memorizzate sul server anziché collegarle al database di Microsoft Access.
Query specifica del linguaggio SQL che invia i comandi direttamente a un server di database SQL, ad esempio Microsoft SQL Server.
Le query pass-through consentono di operare con le tabelle memorizzate sul server anziché collegarle al database di Microsoft Access.
Di definizione dati
Query specifica del linguaggio SQL che può creare o eliminare un indice oppure creare, modificare ed eliminare una tabella.
Controllo Struttura a schede
Un controllo Struttura a schede contiene più pagine sulle quali è possibile collocare controlli supplementari, ad esempio caselle di testo o pulsanti di opzione . Quando si fa clic sulla scheda corrispondente, la pagina diventa attiva.
Un controllo Struttura a schede contiene più pagine sulle quali è possibile collocare controlli supplementari, ad esempio caselle di testo o pulsanti di opzione .
Quando si fa clic sulla scheda corrispondente, la pagina diventa attiva.
Controllo Casella di testo (pagine di accesso ai dati)
Le caselle di testo in una pagina di accesso ai dati visualizzano dati provenienti da un' origine record . Questo tipo di casella di testo è chiamata casella associata perché è associata ai dati in un campo. Le caselle di testo possono essere anche non associate . Una casella di testo non associata può risultare utile ad esempio per visualizzare i risultati di calcoli o per accettare l'input dell'utente. I dati di una casella di testo non associata non vengono salvati con il database.
Le caselle di testo in una pagina di accesso ai dati visualizzano dati provenienti da un' origine record .
Questo tipo di casella di testo è detta associata in quanto è associata ai dati di un campo.
Non confondere questo controllo con il controllo Casella di testo in formato HTML dinamico utilizzato in una pagina di accesso ai dati. Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di testo (pagine di accesso ai dati) .
Le caselle di testo possono essere anche non associate .
È possibile creare una casella di testo non associata ad esempio per visualizzare i risultati di un calcolo o per accettare l'input di un utente.
I dati di una casella di testo non associata non vengono salvati con il database.
Casella di testo
Controllo Casella di testo
Controllo Casella di testo (maschere e report)
Le caselle di testo in una maschera o in un report visualizzano i dati di un' origine record . Questa casella di testo è detta associata in quanto è associata ai dati di un campo. Le caselle di testo possono essere anche non associate . È possibile creare una casella di testo non associata ad esempio per visualizzare i risultati di un calcolo o per accettare l'input di un utente. I dati di una casella di testo non associata non vengono salvati con il database.
Le caselle di testo in una maschera o in un report visualizzano i dati di un' origine record .
Non confondere questo controllo con il controllo Casella di testo in formato HTML dinamico utilizzato in una pagina di accesso ai dati.
Per informazioni su questo secondo tipo di controllo, vedere Controllo Casella di testo (pagine di accesso ai dati) .
Controllo Interruttore
Un interruttore in una maschera è un controllo autonomo utilizzato per visualizzare un valore Sì/No di un' origine record sottostante.
Quando si fa clic su un interruttore associato a un campo Sì/No, viene visualizzato il valore nella tabella sottostante in base alla proprietà Format del campo (Yes/No, True / False o On/Off).
Gli interruttori sono particolarmente utili se utilizzati con altri pulsanti in un gruppo di opzioni .
È inoltre possibile utilizzare gli interruttori in una finestra di dialogo personalizzata per accettare l'immissione dell'utente.
Controllo Cornice oggetto non associato
Il controllo Cornice oggetto non associato visualizza un'immagine, un grafico o qualsiasi oggetto OLE non memorizzato in una tabella. Ad esempio, è possibile utilizzare una cornice di oggetto non associato per visualizzare un grafico creato e memorizzato in Microsoft Graph.
Il controllo Cornice oggetto non associato visualizza un'immagine, un grafico o qualsiasi oggetto OLE non memorizzato in una tabella.
È possibile, ad esempio, utilizzare una cornice oggetto non associato per visualizzare un grafico creato e memorizzato in Microsoft Graph.
Questo controllo consente di creare o modificare l'oggetto da una maschera o un report di Microsoft Access utilizzando l'applicazione con la quale è stato creato l'oggetto.
Per visualizzare gli oggetti memorizzati in un database di Microsoft Access, utilizzare un controllo Cornice oggetto associato .
L'oggetto di una cornice oggetto non associato è lo stesso per ogni record.
La cornice oggetto non associato può visualizzare oggetti collegati o incorporati .
È possibile utilizzare la cornice di oggetto non associato o un controllo Immagine per visualizzare immagini non associate in una maschera o in un report. La cornice di oggetto non associato risulta utile in quanto consente di modificare l'oggetto direttamente dalla maschera o dal report, mentre il controllo Immagine risulta utile in quanto viene visualizzato più rapidamente.
Confronto di tipi di dati
Il modulo di gestione di database di Microsoft Jet riconosce numerosi set di tipi di dati sovrapposti. In Microsoft Access vi sono quattro contesti diversi in cui potrebbe essere necessario specificare un tipo di dati, vale a dire nella visualizzazione Struttura della tabella , nella finestra di dialogo Parametri query , in Visual Basic e nella visualizzazione SQL di una query.
Il modulo di gestione di database di Microsoft Jet riconosce numerosi set di tipi di dati sovrapposti.
In Microsoft Access vi sono quattro contesti diversi in cui potrebbe essere necessario specificare un tipo di dati, vale a dire nella visualizzazione Struttura della tabella , nella finestra di dialogo Parametri query , in Visual Basic e nella visualizzazione SQL di una query.
La tabella riportata di seguito confronta i cinque set di tipi di dati corrispondenti a ciascun contesto. La prima colonna elenca le impostazioni della proprietà Tipo disponibili nella visualizzazione Struttura della tabella e le cinque impostazioni della proprietà Dimensione campo per il tipo di dati Numerico . La seconda colonna elenca i corrispondenti tipi di dati dei parametri di una query disponibili per strutturare le query con parametri nella finestra di dialogo Parametri query . La terza colonna elenca i corrispondenti tipi di dati di Visual Basic. La quarta colonna elenca i tipi di dati dell'oggetto Field DAO. La quinta colonna elenca i corrispondenti tipi di dati del modulo di gestione di database SQL definiti dal modulo di gestione di database Jet insieme ai relativi sinonimi validi.
Nella tabella seguente vengono confrontati i cinque set di tipi di dati che corrispondono ai singoli contesti.
La prima colonna elenca le impostazioni della proprietà Tipo disponibili nella visualizzazione Struttura della tabella e le cinque impostazioni della proprietà Dimensione campo per il tipo di dati Numerico .
La seconda colonna elenca i corrispondenti tipi di dati dei parametri di una query disponibili per strutturare le query con parametri nella finestra di dialogo Parametri query .
La terza colonna elenca i corrispondenti tipi di dati di Visual Basic.
La quarta colonna elenca i tipi di dati dell'oggetto Field DAO.
La quinta colonna elenca i corrispondenti tipi di dati del modulo di gestione di database SQL definiti dal modulo di gestione di database Jet insieme ai relativi sinonimi validi.
Campi tabella
Parametri query
Costanti proprietà tipo di dati ADO
Modulo di gestione SQL di database Microsoft Jet e sinonimi
Non supportato
Dati di tipo Binary
BINARY (Vedere note) (Sinonimo: VARBINARY)
Sì/No
BOOLEAN (Sinonimi: BIT, LOGICAL, LOGICAL1, YESNO)
Numerico ( Dimensione campo = Byte)
Dati di tipo Byte
BYTE (Sinonimo: INTEGER1)
Contatore ( Dimensione campo =
Intero lungo)
Intero lungo
COUNTER (Sinonimo: AUTOINCREMENT)
Dati di tipo Valuta
CURRENCY (Sinonimo: MONEY)
Dati di tipo Data/ora
DATETIME (Sinonimi: DATE, TIME, TIMESTAMP)
Numerico ( Dimensione campo = Precisione doppia)
Dati di tipo Double
DOUBLE (Sinonimi: FLOAT, FLOAT8, IEEEDOUBLE, NUMBER, NUMERIC)
Contatore /GUID
( Dimensione campo = ID replica)
ID replica
Dati di tipo GUID
Numerico ( Dimensione campo = Intero lungo)
LONG (Vedere note) (Sinonimi: INT, INTEGER, INTEGER4)
Oggetto OLE
Stringa
Informazioni che si desidera aggiungere al modulo.
LONGBINARY (Sinonimi: GENERAL, OLEOBJECT)
Dati di tipo Memo
LONGTEXT (Sinonimi: LONGCHAR, MEMO, NOTE)
Numerico ( Dimensione campo = Precisione singola)
Dati di tipo Single
SINGLE (Sinonimi: FLOAT4, IEEESINGLE, REAL)
Numerico ( Dimensione campo = Intero)
Dati di tipo Integer
SHORT (Vedere note) (Sinonimi: INTEGER2, SMALLINT)
Dati di tipo Testo
TEXT (Sinonimi: ALPHANUMERIC, CHAR, CHARACTER, STRING, VARCHAR)
Collegamento ipertestuale
Valore
VALUE (Vedere note)
Microsoft Access non utilizza il tipo di dati BINARY. Esso viene riconosciuto soltanto per l'utilizzo nelle query su tabelle collegate da altri prodotti di database che supportano il tipo di dati BINARY.
Microsoft Access non utilizza il tipo di dati BINARY.
Esso viene riconosciuto soltanto per l'utilizzo nelle query su tabelle collegate da altri prodotti di database che supportano il tipo di dati BINARY.
Il tipo di dati INTEGER nel modulo di gestione di database Jet SQL non corrisponde al tipo di dati Intero per i campi di tabella, per i parametri di query o per Visual Basic. Invece, in SQL, il tipo di dati INTEGER corrisponde a un tipo di dati Intero lungo per campi di tabella e parametri di query e a un tipo di dati Long in Visual Basic.
Il tipo di dati INTEGER nel modulo di gestione di database Jet SQL non corrisponde al tipo di dati Intero per i campi di tabella, per i parametri di query o per Visual Basic.
Invece, in SQL, il tipo di dati INTEGER corrisponde a un tipo di dati Intero lungo per campi di tabella e parametri di query e a un tipo di dati Long in Visual Basic.
La parola riservata VALUE non rappresenta un tipo di dati definito dal modulo di gestione di database Jet. In Microsoft Access o nelle query SQL tuttavia la parola riservata VALUE può essere considerata un sinonimo valido per il tipo di dati Variant di Visual Basic.
La parola riservata VALUE non rappresenta un tipo di dati definito dal modulo di gestione di database Jet.
In Microsoft Access o nelle query SQL tuttavia la parola riservata VALUE può essere considerata un sinonimo valido per il tipo di dati Variant di Visual Basic.
Se si sta impostando il tipo di dati per un oggetto DAO nel codice Visual Basic, è necessario impostare la proprietà Type dell'oggetto.
Activate, evento
L'evento Attivazione si verifica quando una maschera o un report acquista lo stato attivo e diventa la finestra attiva.
Private Sub oggetto _Activate()
Oggetto Il nome di una maschera o di un report.
L'evento Activate non si verifica quando una maschera riceve lo stato attivo da una finestra di dialogo, da una finestra popup o da un'altra maschera.
Per eseguire una macro o una routine evento quando si verificano tali eventi, impostare la proprietà Su attivazione o Su disattivazione al nome della macro o a [Routine evento]
Per rendere attivi una maschera o un report basta aprirli, facendo clic su di essi o su un relativo controllo oppure utilizzando il metodo SetFocus in Visual Basic (solo per le maschere).
L'evento Attivazione può verificarsi solo quando una maschera o un report sono visualizzati.
L'evento Attivazione si verifica prima dell'evento Attivato e l'evento Disattivazione si verifica dopo l'evento Disattivato .
Quando si passa da una maschera aperta all'altra, l'evento Disattivazione si verifica per la maschera su cui non si lavora più, mentre l'evento Attivazione si verifica per la maschera alla quale si è passati. Se le maschere non contengono controlli visibili attivati, l'evento Disattivato si verifica per la prima maschera prima dell'evento Disattivazione, mentre l'evento Attivato si verifica per la seconda maschera dopo l'evento Attivazione.
Quando si passa da una maschera aperta all'altra, l'evento Disattivazione si verifica per la maschera su cui non si lavora più, mentre l'evento Attivazione si verifica per la maschera alla quale si è passati.
Se le maschere non contengono controlli visibili abilitati, l'evento Disattivato si verifica per la prima maschera prima dell'evento Disattivazione e l'evento Attivato si verifica per la seconda maschera dopo l'evento Attivazione.
Quando si apre una maschera per la prima volta, gli eventi seguenti si verificano nell'ordine indicato:
Quando si chiude una maschera, gli eventi seguenti si verificano nell'ordine indicato:
Per decidere se utilizzare l'evento Open o Load per la propria macro o routine evento, tenere presente che, a differenza dell'evento Load , l'evento Open può essere annullato. Se ad esempio si genera in modo dinamico un'origine record per una maschera in una routine evento per l'evento Open della maschera, è possibile annullare l'apertura della maschera se non sono presenti record da visualizzare. Analogamente, è possibile annullare l'evento Unload , ma non l'evento Close .
Per decidere se utilizzare l'evento Open o Load per la propria macro o routine evento, tenere presente che, a differenza dell'evento Load , l'evento Open può essere annullato.
Analogamente, è possibile annullare l'evento Unload , ma non l'evento Close .
L'evento Unload si verifica prima dell'evento Close . È possibile annullare l'evento Unload , ma non l'evento Close .
È possibile utilizzare l'azione MostraBarraStrumenti in una macro dell'evento Activate o Deactivate per visualizzare o nascondere una barra degli strumenti personalizzata. Utilizzare l'evento Activate o Deactivate per visualizzare o nascondere le barre degli strumenti personalizzate quando vengono caricate più maschere contemporaneamente. Se si carica una sola maschera per volta, è possibile utilizzare gli eventi Open e Close.
È possibile utilizzare l'azione MostraBarraStrumenti in una macro dell'evento Activate o Deactivate per visualizzare o nascondere una barra degli strumenti personalizzata.
Utilizzare l'evento Activate o Deactivate per visualizzare o nascondere le barre degli strumenti personalizzate quando vengono caricate più maschere contemporaneamente.
Se si carica una sola maschera per volta, è possibile utilizzare gli eventi Open e Close.
Se si utilizza una macro dell'evento Deactivate per nascondere una barra degli strumenti personalizzata in una maschera, accertarsi inoltre che la barra degli strumenti venga nascosta in risposta all'evento Unload per la maschera, poiché l'evento Deactivate non si verifica quando una maschera viene scaricata. Non utilizzare l'evento Activate o Deactivate per visualizzare o nascondere una barra degli strumenti personalizzata in una maschera, poiché tali eventi non si verificano nelle maschere che contengono controlli attivati.
Se si utilizza una macro dell'evento Deactivate per nascondere una barra degli strumenti personalizzata in una maschera, accertarsi inoltre che la barra degli strumenti venga nascosta in risposta all'evento Unload per la maschera, poiché l'evento Deactivate non si verifica quando una maschera viene scaricata.
Non utilizzare l'evento Activate o Deactivate per visualizzare o nascondere una barra degli strumenti personalizzata in una maschera, poiché tali eventi non si verificano nelle maschere che contengono controlli attivati.
Non è possibile utilizzare l'azione AnnullaEvento in una macro dell'evento Activate o Deactivate.
Esempio
Nell'esempio riportato di seguito viene illustrato come visualizzare una barra degli strumenti personalizzata denominata CustomToolbar quando lo stato attivo viene spostato su una maschera e come nasconderla quando lo stato attivo viene spostato su una finestra diversa.
'Display custom toolbar.
'Hide custom toolbar. DoCmd.ShowToolbar CustomToolbar, acToolbarNo
'Hide custom toolbar.
AfterDelConfirm, evento
L'evento DopoConfermaEliminazione si verifica dopo la conferma delle eliminazioni e l'effettiva eliminazione dei record o quando le eliminazioni vengono annullate.
Status Indica se un record è stato eliminato. L'argomento Status può essere rappresentato da una delle seguenti costanti intrinseche:
Status Indica se un record è stato eliminato.
L'argomento Status può essere rappresentato da una delle seguenti costanti intrinseche:
Descrizione delle costanti
acDeleteOK Indica che l'eliminazione è stata completata.
acDeleteCancel Indica che l'eliminazione è stata annullata in Visual Basic.
acDeleteUserCancel Indica che l'eliminazione è stata annullata dall'utente.
Per eseguire una macro o una routine evento quando si verifica tale evento, impostare la proprietà AfterDelConfirm sul nome della macro o su [Routine evento].
Dopo l'eliminazione, i record vengono memorizzati in un buffer temporaneo.
L'evento DopoConfermaEliminazione si verifica dopo l'effettiva eliminazione di un record o dei record o dopo l'annullamento di un'eliminazione o delle eliminazioni. Se l'evento PrimaDiConfermaEliminazione non viene annullato, si verifica l'evento DopoConfermaEliminazione dopo la visualizzazione della finestra di dialogo Conferma eliminazione . L'evento DopoConfermaEliminazione si verifica anche se viene annullato l'evento PrimaDiConfermaEliminazione. La routine evento DopoConfermaEliminazione restituisce le informazioni riguardanti lo stato dell'eliminazione. È possibile ad esempio utilizzare una macro o una routine evento associata all'evento DopoConfermaEliminazione per ricalcolare i totali interessati dall'eliminazione dei record.
L'evento DopoConfermaEliminazione si verifica dopo l'effettiva eliminazione di un record o dei record o dopo l'annullamento di un'eliminazione o delle eliminazioni.
Se si annulla l'evento Eliminazione, non si verificano gli eventi PrimaDiConfermaEliminazione e DopoConfermaEliminazione e non viene visualizzata la finestra di dialogo Conferma eliminazione .
Deselezionando la casella di controllo Modifiche record nell'area Conferma nella scheda Modifica/Trova della finestra di dialogo Opzioni , disponibile scegliendo Opzioni dal menu Strumenti , non si verificano gli eventi PrimaDiConfermaEliminazione e DopoConfermaEliminazione e la finestra di dialogo Conferma eliminazione non viene visualizzata.
È possibile eliminare uno o più record alla volta. L'evento Eliminazione si verifica dopo l'eliminazione di ciascun record. In tal modo si consente l'accesso ai dati di ciascun record prima dell'effettiva eliminazione e la conferma o l'annullamento selettivo di ogni eliminazione nella macro o nella routine evento Eliminazione. Quando si elimina più di un record, l'evento Corrente per il record successivo all'ultimo eliminato e gli eventi Invio e Attivato per il primo controllo di tale record non si verificano fino all'avvenuta eliminazione di tutti i record. Un evento Eliminazione, cioè, si verifica per ciascun record selezionato, ma non si verificano altri eventi fino all'avvenuta eliminazione di tutti i record selezionati. Gli eventi PrimaDiConfermaEliminazione e DopoConfermaEliminazione inoltre non si verificano fino all'avvenuta eliminazione di tutti i record selezionati.
Gli eventi PrimaDiConfermaEliminazione e DopoConfermaEliminazione inoltre non si verificano fino all'avvenuta eliminazione di tutti i record selezionati.
Nell'esempio seguente viene illustrato come impedire a un utente l'eliminazione di record da una tabella.
Se si annulla l'evento Delete, non si verifica l'evento BeforeDelConfirm e non viene visualizzata la finestra di dialogo Conferma eliminazione .
Se l'evento PrimaDiConfermaEliminazione non viene annullato, si verifica l'evento DopoConfermaEliminazione dopo la visualizzazione della finestra di dialogo Conferma eliminazione .
Per provare l'esempio, aggiungere la routine evento riportata di seguito a una maschera basata su una tabella. Passare alla visualizzazione Foglio dati della maschera e provare l'eliminazione del record.
Per provare l'esempio, aggiungere la routine evento riportata di seguito a una maschera basata su una tabella.
Deselezionando la casella di controllo Modifiche record nell'area Conferma nella scheda Modifica/Trova della finestra di dialogo Opzioni , disponibile scegliendo Opzioni dal menu Strumenti , non si verifica l'evento BeforeDelConfirm e la finestra di dialogo Conferma eliminazione non viene visualizzata.
L'evento DopoConfermaEliminazione si verifica anche se viene annullato l'evento PrimaDiConfermaEliminazione.
La routine evento DopoConfermaEliminazione restituisce le informazioni riguardanti lo stato dell'eliminazione.
È possibile, ad esempio, utilizzare una macro o una routine evento associata all'evento AfterDelConfirm per ricalcolare i totali interessati dall'eliminazione dei record.
Se si annulla l'evento Delete, non si verifica l'evento AfterDelConfirm e non viene visualizzata la finestra di dialogo Conferma eliminazione .
Deselezionando la casella di controllo Modifiche record nell'area Conferma nella scheda Modifica/Trova della finestra di dialogo Opzioni , disponibile scegliendo Opzioni dal menu Strumenti , non si verifica l'evento AfterDelConfirm e la finestra di dialogo Conferma eliminazione non viene visualizzata.
Eseguendo una macro o una routine evento quando si verifica l'evento Eliminazione, è possibile evitare che un record venga eliminato oppure consentire l'eliminazione di un record solo a determinate condizioni. È inoltre possibile utilizzare un evento Eliminazione per visualizzare una finestra di dialogo che richiede se si desidera eliminare un record prima dell'eliminazione.
Eseguendo una macro o una routine evento quando si verifica l'evento Eliminazione, è possibile evitare che un record venga eliminato oppure consentire l'eliminazione di un record solo a determinate condizioni.
È inoltre possibile utilizzare un evento Eliminazione per visualizzare una finestra di dialogo che richiede se si desidera eliminare un record prima dell'eliminazione.
Per eliminare un record è possibile scegliere Elimina record dal menu Modifica . Viene così eliminato il record corrente, cioè quello indicato dal selettore di record . È inoltre possibile fare clic sul selettore di record o scegliere Seleziona record dal menu Modifica per selezionare un record e quindi premere CANC per eliminarlo. Se si sceglie Elimina record , il selettore di record relativo al record corrente o si sceglie Seleziona record si verificano gli eventi Uscita e Disattivato per il controllo sul quale si trova lo stato attivo. Se si è modificato qualsiasi dato del record, gli eventi PrimaDiAggiornare e DopoAggiornamento per il record si verificano prima degli eventi Uscita e Disattivato. Se si sceglie il selettore di record di un altro record, si verifica anche l'evento Corrente relativo a tale record.
Per eliminare un record, è possibile scegliere Elimina record dal menu Modifica .
Verrà eliminato il record corrente, ovvero quello indicato dal selettore di record .
È inoltre possibile fare clic sul selettore di record oppure scegliere Seleziona record dal menu Modifica per selezionare il record e quindi premere CANC per eliminarlo.
Se si sceglie Elimina record , il selettore di record relativo al record corrente o si sceglie Seleziona record si verificano gli eventi Uscita e Disattivato per il controllo sul quale si trova lo stato attivo.
Se si è modificato qualsiasi dato del record, gli eventi PrimaDiAggiornare e DopoAggiornamento per il record si verificano prima degli eventi Uscita e Disattivato.
Se si sceglie il selettore di record di un altro record, si verifica anche l'evento Corrente relativo a tale record.
Dopo l'eliminazione del record, lo stato attivo si sposta sul record successivo a quello eliminato e si verifica l'evento Corrente per tale record, seguito dagli eventi Invio e Attivato per il primo controllo di tale record.
Si verifica quindi l'evento PrimaDiConfermaEliminazione, poco prima che venga visualizzata la finestra di dialogo Conferma eliminazione che richiede la conferma dell'eliminazione. Dopo aver confermato oppure annullato l'eliminazione si verifica l'evento DopoConfermaEliminazione.
L'evento BeforeDelConfirm si verifica prima che venga visualizzata la finestra di dialogo Conferma eliminazione che richiede la conferma dell'eliminazione.
Dopo avere confermato o annullato l'eliminazione, si verifica l'evento AfterDelConfirm .
Dopo aver confermato oppure annullato l'eliminazione si verifica l'evento DopoConfermaEliminazione.
È possibile eliminare uno o più record alla volta. L'evento Delete si verifica dopo l'eliminazione di ogni record. In tal modo è possibile accedere ai dati di ciascun record prima dell'effettiva eliminazione e confermare o annullare in modo selettivo ogni eliminazione nella macro o nella routine evento Delete. Quando si elimina più di un record, l'evento Current per il record successivo rispetto all'ultimo eliminato e gli eventi Enter e GotFocus per il primo controllo di tale record non si verificano fino all'avvenuta eliminazione di tutti i record. In altre parole, per ogni record selezionato si verifica un evento Delete, ma non si verificano altri eventi fino all'avvenuta eliminazione di tutti i record selezionati. Anche l'evento AfterDelConfirm non si verifica fino all'avvenuta eliminazione di tutti i record selezionati.
È possibile eliminare uno o più record contemporaneamente.
L'evento Eliminazione si verifica dopo l'eliminazione di ciascun record.
In tal modo si consente l'accesso ai dati di ciascun record prima dell'effettiva eliminazione e la conferma o l'annullamento selettivo di ogni eliminazione nella macro o nella routine evento Eliminazione.
Quando si elimina più di un record, l'evento Corrente per il record successivo all'ultimo eliminato e gli eventi Invio e Attivato per il primo controllo di tale record non si verificano fino all'avvenuta eliminazione di tutti i record.
Un evento Eliminazione, cioè, si verifica per ciascun record selezionato, ma non si verificano altri eventi fino all'avvenuta eliminazione di tutti i record selezionati.
Anche l'evento AfterDelConfirm non si verifica fino all'avvenuta eliminazione di tutti i record selezionati.
È possibile utilizzare una macro dell'evento Delete per visualizzare la finestra di dialogo Conferma eliminazione in cui viene richiesta conferma dell'eliminazione del record prima che il record venga eliminato.
È possibile utilizzare una macro dell'evento BeforeDelConfirm o AfterDelConfirm in risposta a ogni eliminazione di record. Tuttavia, le macro dell'evento BeforeDelConfirm e AfterDelConfirm non consentono di impostare l'argomento che determina la visualizzazione della finestra di dialogo Conferma eliminazione né di restituire l'argomento che indica lo stato dell'eliminazione. Di conseguenza, per questi eventi vengono in genere utilizzate routine evento.
È possibile utilizzare l'azione AnnullaEvento in una macro dell'evento Delete per annullare l'eliminazione.
È possibile utilizzare l'azione AnnullaEvento in una macro dell'evento BeforeDelConfirm per annullare l'eliminazione di tutti i record eliminati. In questo caso, la finestra Conferma eliminazione non verrà visualizzata. Tuttavia, l'evento AfterDelConfirm si verifica anche se si annulla l'evento BeforeDelConfirm.
È possibile utilizzare l'azione AnnullaEvento in una macro dell'evento BeforeDelConfirm per annullare l'eliminazione di tutti i record eliminati.
In questo caso, la finestra Conferma eliminazione non verrà visualizzata.
Tuttavia, l'evento AfterDelConfirm si verifica anche se si annulla l'evento BeforeDelConfirm.
Non è possibile utilizzare l'azione AnnullaEvento in una macro dell'evento AfterDelConfirm.
Nell'esempio riportato di seguito viene illustrato l'utilizzo della routine evento BeforeDelConfirm per eliminare la finestra di dialogo Conferma eliminazione e visualizzare una finestra di dialogo personalizzata quando viene eliminato un record. Viene inoltre illustrato l'utilizzo della routine evento AfterDelConfirm per visualizzare un messaggio che indica se l'eliminazione è avvenuta nel modo consueto oppure se l'eliminazione è stata annullata in Visual Basic o dall'utente.
Nell'esempio riportato di seguito viene illustrato l'utilizzo della routine evento BeforeDelConfirm per eliminare la finestra di dialogo Conferma eliminazione e visualizzare una finestra di dialogo personalizzata quando viene eliminato un record.
Viene inoltre illustrato l'utilizzo della routine evento AfterDelConfirm per visualizzare un messaggio che indica se l'eliminazione è avvenuta nel modo consueto oppure se l'eliminazione è stata annullata in Visual Basic o dall'utente.
AfterFinalRender, evento
Si verifica dopo il rendering di tutti gli elementi nella visualizzazione Grafico pivot specificata.
drawObject Un oggetto ChChartDraw . Utilizzare i metodi e le proprietà di questo oggetto per disegnare oggetti nel grafico.
drawObject Un oggetto ChChartDraw .
Utilizzare i metodi e le proprietà di questo oggetto per disegnare oggetti nel grafico.
Nell'esempio riportato di seguito viene illustrata la sintassi di una subroutine per l'intercettazione dell'evento AfterFinalRender.
AfterInsert, evento
L'evento DopoInserimento si verifica dopo l'aggiunta di un nuovo record.
L'impostazione del valore di un controllo tramite una macro o Visual Basic non attiva tali eventi.
È possibile utilizzare una macro o una routine evento AfterInsert per rieseguire una query su un set di record ogni volta che viene aggiunto un nuovo record.
Per eseguire una macro o una routine evento quando si verifica l'evento AfterInsert, impostare la proprietà OnAfterInsert sul nome della macro o su [Event Procedure].
È possibile utilizzare le macro per visualizzare messaggi o informazioni utili. Ad esempio, tramite la macro dell'evento BeforeInsert è possibile visualizzare i dati necessari per l'immissione di un nuovo record.
È possibile utilizzare le macro per visualizzare messaggi o informazioni utili.
Ad esempio, tramite la macro dell'evento BeforeInsert è possibile visualizzare i dati necessari per l'immissione di un nuovo record.
È possibile utilizzare l'azione AnnullaEvento in una macro dell'evento BeforeInsert per annullare la creazione del nuovo record. Quando si utilizza l'azione AnnullaEvento in una macro dell'evento BeforeInsert, lo stato attivo viene spostato sul nuovo record, che risulta vuoto in quanto il testo immesso è stato eliminato.
BeforeQuery, evento
È possibile utilizzare l'azione AnnullaEvento in una macro dell'evento BeforeInsert per annullare la creazione del nuovo record.
Quando si utilizza l'azione AnnullaEvento in una macro dell'evento BeforeInsert, lo stato attivo viene spostato sul nuovo record, che risulta vuoto in quanto il testo immesso è stato eliminato.
Si verifica quando la visualizzazione Tabella pivot specificata invia query all'origine dati associata.
Private SubForm_BeforeQuery ()
Questo evento si verifica con relativa frequenza. Alcuni esempi di azione che attivano questo evento includono l'aggiunta di campi alla visualizzazione Tabella pivot, lo spostamento dei campi, l'ordinamento e il filtraggio dei dati.
Questo evento si verifica con relativa frequenza.
Non è possibile utilizzare l'azione AnnullaEvento in una macro dell'evento AfterInsert.
Nell'esempio riportato di seguito viene illustrato come è possibile utilizzare una routine evento BeforeInsert per verificare se si desidera creare un nuovo record e una routine evento AfterInsert per rieseguire una query sull'origine record per la maschera Employees dopo l'aggiunta di un nuovo record.
Per provare l'esempio, aggiungere la routine evento riportata di seguito a una maschera chiamata Impiegati, basata su una tabella o su una query. Passare alla visualizzazione Foglio dati della maschera e provare a inserire un record.
Per provare l'esempio, aggiungere la routine evento riportata di seguito a una maschera chiamata Impiegati, basata su una tabella o su una query.
Passare alla visualizzazione Foglio dati della maschera e provare a inserire un record.
AfterLayout, evento
Si verifica dopo il completamento del layout di tutti i grafici nella visualizzazione Grafico pivot specificata, ma prima del relativo rendering.
Durante questo evento, è possibile riposizionare gli oggetti ChTitle , ChLegend , ChChart e ChAxis di ogni visualizzazione Grafico pivot modificandone le proprietà Left e Top . È possibile riposizionare l'oggetto ChPlotArea modificandone le proprietà Left , Top , Right e Bottom . Non è possibile modificare queste proprietà al di fuori dell'evento.
Durante questo evento, è possibile riposizionare gli oggetti ChTitle , ChLegend , ChChart e ChAxis di ogni visualizzazione Grafico pivot modificandone le proprietà Left e Top .
È possibile riposizionare l'oggetto ChPlotArea modificandone le proprietà Left , Top , Right e Bottom .
Non è possibile modificare queste proprietà al di fuori dell'evento.
Nell'esempio riportato di seguito viene illustrata la sintassi di una subroutine per l'intercettazione dell'evento AfterLayout.
AfterRender, evento
Si verifica dopo il rendering dell'oggetto rappresentato dall'argomento chartObject .
chartObject L'oggetto di cui è appena stato eseguito il rendering. Utilizzare la funzione TypeName per determinare il tipo di oggetto di cui è stato appena eseguito il rendering.
chartObject L'oggetto di cui è appena stato eseguito il rendering.
Utilizzare la funzione TypeName per determinare il tipo di oggetto di cui è stato appena eseguito il rendering.
Nell'esempio seguente viene illustrata la sintassi di una subroutine per l'intercettazione dell'evento AfterRender.
Restituisce o imposta la macro, la routine evento o la funzione definita dall'utente eseguita quando si verifica l'evento AfterUpdate . Elemento String in lettura e scrittura.
AfterUpdate, evento
L'evento DopoAggiornamento si verifica dopo l'aggiornamento dei dati modificati in un controllo o record.
Private Sub oggetto_AfterUpdate()
Oggetto Il nome di una maschera o di un controllo.
La modifica dei dati di un controllo tramite Visual Basic o una macro che include l'azione ImpostaValore non attiva questi eventi nel controllo. Se tuttavia si passa a un altro record o si salva il record, si verifica l'evento AfterUpdate della maschera .
La modifica dei dati di un controllo tramite Visual Basic o una macro che include l'azione ImpostaValore non attiva questi eventi nel controllo.
Se tuttavia si passa a un altro record o si salva il record, si verifica l'evento AfterUpdate della maschera .
L'evento AfterUpdate si applica solo ai controlli di una maschera e non ai controlli di un report .
Questo evento non si applica a pulsanti di opzione , caselle di controllo o interruttori di un gruppo di opzioni , ma soltanto al gruppo di opzioni.
Nell'esempio riportato di seguito, la routine evento Click è associata alla casella di controllo ReadOnly. La routine evento imposta le proprietà Enabled e Locked di un altro controllo nella maschera, ovvero la casella di testo Amount. Quando viene fatto clic sulla casella di controllo, la routine evento verifica se la casella di controllo viene selezionata o deselezionata e quindi imposta di conseguenza le proprietà della casella di testo per l'attivazione o la disattivazione delle modifiche.
Nell'esempio riportato di seguito, la routine evento Click è associata alla casella di controllo ReadOnly.
L'evento Activate si verifica prima dell'evento GotFocus e l'evento Deactivate si verifica dopo l'evento LostFocus .
Si verifica quando un filtro viene applicato a una maschera.
. ApplyFilter ( Annullamento , TipoApplicazione )
L'impostazione determina se l'evento ApplyFilter si verifica o meno. L'impostazione dell'argomento Annullamento su True annulla l'evento ApplyFilter e il filtro non viene applicato alla maschera.
Variabile che rappresenta un oggetto ComboBox .
L'evento Change si verifica quando viene modificato il contenuto del controllo specificato.
Gli eventi BeforeUpdate e AfterUpdate per il controllo casella di testo o casella combinata si verificano dopo aver immesso nel controllo i dati nuovi o modificati e dopo essere passati a un altro controllo oppure dopo aver scelto Salva record dal menu Record , quindi dopo tutti gli eventi Change per il controllo.
Nelle caselle combinate la cui proprietà LimitToList è impostata su Sì, l'evento NotInList si verifica dopo aver immesso un valore non presente nell'elenco e dopo aver provato a passare a un altro controllo o aver salvato il record. L'evento si verifica dopo tutti gli eventi Change per la casella combinata. In tal caso, gli eventi BeforeUpdate e AfterUpdate per la casella combinata non si verificano, poiché non viene accettato un valore non presente nell'elenco.
Per eseguire una macro o una routine evento quando si verifica questo evento, impostare la proprietà AfterUpdate sul nome della macro o su [Routine evento].
L'evento AfterUpdate viene attivato quando si aggiorna un controllo o un record. All'interno di un record i dati modificati in ogni controllo vengono aggiornati quando il controllo perde lo stato attivo o quando si preme INVIO o il tasto di tabulazione. Quando il record perde lo stato attivo o si sceglie Salva record dal menu Record , l'intero record viene aggiornato e i dati vengono salvati nel database.
L'evento AfterUpdate viene attivato quando si aggiorna un controllo o un record.
All'interno di un record i dati modificati in ogni controllo vengono aggiornati quando il controllo perde lo stato attivo oppure quando si preme INVIO o TAB.
Le macro e le routine evento AfterUpdate vengono eseguite solo se si modificano i dati in un controllo. Questo evento non si verifica quando viene modificato un valore di un controllo calcolato . Le macro e le routine evento AfterUpdate per una maschera vengono eseguite solo se si modificano i dati in uno o più controlli del record.
AttachmentCurrent, evento
Si verifica quando lo stato attivo si sposta su un file o da un file incluso nel controllo Attachment , rendendolo l'allegato attivo oppure quando una maschera viene aggiornata o viene rieseguita una query su di essa.
Variabile che rappresenta un oggetto Attachment .
L'esecuzione di una macro o una routine evento quando si verifica l'evento AttachmentCurrent consente di visualizzare un messaggio o sincronizzare i controlli della maschera correlata all'allegato corrente.
L'evento BeforeUpdate si verifica prima che i dati modificati in un controllo o record vengano aggiornati.
Quando il record perde lo stato attivo o si sceglie Salva record dal menu Record , l'intero record viene aggiornato e i dati vengono salvati nel database.
Quando si immettono dati nuovi o modificati in un controllo di una maschera e ci si sposta su un altro record o si salva il record scegliendo Salva record dal menu Record , l'evento AfterUpdate relativo alla maschera si verifica immediatamente dopo lo stesso evento relativo al controllo. Quando ci si sposta su un altro record, si verificano gli eventi Exit e LostFocus per il controllo, seguiti dall'evento Current per il record sul quale ci si è spostati e dagli eventi Enter e GotFocus per il primo controllo del record. Per eseguire macro o routine evento AfterUpdate senza eseguire le macro o le routine evento Exit e LostFocus, salvare il record scegliendo Salva record dal menu Record .
Quando si immettono dati nuovi o modificati in un controllo di una maschera e ci si sposta su un altro record o si salva il record scegliendo Salva record dal menu Record , l'evento AfterUpdate relativo alla maschera si verifica immediatamente dopo lo stesso evento relativo al controllo.
Quando ci si sposta su un altro record, si verificano gli eventi Exit e LostFocus per il controllo, seguiti dall'evento Current per il record sul quale ci si è spostati e dagli eventi Enter e GotFocus per il primo controllo del record.
Per eseguire macro o routine evento AfterUpdate senza eseguire le macro o le routine evento Exit e LostFocus, salvare il record scegliendo Salva record dal menu Record .
Le macro e le routine evento AfterUpdate vengono eseguite soltanto se si modificano i dati in un controllo e non si verificano quando viene modificato un valore di un controllo calcolato . Nel caso delle maschere, tali macro e routine evento vengono eseguite soltanto se si modificano i dati di uno o più controlli del record.
Per i controlli associati , la proprietà Vecchio valore non viene impostata al valore aggiornato fino a quando non si verifica l'evento DopoAggiornamento per la maschera. Anche se si immette un nuovo valore nel controllo, l'impostazione della proprietà Vecchio valore non viene modificata finché non vengono salvati i dati e viene aggiornato il record. Se si annulla un aggiornamento, il valore della proprietà Vecchio valore sostituisce il valore esistente nel controllo.
Per i controlli associati , la proprietà Vecchio valore non viene impostata al valore aggiornato fino a quando non si verifica l'evento DopoAggiornamento per la maschera.
Anche se si immette un nuovo valore nel controllo, l'impostazione della proprietà OldValue non viene modificata fino a quando non vengono salvati i dati e viene aggiornato il record.
Se si annulla un aggiornamento, il valore della proprietà OldValue sostituisce il valore esistente nel controllo.
L'evento BeforeUpdate viene spesso utilizzato per la convalida di dati, soprattutto quando si eseguono operazioni di convalida complesse, ad esempio con operazioni che comportano:
Presenza di riferimenti a controlli in altre maschere o di funzioni definite dall'utente.
In una maschera l'evento DblClick si verifica quando si fa doppio clic su un'area vuota o su un selettore di record della maschera, mentre per un controllo questo evento si verifica quando si fa doppio clic su un controllo o sulla relativa etichetta nella visualizzazione Maschera . L'evento DblClick si verifica quando si fa doppio clic sulla maschera o sul controllo, ma prima che si verifichi il risultato dell'azione del doppio clic, ad esempio prima che venga selezionata la parola all'interno della quale si trova il punto di inserimento all'interno di una casella di testo .
Nell'esempio seguente viene illustrato l'utilizzo di una routine evento DblClick per aprire una maschera che consente di visualizzare record della tabella corrispondente all'origine delle righe di una casella combinata. Quando si fa doppio clic sulla casella combinata relativa ai venditori nella maschera Orders, viene aperta la maschera Employees, in cui viene visualizzato il record per il dipendente selezionato nella casella combinata.
Nell'esempio seguente viene illustrato l'utilizzo di una routine evento DblClick per aprire una maschera che consente di visualizzare record della tabella corrispondente all'origine delle righe di una casella combinata.
Se si tenta di modificare i dati contenuti nel controllo che ha generato l'evento BeforeUpdate , si verificherà un errore di run-time.
Per eseguire operazioni di convalida semplici o complesse, ad esempio quelle che richiedono un valore in un campo o che convalidano più controlli in una maschera, è possibile utilizzare la proprietà ValidationRule per i controlli e le proprietà ValidationRule e Required per i campi e i record delle tabelle.
È possibile utilizzare macro dell'evento BeforeUpdate se si desidera memorizzare tutte le convalide relative a una maschera in un solo gruppo di macro o se si utilizza un'espressione di convalida in più maschere.
Si supponga, ad esempio, che in una maschera l'utente inserisca il nome di un paese in un controllo Paese e il codice di avviamento postale corrispondente nel controllo CAP. È possibile utilizzare le espressioni condizionali nella macro per verificare che i dati inseriti nel controllo Paese corrispondano ai dati immessi nel controllo CAP e per visualizzare un messaggio qualora i dati inseriti nel controllo CAP non fossero validi.
Si supponga, ad esempio, che in una maschera l'utente inserisca il nome di un paese in un controllo Paese e il codice di avviamento postale corrispondente nel controllo CAP.
È possibile utilizzare le espressioni condizionali nella macro per verificare che i dati inseriti nel controllo Paese corrispondano ai dati immessi nel controllo CAP e per visualizzare un messaggio qualora i dati inseriti nel controllo CAP non fossero validi.
È possibile utilizzare una macro dell'evento AfterUpdate per visualizzare una pagina diversa nella maschera o spostare lo stato attivo su un controllo o un record specifico. Ad esempio, quando l'utente inserisce un valore in un controllo Categoria di una maschera, è possibile utilizzare l'azione VaiAPagina in una macro dell'evento AfterUpdate per spostare lo stato attivo sulla pagina della maschera che contiene i controlli per tale categoria.
È possibile utilizzare una macro dell'evento AfterUpdate per visualizzare una pagina diversa nella maschera o spostare lo stato attivo su un controllo o un record specifico.
Ad esempio, quando l'utente inserisce un valore in un controllo Categoria di una maschera, è possibile utilizzare l'azione VaiAPagina in una macro dell'evento AfterUpdate per spostare lo stato attivo sulla pagina della maschera che contiene i controlli per tale categoria.
È possibile utilizzare l'azione AnnullaEvento in una macro dell'evento BeforeUpdate per annullare l'eliminazione. Se la macro dell'evento BeforeUpdate è associata a un controllo, l'azione AnnullaEvento sposta nuovamente lo stato attivo sul controllo e i dati inseriti dall'utente restano nel controllo.
È possibile utilizzare l'azione AnnullaEvento in una macro dell'evento BeforeUpdate per annullare l'eliminazione.
Se la macro dell'evento BeforeUpdate è associata a un controllo, l'azione AnnullaEvento sposta nuovamente lo stato attivo sul controllo e i dati inseriti dall'utente restano nel controllo.
Se una macro dell'evento BeforeUpdate è associata a una maschera (in cui viene eseguita ogni volta che un record viene modificato), l'azione AnnullaEvento sposta nuovamente lo stato attivo sul record.
Non è possibile utilizzare l'azione AnnullaEvento in una macro dell'evento AfterUpdate per annullare l'evento AfterUpdate.
ApplyFilter, evento
L'evento ApplicazioneFiltro può verificarsi in un progetto di Microsoft Access (adp) o in un database di Microsoft Access (mdb).
In un database di Access un evento ApplicazioneFiltro si verifica quando si esegue una delle azioni riportate di seguito.
Si sceglie Applica filtro/ordina dal menu Record in visualizzazione Maschera o Applica filtro/ordina dal menu Filtro nella finestra Filtro oppure si fa clic sul pulsante Applica filtro sulla barra degli strumenti . Questa procedura è valida per il filtro creato più di recente tramite la funzione di Filtro in base a maschera o la finestra Ordinamento/filtro avanzato .
Si sceglie Applica filtro/ordina dal menu Record in visualizzazione Maschera o Applica filtro/ordina dal menu Filtro nella finestra Filtro oppure si fa clic sul pulsante Applica filtro sulla barra degli strumenti .
Questa procedura è valida per il filtro creato più di recente tramite la funzione di Filtro in base a maschera o la finestra Ordinamento/filtro avanzato .
Si sceglie Filtro dal menu Record , quindi Filtro in base a selezione in visualizzazione Maschera oppure si fa clic sul pulsante Filtro in base a selezione sulla barra degli strumenti. In questo modo viene applicato un filtro in base alla selezione corrente nella maschera .
Si sceglie Filtro dal menu Record , quindi Filtro in base a selezione in visualizzazione Maschera oppure si fa clic sul pulsante Filtro in base a selezione sulla barra degli strumenti.
In questo modo viene applicato un filtro in base alla selezione corrente nella maschera .
Si sceglie Filtro dal menu Record , quindi Filtro ad esclusione selezione in visualizzazione Maschera. In questo modo viene applicato un filtro che esclude la selezione corrente nella maschera.
Si sceglie Filtro dal menu Record , quindi Filtro ad esclusione selezione in visualizzazione Maschera.
In questo modo viene applicato un filtro che esclude la selezione corrente nella maschera.
Si sceglie Rimuovi filtro/Ordina dal menu Record in visualizzazione Maschera oppure si fa clic sul pulsante Rimuovi filtro sulla barra degli strumenti. In questo modo viene rimosso qualsiasi filtro o ordinamento applicato alla maschera.
Si sceglie Rimuovi filtro/Ordina dal menu Record in visualizzazione Maschera oppure si fa clic sul pulsante Rimuovi filtro sulla barra degli strumenti.
In questo modo viene rimosso qualsiasi filtro o ordinamento applicato alla maschera.
L'evento ApplyFilter non si verifica quando viene rimosso un filtro nelle sottomaschere. In questo caso, l'evento ApplyFilter si verifica nella maschera padre.
L'evento ApplyFilter non si verifica quando viene rimosso un filtro nelle sottomaschere.
In questo caso, l'evento ApplyFilter si verifica nella maschera padre.
Si sceglie Filtro in base a selezione , Filtro ad esclusione selezione o Rimuovi filtro/ordina oppure si immette un valore o un' espressione nella casella Filtro per del menu di scelta rapida quando lo stato attivo si trova su un controllo associato .
Si chiude la finestra Ordinamento/filtro avanzato o Filtro in base a maschera.
Si sceglie Ordinamento/filtro avanzato dal menu Filtro quando la finestra Filtro in base a maschera è aperta oppure si sceglie Filtro in base a maschera dal menu Filtro quando è aperta la finestra Ordinamento/filtro avanzato. In tal modo l'evento ApplicazioneFiltro si verifica quando viene chiusa la finestra di filtro aperta e l'evento Filtro si verifica quando viene aperta l'altra finestra di filtro.
Si sceglie Ordinamento/filtro avanzato dal menu Filtro quando la finestra Filtro in base a maschera è aperta oppure Filtro in base a maschera dal menu Filtro quando la finestra Ordinamento/filtro avanzato è aperta.
In tal modo l'evento ApplicazioneFiltro si verifica quando viene chiusa la finestra di filtro aperta e l'evento Filtro si verifica quando viene aperta l'altra finestra di filtro.
In un progetto di Access un evento ApplicazioneFiltro si verifica quando si esegue una delle azioni riportate di seguito.
Si sceglie Applica filtro/ordina dal menu Record in visualizzazione Maschera o si sceglie Applica filtro/ordina dal menu Filtro nella finestra Filtro oppure si fa clic sul pulsante Applica filtro sulla barra degli strumenti. In questo modo viene applicato il filtro creato più di recente con la funzione di Filtro in base a maschera.
Si sceglie Applica filtro/ordina dal menu Record in visualizzazione Maschera o si sceglie Applica filtro/ordina dal menu Filtro nella finestra Filtro oppure si fa clic sul pulsante Applica filtro sulla barra degli strumenti.
In questo modo viene applicato il filtro creato più di recente con la funzione di Filtro in base a maschera.
Si sceglie Applica filtro su server dal menu Record in visualizzazione Maschera o si sceglie Applica filtro su server dal menu Filtro nella finestra Filtro oppure si fa clic sul pulsante Applica filtro su server sulla barra degli strumenti. In questo modo viene applicato il filtro creato più di recente con la funzione di Filtro su server in base a maschera .
Si sceglie Applica filtro su server dal menu Record in visualizzazione Maschera o si sceglie Applica filtro su server dal menu Filtro nella finestra Filtro oppure si fa clic sul pulsante Applica filtro su server sulla barra degli strumenti.
In questo modo viene applicato il filtro creato più di recente con la funzione di Filtro su server in base a maschera .
Si sceglie Filtro dal menu Record , quindi Filtro in base a selezione in visualizzazione Maschera oppure si fa clic sul pulsante Filtro in base a selezione sulla barra degli strumenti. In questo modo viene applicato un filtro basato sulla selezione corrente nella maschera.
In questo modo viene applicato un filtro basato sulla selezione corrente nella maschera.
Si fa clic sul pulsante Filtro in base a selezione o Filtro ad esclusione selezione oppure si immette un valore o un'espressione nella casella Filtro per del menu di scelta rapida quando un controllo associato è attivo.
Per eseguire una macro o una routine evento quando si verifica l'evento, impostare la proprietà Su applicazione filtro al nome della macro o a [Routine Evento].
È possibile utilizzare l'evento ApplicazioneFiltro per:
Accertarsi che il filtro applicato sia corretto. È possibile ad esempio accertarsi che i filtri applicati a una maschera Orders includano i criteri di limitazione per il campo OrderDate. A tale scopo verificare il valore della proprietà Filter o ServerFilter della maschera per assicurarsi che i criteri siano inclusi nell'espressione della proposizione WHERE .
Accertarsi che il filtro applicato sia corretto.
Ad esempio, è possibile accertarsi che i filtri applicati a una maschera Ordini includano criteri di limitazione per il campo Data ordine.
A tale scopo verificare il valore della proprietà Filter o ServerFilter della maschera per assicurarsi che i criteri siano inclusi nell'espressione della proposizione WHERE .
Modificare la visualizzazione della maschera prima di applicare il filtro. Quando ad esempio si applica un determinato filtro, è possibile disattivare o nascondere alcuni campi non adatti per i record visualizzati dal filtro.
Modificare la visualizzazione della maschera prima di applicare il filtro.
Ad esempio, quando si applica un filtro specifico, è possibile disattivare o nascondere alcuni campi non adatti per i record visualizzati dal filtro.
Annullare o modificare le azioni eseguite quando si è verificato l'evento Filtro. Durante la creazione del filtro è possibile ad esempio disattivare o nascondere alcuni controlli della maschera che non si desidera includere nei criteri del filtro e attivarli o mostrarli dopo che il filtro è stato applicato.
Le azioni nella macro ApplicaFiltro o nella routine evento hanno luogo prima dell'applicazione o rimozione del filtro oppure dopo la chiusura della finestra Ordinamento/filtro avanzato, Filtro in base a maschera o Filtro su server in base a maschera, ma prima che la maschera venga rivisualizzata. I criteri immessi nel nuovo filtro sono disponibili per la macro ApplicaFiltro o la routine evento come impostazioni della proprietà Filtro o Filtro su server .
Le azioni nella macro ApplicaFiltro o nella routine evento hanno luogo prima dell'applicazione o rimozione del filtro oppure dopo la chiusura della finestra Ordinamento/filtro avanzato, Filtro in base a maschera o Filtro su server in base a maschera, ma prima che la maschera venga rivisualizzata.
I criteri immessi nel nuovo filtro sono disponibili per la macro ApplicaFiltro o la routine evento come impostazioni della proprietà Filtro o Filtro su server .
L'evento ApplicazioneFiltro non si verifica quando si esegue una delle operazioni indicate di seguito.
Si applica o si rimuove un filtro utilizzando le azioni ApplicaFiltro , ApriMaschera o MostraOgniRecord in una macro oppure i corrispondenti metodi dell'oggetto DoCmd in Visual Basic.
Si utilizza l'azione Chiudi o il metodo Close dell'oggetto DoCmd per chiudere la finestra Ordinamento/filtro avanzato, Filtro in base a maschera o Filtro su server in base a maschera.
Si imposta la proprietà Filtro o Filtro su server oppure Applica filtro o Filtro su server da maschera in una macro o in Visual Basic, nonostante sia possibile impostarle in una macro ApplicaFiltro o in una routine evento.
L'esempio riportato di seguito mostra come nascondere i controlli ImportoDovuto, Imposte e TotaleDovuto su una maschera Ordini quando il filtro applicato limita i record soltanto agli ordini saldati.
Per eseguire questo esempio, aggiungere la seguente routine evento a una maschera Ordini che contiene i controlli ImportoDovuto, Imposte e TotaleDovuto. Eseguire un filtro che elenca soltanto gli ordini saldati.
Per eseguire questo esempio, aggiungere la seguente routine evento a una maschera Ordini che contiene i controlli ImportoDovuto, Imposte e TotaleDovuto.
Eseguire un filtro che elenca soltanto gli ordini saldati.
BeforeDelConfirm, evento
L'evento PrimaDiConfermaEliminazione si verifica dopo l'eliminazione dal buffer di uno o più record, ma prima che venga visualizzata una finestra di dialogo che richiede la conferma delle eliminazioni.
Cancel L'evento BeforeDelConfirm si verifica a seconda dell'impostazione di questo argomento. Se l'argomento Cancel viene impostato su True, l'evento BeforeDelConfirm viene annullato e viene impedita la visualizzazione della finestra di dialogo Conferma eliminazione. Se l'evento viene annullato, vengono ripristinati i record originali, tuttavia l'evento AfterDelConfirm si verifica comunque. Se Cancel viene impostato su True, l'argomento Response viene ignorato. Se Cancel viene impostato su False (0), ovvero l'impostazione predefinita, il valore dell'argomento Response viene utilizzato da Microsoft Access per determinare il tipo di risposta all'evento di eliminazione.
Cancel L'evento BeforeDelConfirm si verifica a seconda dell'impostazione di questo argomento.
Se l'argomento Cancel viene impostato su True, l'evento BeforeDelConfirm viene annullato e viene impedita la visualizzazione della finestra di dialogo Conferma eliminazione.
Se l'evento viene annullato, vengono ripristinati i record originali, tuttavia l'evento AfterDelConfirm si verifica comunque.
Se Cancel viene impostato su True, l'argomento Response viene ignorato.
Se Cancel viene impostato su False (0), ovvero l'impostazione predefinita, il valore dell'argomento Response viene utilizzato da Microsoft Access per determinare il tipo di risposta all'evento di eliminazione.
Response L'impostazione di questo argomento determina se in Microsoft Access verrà visualizzata la finestra di dialogo Conferma eliminazione in cui viene richiesta la conferma dell'eliminazione del record. L'argomento Response può essere impostato su una delle costanti intrinseche riportate di seguito:
Response L'impostazione di questo argomento determina se in Microsoft Access verrà visualizzata la finestra di dialogo Conferma eliminazione in cui viene richiesta la conferma dell'eliminazione del record.
L'argomento Response può essere impostato su una delle costanti intrinseche riportate di seguito:
acDataErrContinue Indica che la finestra di dialogo Conferma eliminazione non verrà visualizzata. Se l'argomento Cancel viene impostato su False e l'argomento Response su acDataErrContinue, in Microsoft Access i record verranno eliminati senza la richiesta di una conferma da parte dell'utente.
acDataErrContinue Indica che la finestra di dialogo Conferma eliminazione non verrà visualizzata.
Se l'argomento Cancel viene impostato su False e l'argomento Response su acDataErrContinue, in Microsoft Access i record verranno eliminati senza la richiesta di una conferma da parte dell'utente.
acDataErrDisplay (impostazione predefinita) Indica che la finestra di dialogo Conferma eliminazione verrà visualizzata.
Per eseguire una macro o una routine evento quando si verificano tali eventi, impostare la proprietà BeforeDelConfirm sul nome della macro o su [Routine evento].
Dopo l'eliminazione, i record vengono memorizzati in un buffer temporaneo. L'evento PrimaDiConfermaEliminazione si verifica dopo l'evento Eliminazione oppure, se è stato eliminato più di un record, dopo l'eliminazione di tutti i record tramite un evento Eliminazione per ciascun record, ma prima che venga visualizzata la finestra di dialogo Conferma eliminazione . Annullando l'evento PrimaDiConfermaEliminazione si ripristina il record o i record dal buffer e si impedisce la visualizzazione della finestra di dialogo Conferma eliminazione .
L'evento PrimaDiConfermaEliminazione si verifica dopo l'evento Eliminazione oppure, se è stato eliminato più di un record, dopo l'eliminazione di tutti i record tramite un evento Eliminazione per ciascun record, ma prima che venga visualizzata la finestra di dialogo Conferma eliminazione .
Annullando l'evento PrimaDiConfermaEliminazione si ripristina il record o i record dal buffer e si impedisce la visualizzazione della finestra di dialogo Conferma eliminazione .
L'evento AfterDelConfirm si verifica dopo l'effettiva eliminazione di un record o dei record o dopo l'annullamento di un'eliminazione o delle eliminazioni. Se l'evento BeforeDelConfirm non viene annullato, si verifica l'evento AfterDelConfirm dopo la visualizzazione della finestra di dialogo Conferma eliminazione . L'evento AfterDelConfirm si verifica anche se viene annullato l'evento l'evento BeforeDelConfirm.
È possibile eliminare uno o più record alla volta. L'evento Delete si verifica dopo l'eliminazione di ogni record. In tal modo è possibile accedere ai dati di ciascun record prima dell'effettiva eliminazione e confermare o annullare in modo selettivo ogni eliminazione nella macro o nella routine evento Delete. Quando si elimina più di un record, l'evento Current per il record successivo rispetto all'ultimo eliminato e gli eventi Enter e GotFocus per il primo controllo di tale record non si verificano fino all'avvenuta eliminazione di tutti i record. In altre parole, per ogni record selezionato si verifica un evento Delete, ma non si verificano altri eventi fino all'avvenuta eliminazione di tutti i record selezionati. Anche l'evento BeforeDelConfirm non si verifica fino all'avvenuta eliminazione di tutti i record selezionati.
Anche l'evento BeforeDelConfirm non si verifica fino all'avvenuta eliminazione di tutti i record selezionati.
BeforeInsert, evento
L'evento BeforeInsert si verifica quando si digita il primo carattere in un nuovo record , ma prima che il record venga effettivamente creato.
Cancel L'evento BeforeInsert si verifica a seconda dell'impostazione di questo argomento. Se l'argomento Cancel viene impostato su True (–1), l'evento BeforeInsert viene annullato.
Cancel L'evento BeforeInsert si verifica a seconda dell'impostazione di questo argomento.
Se l'argomento Cancel viene impostato su True (–1), l'evento BeforeInsert viene annullato.
Per eseguire una macro o una routine evento quando si verificano tali eventi, impostare la proprietà Prima di inserire o Dopo inserimento al nome della macro o a [Routine evento].
Gli eventi BeforeInsert e AfterInsert sono simili agli eventi BeforeUpdate e AfterUpdate . Questi eventi si verificano nell'ordine indicato di seguito:
Gli eventi BeforeInsert e AfterInsert sono simili agli eventi BeforeUpdate e AfterUpdate .
Questi eventi si verificano nell'ordine seguente:
Se il primo carattere di un nuovo record viene digitato in una casella di testo o in una casella combinata , l'evento BeforeInsert si verifica prima dell'evento Change .
Nella tabella seguente viene descritta l'interazione di questi eventi.
Evento
Si verifica
Prima di inserire
Quando si digita il primo carattere in un nuovo record.
Quando si aggiorna il record.
Quando il record è stato aggiornato.
Dopo inserimento
Quando il record aggiornato è nuovo.
Se il primo carattere in un nuovo record viene digitato in una casella di testo o in una casella combinata , l'evento PrimaDiInserire si verifica prima dell'evento Modifica .
Alcuni esempi di azione che attivano questo evento includono l'aggiunta di campi alla visualizzazione Tabella pivot, lo spostamento dei campi, l'ordinamento e il filtraggio dei dati.
Nell'esempio seguente viene illustrata la sintassi di una subroutine per l'intercettazione dell'evento BeforeQuery.
Riferimento all'oggetto ChChartDraw . Utilizzare la proprietà DrawType dell'oggetto restituito per determinare il tipo di rendering che verrà eseguito.
BeforeRender, evento
Si verifica prima del rendering di qualsiasi oggetto nella visualizzazione Grafico pivot specificata.
drawObject Un riferimento all'oggetto ChChartDraw . Utilizzare la proprietà DrawType dell'oggetto restituito per determinare il tipo di rendering che verrà eseguito.
drawObject Un riferimento all'oggetto ChChartDraw .
Utilizzare la proprietà DrawType dell'oggetto restituito per determinare il tipo di rendering che verrà eseguito.
chartObject L'oggetto di cui verrà eseguito il rendering. Utilizzare la funzione TypeName per determinare il tipo di oggetto.
chartObject L'oggetto di cui verrà eseguito il rendering.
Utilizzare la funzione TypeName per determinare il tipo di oggetto.
Cancel Impostare la proprietà Value di questo oggetto su True per annullare il rendering dell'oggetto della visualizzazione Grafico pivot.
Nell'esempio riportato di seguito viene illustrata la sintassi di una subroutine per l'intercettazione dell'evento BeforeRender.
BeforeScreenTip, evento
Si verifica prima della visualizzazione di una descrizione comando per un elemento in una visualizzazione Grafico pivot o Tabella pivot.
ScreenTipText Impostare la proprietà Value di questo oggetto sulla Descrizione comandi che si desidera visualizzare. Se si sostituisce questo argomento con una stringa vuota, la Descrizione comandi verrà nascosta.
ScreenTipText Impostare la proprietà Value di questo oggetto sulla Descrizione comandi che si desidera visualizzare.
Se si sostituisce questo argomento con una stringa vuota, la descrizione comando non verrà più visualizzata.
SourceObject L'oggetto che genera la Descrizione comandi.
BeforeUpdate, evento
L'evento PrimaDiAggiornare si verifica prima che i dati modificati in un controllo o record vengano aggiornati .
Private Sub oggetto_BeforeUpdate(Cancel As Integer)
Cancel L'evento BeforeUpdate si verifica a seconda dell'impostazione di questo argomento. Se l'argomento Cancel viene impostato su True (–1), l'evento BeforeUpdate viene annullato.
Cancel L'evento BeforeUpdate si verifica a seconda dell'impostazione di questo argomento.
Se l'argomento Cancel viene impostato su True (–1), l'evento BeforeUpdate viene annullato.
La modifica dei dati di un controllo tramite Visual Basic o una macro che include l'azione ImpostaValore non attiva questi eventi nel controllo. Se tuttavia si passa a un altro record o si salva il record, si verifica l'evento BeforeUpdate della maschera .
Se tuttavia si passa a un altro record o si salva il record, si verifica l'evento BeforeUpdate della maschera .
L'evento BeforeUpdate si applica solo ai controlli di una maschera e non ai controlli di un report .
L'evento BeforeUpdate non viene applicato a pulsanti di opzione , caselle di controllo o interruttori di un gruppo di opzioni , ma soltanto al gruppo di opzioni.
Per eseguire una macro o una routine evento quando si verificano tali eventi, impostare la proprietà BeforeUpdate sul nome della macro o su [Routine evento].
L'evento BeforeUpdate viene attivato quando si aggiorna un controllo o un record. All'interno di un record i dati modificati in ogni controllo vengono aggiornati quando il controllo perde lo stato attivo o quando si preme INVIO o il tasto di tabulazione. Quando il record perde lo stato attivo o si sceglie Salva record dal menu Record, l'intero record viene aggiornato e i dati vengono salvati nel database.
L'evento BeforeUpdate viene attivato quando si aggiorna un controllo o un record.
Quando il record perde lo stato attivo o si sceglie Salva record dal menu Record, l'intero record viene aggiornato e i dati vengono salvati nel database.
Quando si immettono dati nuovi o modificati in un controllo di una maschera e ci si sposta su un altro record o si salva il record scegliendo Salva record dal menu Record, l'evento BeforeUpdate relativo alla maschera si verifica immediatamente dopo lo stesso evento relativo al controllo. Quando ci si sposta su un altro record, si verificano gli eventi Exit e LostFocus per il controllo, seguiti dall'evento Current per il record sul quale ci si è spostati e dagli eventi Enter e GotFocus per il primo controllo del record. Per eseguire macro o routine evento BeforeUpdate senza eseguire le macro o le routine evento Exit e LostFocus, salvare il record scegliendo Salva record dal menu Record.
Quando si immettono dati nuovi o modificati in un controllo di una maschera e ci si sposta su un altro record o si salva il record scegliendo Salva record dal menu Record, l'evento BeforeUpdate relativo alla maschera si verifica immediatamente dopo lo stesso evento relativo al controllo.
Per eseguire macro o routine evento BeforeUpdate senza eseguire le macro o le routine evento Exit e LostFocus, salvare il record scegliendo Salva record dal menu Record.
Le macro e le routine evento BeforeUpdate vengono eseguite soltanto se si modificano i dati in un controllo e non si verificano quando viene modificato un valore di un controllo calcolato . Nel caso delle maschere, le macro e le routine evento BeforeUpdate vengono eseguite soltanto se si modificano i dati di uno o più controlli del record.
Per le maschere, è possibile utilizzare l'evento PrimaDiAggiornare per annullare l'aggiornamento di un record prima di effettuare lo spostamento su un altro record.
Se si immette un nuovo valore nel controllo, l'impostazione della proprietà OldValue non viene modificata finché i dati non vengono salvati e il record non viene aggiornato.
L'evento BeforeUpdate viene in genere utilizzato per convalidare i dati, in particolare quando si eseguono operazioni di convalida complesse, ad esempio quelle in cui si verificano le situazioni seguenti:
Condizioni per più di un valore in una maschera.
Visualizzazione di diversi messaggi di errore per diversi dati immessi.
Le operazioni di convalida possono essere ignorate dall'utente.
GotFocus (per il controllo della sottomaschera su cui si è spostato lo stato attivo)
Se il controllo a cui si passa nella sottomaschera aveva in precedenza lo stato attivo, non si verifica né l'evento Enter , né l'evento GotFocus , ma l'evento Enter per il controllo della sottomaschera.
Se si sposta lo stato attivo da un controllo di una sottomaschera a un controllo della maschera principale, gli eventi Exit e LostFocus per il controllo della sottomaschera non si verificano, ma si verificano solo l'evento Exit per il controllo della sottomaschera e gli eventi Enter e GotFocus per il controllo della maschera principale.
Riferimenti a controlli di altre maschere o a funzioni definite dall'utente.
Nota Per eseguire operazioni di convalida semplici o complesse, ad esempio quelle che richiedono un valore in un campo o che convalidano più controlli in una maschera, è possibile utilizzare la proprietà ValidationRule per i controlli e le proprietà ValidationRule e Required per i campi e i record delle tabelle.
Se si tenta di modificare i dati contenuti nel controllo che ha generato l'evento BeforeUpdate nella routine evento, si verificherà un errore di run-time.
L'esempio riportato di seguito illustra come utilizzare la routine evento PrimaDiAggiornare per verificare se il nome di un prodotto è già stato immesso nel database. Dopo aver digitato il nome di un prodotto nella casella NomeProdotto, il valore viene confrontato con il campo NomeProdotto della tabella Prodotti. Se questa tabella contiene un valore corrispondente, viene visualizzato un messaggio che informa che il nome del prodotto è già stato immesso.
L'esempio riportato di seguito illustra come utilizzare la routine evento PrimaDiAggiornare per verificare se il nome di un prodotto è già stato immesso nel database.
Dopo che si digita il nome di un prodotto nella casella ProductName, il valore viene confrontato con il campo ProductName della tabella Products.
Se nella tabella è presente un valore corrispondente, viene visualizzato un messaggio indicante che il nome del prodotto è già stato immesso.
Per provare l'esempio, aggiungere la routine evento seguente a una maschera denominata Products contenente la casella di testo ProductName.
Change, evento
L'evento Change si verifica quando il contenuto di una casella di testo o la parte di testo di una casella combinata viene modificato. Si verifica inoltre quando si passa da una pagina a un'altra di un controllo Struttura a schede .
L'evento Change si verifica quando il contenuto di una casella di testo o la parte di testo di una casella combinata viene modificato.
Si verifica inoltre quando si passa da una pagina a un'altra di un controllo Struttura a schede .
Private Sub oggetto _Change()
Oggetto Il nome di un controllo.
Tra i possibili utilizzi di questo evento vi sono l'immissione di un carattere direttamente nella casella di testo o nella casella combinata o la modifica dell'impostazione della proprietà Text del controllo tramite una macro o Visual Basic.
L'impostazione del valore di un controllo tramite una macro o Visual Basic non attiva questo evento per il controllo. È necessario digitare i dati direttamente nel controllo oppure impostarne la relativa proprietà Text .
Per eseguire una macro o una routine evento quando si verifica questo evento, impostare la proprietà OnChange sul nome della macro o su [Routine evento].
L'impostazione del valore di un controllo tramite una macro o Visual Basic non attiva questo evento per il controllo.
È necessario digitare i dati direttamente nel controllo oppure impostarne la relativa proprietà Text .
L'evento si applica solo ai controlli di una maschera e non ai controlli di un report .
Per eseguire una macro o una routine evento quando si verifica questo evento, impostare la proprietà Su modifica al nome della macro o a [Routine evento].
Eseguendo una macro o una routine evento quando si verifica un evento Modifica, è possibile coordinare la visualizzazione dei dati tra i controlli. È inoltre possibile visualizzare i dati o una formula in un controllo e i risultati in un altro controllo.
Eseguendo una macro o una routine evento quando si verifica un evento Modifica, è possibile coordinare la visualizzazione dei dati tra i controlli.
È inoltre possibile visualizzare i dati o una formula in un controllo e i risultati in un altro controllo.
L'evento Change non si verifica quando viene modificato un valore di un controllo calcolato.
È possibile che un evento Change provochi un evento a catena . Ciò si verifica quando una macro o una routine evento eseguita in risposta all'evento Change del controllo modifica il contenuto del controllo stesso, cambiando ad esempio l'impostazione di una proprietà che determina il valore del controllo, come la proprietà Text per una casella di testo. Per evitare il verificarsi di un evento a catena:
L'evento Click si verifica quando l'utente preme e rilascia un pulsante del mouse su un oggetto.
L'evento Click si applica solo a maschere e a sezioni e controlli di maschere e non ai controlli dei report .
Per eseguire una macro o una routine evento quando si verifica questo evento, impostare la proprietà OnClick sul nome della macro o su [Routine evento].
Fa clic su un controllo con il pulsante sinistro del mouse. L'evento non viene attivato facendo clic su un controllo con il pulsante destro o centrale del mouse.
Fa clic su un controllo contenente dati di collegamenti ipertestuali con il pulsante sinistro del mouse. L'evento non viene attivato facendo clic sul controllo con il pulsante destro o centrale del mouse. Quando l'utente sposta il puntatore del mouse su un controllo contenente dati di collegamenti ipertestuali, il puntatore assume la forma di una mano. Quando l'utente fa clic con il pulsante del mouse, si attiva il collegamento ipertestuale e quindi si verifica l'evento Click .
Quando l'utente fa clic con il pulsante del mouse, si attiva il collegamento ipertestuale e quindi si verifica l'evento Click .
È possibile che un evento Change provochi un evento a catena .
Se è necessario valutare se utilizzare l'evento Open o Load della macro o routine evento, una differenza significativa sta nel fatto che è possibile annullare l'evento Open , ma non l'evento Load . Se, ad esempio, si costruisce dinamicamente un'origine record per una maschera in una routine evento per l'evento Open della maschera, è possibile annullare l'apertura della maschera se non sono presenti record da visualizzare.
Se è necessario valutare se utilizzare l'evento Open o Load della macro o routine evento, una differenza significativa sta nel fatto che è possibile annullare l'evento Open , ma non l'evento Load .
Ciò si verifica quando una macro o una routine evento eseguita in risposta all'evento Change del controllo modifica il contenuto del controllo stesso, cambiando ad esempio l'impostazione di una proprietà che determina il valore del controllo, come la proprietà Text per una casella di testo.
Per evitare il verificarsi di un evento a catena:
Evitare, se possibile, di associare a un controllo una macro o una routine evento Change che modifichi il contenuto del controllo stesso.
Evitare di creare due o più controlli contenenti eventi Change che interferiscano tra loro, ad esempio due caselle di testo che si aggiornano a vicenda.
La modifica dei dati di una casella di testo o di una casella combinata utilizzando la tastiera fa in modo che si verifichino eventi di tastiera oltre agli eventi di controllo, come l'evento Change. Se, ad esempio, si passa a un nuovo record e si digita un carattere ANSI in una casella di testo nel record, gli eventi seguenti si verificano nell'ordine indicato:
La modifica dei dati di una casella di testo o di una casella combinata utilizzando la tastiera fa in modo che si verifichino eventi di tastiera oltre agli eventi di controllo, come l'evento Change.
Se si deseleziona la casella di controllo Modifiche record in Conferma nella scheda Avanzate della finestra di dialogo Opzioni di Access , disponibile facendo clic sul pulsante Microsoft Office e quindi su Opzioni di Access , gli eventi BeforeDelConfirm e AfterDelConfirm non si verificano e la finestra di dialogo Conferma eliminazione non viene visualizzata.
Se ad esempio ci si sposta su un nuovo record e si digita un carattere ANSI in una casella di testo del record, si verificheranno nell'ordine i seguenti eventi:
Nelle caselle combinate la cui proprietà LimitToList è impostata su Sì, l'evento NotInList si verifica dopo aver immesso un valore non presente nell'elenco e dopo aver provato a passare a un altro controllo o aver salvato il record.
L'evento Dirty si verifica quando viene modificato il contenuto del controllo specificato.
Gli eventi BeforeUpdate e AfterUpdate di un record si verificano dopo aver immesso nel record dati nuovi o modificati ed essere passati a un altro record oppure dopo aver scelto Salva record dal menu Record , pertanto dopo che si è verificato l'evento Dirty per il record.
L'evento Undo per i controlli si verifica ogni volta che l'utente ripristina lo stato originario di un controllo facendo clic sul pulsante Annulla campo/record sulla barra dei comandi, facendo clic sul pulsante Annulla , premendo ESC oppure chiamando il metodo Undo del controllo specificato. In tutti e quattro i casi, è necessario che lo stato attivo si trovi sul controllo. L'evento non si verifica se l'utente fa clic sul pulsante Annulla digitazione sulla barra dei comandi.
KeyDown> KeyPress > BeforeInsert > Dirty > KeyUp
Gli eventi BeforeUpdate e AfterUpdate per il controllo della casella di testo o della casella combinata si verificano dopo aver immesso nel controllo i dati nuovi o modificati e dopo essere passati a un altro controllo oppure dopo aver scelto Salva record dal menu Record , quindi dopo tutti gli eventi Change per il controllo.
Nelle caselle combinate la cui proprietà Solo in elenco è impostata a Sì, l'evento NonInElenco si verifica dopo aver immesso un valore non presente nell'elenco e dopo aver provato a passare a un altro controllo o aver salvato il record. L'evento si verifica dopo tutti gli eventi Modifica per la casella combinata. In tal caso, gli eventi PrimaDiAggiornare e DopoAggiornamento per la casella combinata non si verificano, poiché non viene accettato un valore non presente nell'elenco.
Nelle caselle combinate la cui proprietà Solo in elenco è impostata a Sì, l'evento NonInElenco si verifica dopo aver immesso un valore non presente nell'elenco e dopo aver provato a passare a un altro controllo o aver salvato il record.
L'evento si verifica dopo tutti gli eventi Change per la casella combinata.
In tal caso, gli eventi BeforeUpdate e AfterUpdate per la casella combinata non si verificano, poiché non viene accettato un valore non presente nell'elenco.
Click, evento
